CCS PCM C Compiler, Version 5.119, 5967               27-May-25 21:47

               Filename:   C:\Users\Admin\Documents\RTC_pic\9 Dong ho 6 LED 7 doan RTC\C\code_pic\CT_code_v3.lst

               ROM used:   5613 words (69%)
                           Largest free fragment is 2048
               RAM used:   85 (23%) at main() level
                           263 (71%) worst case
               Stack used: 6 locations (5 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  12
0001:  MOVWF  0A
0002:  GOTO   2B6
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  MOVLW  8C
0028:  MOVWF  04
0029:  BTFSS  00.0
002A:  GOTO   02D
002B:  BTFSC  0C.0
002C:  GOTO   052
002D:  BTFSS  0B.5
002E:  GOTO   031
002F:  BTFSC  0B.2
0030:  GOTO   055
0031:  MOVF   22,W
0032:  MOVWF  04
0033:  MOVF   23,W
0034:  MOVWF  77
0035:  MOVF   24,W
0036:  MOVWF  78
0037:  MOVF   25,W
0038:  MOVWF  79
0039:  MOVF   26,W
003A:  MOVWF  7A
003B:  MOVF   27,W
003C:  BSF    03.6
003D:  MOVWF  0D
003E:  BCF    03.6
003F:  MOVF   28,W
0040:  BSF    03.6
0041:  MOVWF  0F
0042:  BCF    03.6
0043:  MOVF   29,W
0044:  BSF    03.6
0045:  MOVWF  0C
0046:  BCF    03.6
0047:  MOVF   2A,W
0048:  BSF    03.6
0049:  MOVWF  0E
004A:  BCF    03.6
004B:  MOVF   20,W
004C:  MOVWF  0A
004D:  SWAPF  21,W
004E:  MOVWF  03
004F:  SWAPF  7F,F
0050:  SWAPF  7F,W
0051:  RETFIE
0052:  BCF    0A.3
0053:  BCF    0A.4
0054:  GOTO   058
0055:  BCF    0A.3
0056:  BCF    0A.4
0057:  GOTO   07C
.................... #include <16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
*
0085:  DATA EF,21
0086:  DATA 00,00
0087:  DATA 25,00
*
027C:  MOVLW  8E
027D:  MOVWF  77
027E:  BSF    03.6
027F:  MOVF   53,W
0280:  MOVWF  78
0281:  MOVF   52,W
0282:  MOVWF  79
0283:  CLRF   7A
0284:  MOVF   78,F
0285:  BTFSS  03.2
0286:  GOTO   291
0287:  MOVF   79,W
0288:  MOVWF  78
0289:  CLRF   79
028A:  MOVLW  08
028B:  SUBWF  77,F
028C:  MOVF   78,F
028D:  BTFSS  03.2
028E:  GOTO   291
028F:  CLRF   77
0290:  GOTO   299
0291:  BCF    03.0
0292:  BTFSC  78.7
0293:  GOTO   298
0294:  RLF    79,F
0295:  RLF    78,F
0296:  DECF   77,F
0297:  GOTO   291
0298:  BCF    78.7
0299:  BCF    03.6
029A:  RETURN
029B:  BSF    03.5
029C:  MOVF   20,W
029D:  BTFSC  03.2
029E:  GOTO   361
029F:  MOVWF  2C
02A0:  MOVF   24,W
02A1:  BTFSC  03.2
02A2:  GOTO   361
02A3:  SUBWF  2C,F
02A4:  BTFSS  03.0
02A5:  GOTO   2AB
02A6:  MOVLW  7F
02A7:  ADDWF  2C,F
02A8:  BTFSC  03.0
02A9:  GOTO   361
02AA:  GOTO   2B1
02AB:  MOVLW  81
02AC:  SUBWF  2C,F
02AD:  BTFSS  03.0
02AE:  GOTO   361
02AF:  BTFSC  03.2
02B0:  GOTO   361
02B1:  MOVF   2C,W
02B2:  MOVWF  77
02B3:  CLRF   78
02B4:  CLRF   79
02B5:  CLRF   7A
02B6:  CLRF   2B
02B7:  MOVF   21,W
02B8:  MOVWF  2A
02B9:  BSF    2A.7
02BA:  MOVF   22,W
02BB:  MOVWF  29
02BC:  MOVF   23,W
02BD:  MOVWF  28
02BE:  MOVLW  19
02BF:  MOVWF  2C
02C0:  MOVF   27,W
02C1:  SUBWF  28,F
02C2:  BTFSC  03.0
02C3:  GOTO   2D4
02C4:  MOVLW  01
02C5:  SUBWF  29,F
02C6:  BTFSC  03.0
02C7:  GOTO   2D4
02C8:  SUBWF  2A,F
02C9:  BTFSC  03.0
02CA:  GOTO   2D4
02CB:  SUBWF  2B,F
02CC:  BTFSC  03.0
02CD:  GOTO   2D4
02CE:  INCF   2B,F
02CF:  INCF   2A,F
02D0:  INCF   29,F
02D1:  MOVF   27,W
02D2:  ADDWF  28,F
02D3:  GOTO   306
02D4:  MOVF   26,W
02D5:  SUBWF  29,F
02D6:  BTFSC  03.0
02D7:  GOTO   2EF
02D8:  MOVLW  01
02D9:  SUBWF  2A,F
02DA:  BTFSC  03.0
02DB:  GOTO   2EF
02DC:  SUBWF  2B,F
02DD:  BTFSC  03.0
02DE:  GOTO   2EF
02DF:  INCF   2B,F
02E0:  INCF   2A,F
02E1:  MOVF   26,W
02E2:  ADDWF  29,F
02E3:  MOVF   27,W
02E4:  ADDWF  28,F
02E5:  BTFSS  03.0
02E6:  GOTO   306
02E7:  INCF   29,F
02E8:  BTFSS  03.2
02E9:  GOTO   306
02EA:  INCF   2A,F
02EB:  BTFSS  03.2
02EC:  GOTO   306
02ED:  INCF   2B,F
02EE:  GOTO   306
02EF:  MOVF   25,W
02F0:  IORLW  80
02F1:  SUBWF  2A,F
02F2:  BTFSC  03.0
02F3:  GOTO   305
02F4:  MOVLW  01
02F5:  SUBWF  2B,F
02F6:  BTFSC  03.0
02F7:  GOTO   305
02F8:  INCF   2B,F
02F9:  MOVF   25,W
02FA:  IORLW  80
02FB:  ADDWF  2A,F
02FC:  MOVF   26,W
02FD:  ADDWF  29,F
02FE:  BTFSS  03.0
02FF:  GOTO   2E3
0300:  INCF   2A,F
0301:  BTFSS  03.2
0302:  GOTO   2E3
0303:  INCF   2B,F
0304:  GOTO   2E3
0305:  BSF    7A.0
0306:  DECFSZ 2C,F
0307:  GOTO   309
0308:  GOTO   314
0309:  BCF    03.0
030A:  RLF    28,F
030B:  RLF    29,F
030C:  RLF    2A,F
030D:  RLF    2B,F
030E:  BCF    03.0
030F:  RLF    7A,F
0310:  RLF    79,F
0311:  RLF    78,F
0312:  RLF    2D,F
0313:  GOTO   2C0
0314:  BTFSS  2D.0
0315:  GOTO   31C
0316:  BCF    03.0
0317:  RRF    78,F
0318:  RRF    79,F
0319:  RRF    7A,F
031A:  RRF    2D,F
031B:  GOTO   31F
031C:  DECF   77,F
031D:  BTFSC  03.2
031E:  GOTO   361
031F:  BTFSC  2D.7
0320:  GOTO   348
0321:  BCF    03.0
0322:  RLF    28,F
0323:  RLF    29,F
0324:  RLF    2A,F
0325:  RLF    2B,F
0326:  MOVF   27,W
0327:  SUBWF  28,F
0328:  BTFSC  03.0
0329:  GOTO   334
032A:  MOVLW  01
032B:  SUBWF  29,F
032C:  BTFSC  03.0
032D:  GOTO   334
032E:  SUBWF  2A,F
032F:  BTFSC  03.0
0330:  GOTO   334
0331:  SUBWF  2B,F
0332:  BTFSS  03.0
0333:  GOTO   357
0334:  MOVF   26,W
0335:  SUBWF  29,F
0336:  BTFSC  03.0
0337:  GOTO   33F
0338:  MOVLW  01
0339:  SUBWF  2A,F
033A:  BTFSC  03.0
033B:  GOTO   33F
033C:  SUBWF  2B,F
033D:  BTFSS  03.0
033E:  GOTO   357
033F:  MOVF   25,W
0340:  IORLW  80
0341:  SUBWF  2A,F
0342:  BTFSC  03.0
0343:  GOTO   348
0344:  MOVLW  01
0345:  SUBWF  2B,F
0346:  BTFSS  03.0
0347:  GOTO   357
0348:  INCF   7A,F
0349:  BTFSS  03.2
034A:  GOTO   357
034B:  INCF   79,F
034C:  BTFSS  03.2
034D:  GOTO   357
034E:  INCF   78,F
034F:  BTFSS  03.2
0350:  GOTO   357
0351:  INCF   77,F
0352:  BTFSC  03.2
0353:  GOTO   361
0354:  RRF    78,F
0355:  RRF    79,F
0356:  RRF    7A,F
0357:  MOVF   21,W
0358:  MOVWF  2C
0359:  MOVF   25,W
035A:  XORWF  2C,F
035B:  BTFSS  2C.7
035C:  GOTO   35F
035D:  BSF    78.7
035E:  GOTO   365
035F:  BCF    78.7
0360:  GOTO   365
0361:  CLRF   77
0362:  CLRF   78
0363:  CLRF   79
0364:  CLRF   7A
0365:  BCF    03.5
0366:  RETURN
*
043B:  BSF    03.6
043C:  MOVF   56,W
043D:  BTFSC  03.2
043E:  GOTO   4AC
043F:  MOVWF  5E
0440:  MOVF   5A,W
0441:  BTFSC  03.2
0442:  GOTO   4AC
0443:  ADDWF  5E,F
0444:  BTFSC  03.0
0445:  GOTO   44D
0446:  MOVLW  7F
0447:  SUBWF  5E,F
0448:  BTFSS  03.0
0449:  GOTO   4AC
044A:  BTFSC  03.2
044B:  GOTO   4AC
044C:  GOTO   451
044D:  MOVLW  81
044E:  ADDWF  5E,F
044F:  BTFSC  03.0
0450:  GOTO   4AC
0451:  MOVF   5E,W
0452:  MOVWF  77
0453:  CLRF   78
0454:  CLRF   79
0455:  CLRF   7A
0456:  MOVF   57,W
0457:  MOVWF  62
0458:  BSF    62.7
0459:  MOVF   58,W
045A:  MOVWF  61
045B:  MOVF   59,W
045C:  MOVWF  60
045D:  MOVLW  18
045E:  MOVWF  5E
045F:  CLRF   5F
0460:  BTFSS  60.0
0461:  GOTO   47A
0462:  MOVF   5D,W
0463:  ADDWF  7A,F
0464:  BTFSS  03.0
0465:  GOTO   46C
0466:  INCF   79,F
0467:  BTFSS  03.2
0468:  GOTO   46C
0469:  INCF   78,F
046A:  BTFSC  03.2
046B:  BSF    5F.7
046C:  MOVF   5C,W
046D:  ADDWF  79,F
046E:  BTFSS  03.0
046F:  GOTO   473
0470:  INCF   78,F
0471:  BTFSC  03.2
0472:  BSF    5F.7
0473:  MOVF   5B,W
0474:  MOVWF  58
0475:  BSF    58.7
0476:  MOVF   58,W
0477:  ADDWF  78,F
0478:  BTFSC  03.0
0479:  BSF    5F.7
047A:  RLF    5F,F
047B:  RRF    78,F
047C:  RRF    79,F
047D:  RRF    7A,F
047E:  RRF    62,F
047F:  RRF    61,F
0480:  RRF    60,F
0481:  BCF    03.0
0482:  DECFSZ 5E,F
0483:  GOTO   45F
0484:  MOVLW  01
0485:  ADDWF  77,F
0486:  BTFSC  03.0
0487:  GOTO   4AC
0488:  BTFSC  78.7
0489:  GOTO   491
048A:  RLF    62,F
048B:  RLF    7A,F
048C:  RLF    79,F
048D:  RLF    78,F
048E:  DECF   77,F
048F:  BTFSC  03.2
0490:  GOTO   4AC
0491:  BTFSS  62.7
0492:  GOTO   4A2
0493:  INCF   7A,F
0494:  BTFSS  03.2
0495:  GOTO   4A2
0496:  INCF   79,F
0497:  BTFSS  03.2
0498:  GOTO   4A2
0499:  INCF   78,F
049A:  BTFSS  03.2
049B:  GOTO   4A2
049C:  RRF    78,F
049D:  RRF    79,F
049E:  RRF    7A,F
049F:  INCF   77,F
04A0:  BTFSC  03.2
04A1:  GOTO   4AC
04A2:  MOVF   57,W
04A3:  MOVWF  5F
04A4:  MOVF   5B,W
04A5:  XORWF  5F,F
04A6:  BTFSS  5F.7
04A7:  GOTO   4AA
04A8:  BSF    78.7
04A9:  GOTO   4B0
04AA:  BCF    78.7
04AB:  GOTO   4B0
04AC:  CLRF   77
04AD:  CLRF   78
04AE:  CLRF   79
04AF:  CLRF   7A
04B0:  BCF    03.6
04B1:  RETURN
04B2:  BTFSC  03.1
04B3:  GOTO   4B7
04B4:  MOVLW  B0
04B5:  MOVWF  04
04B6:  BCF    03.7
04B7:  CLRF   77
04B8:  CLRF   78
04B9:  CLRF   79
04BA:  CLRF   7A
04BB:  BSF    03.5
04BC:  CLRF   30
04BD:  CLRF   31
04BE:  CLRF   32
04BF:  CLRF   33
04C0:  MOVF   2F,W
04C1:  IORWF  2E,W
04C2:  IORWF  2D,W
04C3:  IORWF  2C,W
04C4:  BTFSC  03.2
04C5:  GOTO   4F6
04C6:  MOVLW  20
04C7:  MOVWF  34
04C8:  BCF    03.0
04C9:  RLF    28,F
04CA:  RLF    29,F
04CB:  RLF    2A,F
04CC:  RLF    2B,F
04CD:  RLF    30,F
04CE:  RLF    31,F
04CF:  RLF    32,F
04D0:  RLF    33,F
04D1:  MOVF   2F,W
04D2:  SUBWF  33,W
04D3:  BTFSS  03.2
04D4:  GOTO   4DF
04D5:  MOVF   2E,W
04D6:  SUBWF  32,W
04D7:  BTFSS  03.2
04D8:  GOTO   4DF
04D9:  MOVF   2D,W
04DA:  SUBWF  31,W
04DB:  BTFSS  03.2
04DC:  GOTO   4DF
04DD:  MOVF   2C,W
04DE:  SUBWF  30,W
04DF:  BTFSS  03.0
04E0:  GOTO   4F0
04E1:  MOVF   2C,W
04E2:  SUBWF  30,F
04E3:  MOVF   2D,W
04E4:  BTFSS  03.0
04E5:  INCFSZ 2D,W
04E6:  SUBWF  31,F
04E7:  MOVF   2E,W
04E8:  BTFSS  03.0
04E9:  INCFSZ 2E,W
04EA:  SUBWF  32,F
04EB:  MOVF   2F,W
04EC:  BTFSS  03.0
04ED:  INCFSZ 2F,W
04EE:  SUBWF  33,F
04EF:  BSF    03.0
04F0:  RLF    77,F
04F1:  RLF    78,F
04F2:  RLF    79,F
04F3:  RLF    7A,F
04F4:  DECFSZ 34,F
04F5:  GOTO   4C8
04F6:  MOVF   30,W
04F7:  MOVWF  00
04F8:  INCF   04,F
04F9:  MOVF   31,W
04FA:  MOVWF  00
04FB:  INCF   04,F
04FC:  MOVF   32,W
04FD:  MOVWF  00
04FE:  INCF   04,F
04FF:  MOVF   33,W
0500:  MOVWF  00
0501:  BCF    03.5
0502:  RETURN
*
0527:  MOVF   04,W
0528:  BSF    03.5
0529:  MOVWF  20
052A:  MOVF   73,W
052B:  MOVWF  22
052C:  BTFSC  03.2
052D:  GOTO   54D
052E:  MOVF   72,W
052F:  BCF    03.5
0530:  BSF    03.6
0531:  MOVWF  59
0532:  MOVF   71,W
0533:  MOVWF  58
0534:  MOVF   70,W
0535:  MOVWF  57
0536:  BCF    03.6
0537:  MOVF   6F,W
0538:  BSF    03.6
0539:  MOVWF  56
053A:  CLRF   5D
053B:  CLRF   5C
053C:  MOVLW  20
053D:  MOVWF  5B
053E:  MOVLW  82
053F:  MOVWF  5A
0540:  BCF    03.6
0541:  CALL   43B
0542:  MOVF   7A,W
0543:  MOVWF  72
0544:  MOVF   79,W
0545:  MOVWF  71
0546:  MOVF   78,W
0547:  MOVWF  70
0548:  MOVF   77,W
0549:  MOVWF  6F
054A:  BSF    03.5
054B:  DECFSZ 22,F
054C:  GOTO   52E
054D:  MOVF   72,W
054E:  MOVWF  2B
054F:  MOVF   71,W
0550:  MOVWF  2A
0551:  MOVF   70,W
0552:  MOVWF  29
0553:  BCF    03.5
0554:  MOVF   6F,W
0555:  BSF    03.5
0556:  MOVWF  28
0557:  MOVF   28,W
0558:  SUBLW  B6
0559:  MOVWF  28
055A:  CLRF   7A
055B:  MOVF   29,W
055C:  MOVWF  2C
055D:  BSF    29.7
055E:  BCF    03.0
055F:  RRF    29,F
0560:  RRF    2A,F
0561:  RRF    2B,F
0562:  RRF    7A,F
0563:  RRF    79,F
0564:  RRF    78,F
0565:  RRF    77,F
0566:  DECFSZ 28,F
0567:  GOTO   55E
0568:  BTFSS  2C.7
0569:  GOTO   575
056A:  COMF   77,F
056B:  COMF   78,F
056C:  COMF   79,F
056D:  COMF   7A,F
056E:  INCF   77,F
056F:  BTFSC  03.2
0570:  INCF   78,F
0571:  BTFSC  03.2
0572:  INCF   79,F
0573:  BTFSC  03.2
0574:  INCF   7A,F
0575:  MOVF   7A,W
0576:  MOVWF  72
0577:  MOVF   79,W
0578:  MOVWF  71
0579:  MOVF   78,W
057A:  MOVWF  70
057B:  MOVF   77,W
057C:  BCF    03.5
057D:  MOVWF  6F
057E:  BTFSS  72.7
057F:  GOTO   58F
0580:  BSF    03.5
0581:  DECF   20,F
0582:  BSF    20.5
0583:  BCF    03.5
0584:  COMF   6F,F
0585:  COMF   70,F
0586:  COMF   71,F
0587:  COMF   72,F
0588:  INCF   6F,F
0589:  BTFSC  03.2
058A:  INCF   70,F
058B:  BTFSC  03.2
058C:  INCF   71,F
058D:  BTFSC  03.2
058E:  INCF   72,F
058F:  MOVLW  3B
0590:  BSF    03.5
0591:  MOVWF  27
0592:  MOVLW  9A
0593:  MOVWF  26
0594:  MOVLW  CA
0595:  MOVWF  25
0596:  CLRF   24
0597:  MOVLW  0A
0598:  MOVWF  22
0599:  MOVF   73,W
059A:  BTFSC  03.2
059B:  INCF   20,F
059C:  BSF    03.1
059D:  MOVLW  6F
059E:  MOVWF  04
059F:  BCF    03.7
05A0:  MOVF   72,W
05A1:  MOVWF  2B
05A2:  MOVF   71,W
05A3:  MOVWF  2A
05A4:  MOVF   70,W
05A5:  MOVWF  29
05A6:  BCF    03.5
05A7:  MOVF   6F,W
05A8:  BSF    03.5
05A9:  MOVWF  28
05AA:  MOVF   27,W
05AB:  MOVWF  2F
05AC:  MOVF   26,W
05AD:  MOVWF  2E
05AE:  MOVF   25,W
05AF:  MOVWF  2D
05B0:  MOVF   24,W
05B1:  MOVWF  2C
05B2:  BCF    03.5
05B3:  CALL   4B2
05B4:  MOVF   78,W
05B5:  MOVF   77,F
05B6:  BTFSS  03.2
05B7:  GOTO   5CF
05B8:  INCF   73,W
05B9:  BSF    03.5
05BA:  SUBWF  22,W
05BB:  BTFSS  03.2
05BC:  GOTO   5BF
05BD:  BCF    03.5
05BE:  GOTO   5CF
05BF:  MOVF   20,W
05C0:  BTFSC  03.2
05C1:  GOTO   5D2
05C2:  ANDLW  0F
05C3:  SUBWF  22,W
05C4:  BTFSC  03.2
05C5:  GOTO   5C8
05C6:  BTFSC  03.0
05C7:  GOTO   60A
05C8:  BTFSC  20.7
05C9:  GOTO   60A
05CA:  BTFSC  20.6
05CB:  GOTO   5D2
05CC:  MOVLW  20
05CD:  GOTO   604
05CE:  BCF    03.5
05CF:  MOVLW  20
05D0:  BSF    03.5
05D1:  ANDWF  20,F
05D2:  BTFSS  20.5
05D3:  GOTO   5E2
05D4:  BCF    20.5
05D5:  MOVF   73,W
05D6:  BTFSS  03.2
05D7:  DECF   20,F
05D8:  MOVF   77,W
05D9:  MOVWF  20
05DA:  MOVLW  2D
05DB:  MOVWF  28
05DC:  BCF    03.5
05DD:  CALL   503
05DE:  BSF    03.5
05DF:  MOVF   20,W
05E0:  MOVWF  77
05E1:  CLRF   20
05E2:  MOVF   73,W
05E3:  SUBWF  22,W
05E4:  BTFSS  03.2
05E5:  GOTO   5F2
05E6:  MOVF   77,W
05E7:  MOVWF  20
05E8:  MOVLW  2E
05E9:  MOVWF  28
05EA:  BCF    03.5
05EB:  CALL   503
05EC:  BSF    03.5
05ED:  MOVF   20,W
05EE:  MOVWF  77
05EF:  MOVLW  20
05F0:  ANDWF  20,F
05F1:  MOVLW  00
05F2:  MOVLW  30
05F3:  BTFSS  20.5
05F4:  GOTO   604
05F5:  BCF    20.5
05F6:  MOVF   73,W
05F7:  BTFSS  03.2
05F8:  DECF   20,F
05F9:  MOVF   77,W
05FA:  MOVWF  20
05FB:  MOVLW  2D
05FC:  MOVWF  28
05FD:  BCF    03.5
05FE:  CALL   503
05FF:  BSF    03.5
0600:  MOVF   20,W
0601:  MOVWF  77
0602:  CLRF   20
0603:  MOVLW  30
0604:  ADDWF  77,F
0605:  MOVF   77,W
0606:  MOVWF  28
0607:  BCF    03.5
0608:  CALL   503
0609:  BSF    03.5
060A:  BCF    03.1
060B:  MOVF   27,W
060C:  MOVWF  2B
060D:  MOVF   26,W
060E:  MOVWF  2A
060F:  MOVF   25,W
0610:  MOVWF  29
0611:  MOVF   24,W
0612:  MOVWF  28
0613:  CLRF   2F
0614:  CLRF   2E
0615:  CLRF   2D
0616:  MOVLW  0A
0617:  MOVWF  2C
0618:  BCF    03.5
0619:  CALL   4B2
061A:  MOVF   7A,W
061B:  BSF    03.5
061C:  MOVWF  27
061D:  MOVF   79,W
061E:  MOVWF  26
061F:  MOVF   78,W
0620:  MOVWF  25
0621:  MOVF   77,W
0622:  MOVWF  24
0623:  DECFSZ 22,F
0624:  GOTO   59C
0625:  BCF    03.5
0626:  RETURN
0627:  BSF    03.6
0628:  MOVF   5E,W
0629:  CLRF   78
062A:  SUBWF  5D,W
062B:  BTFSC  03.0
062C:  GOTO   630
062D:  MOVF   5D,W
062E:  MOVWF  77
062F:  GOTO   63C
0630:  CLRF   77
0631:  MOVLW  08
0632:  MOVWF  5F
0633:  RLF    5D,F
0634:  RLF    77,F
0635:  MOVF   5E,W
0636:  SUBWF  77,W
0637:  BTFSC  03.0
0638:  MOVWF  77
0639:  RLF    78,F
063A:  DECFSZ 5F,F
063B:  GOTO   633
063C:  BCF    03.6
063D:  RETURN
063E:  MOVLW  20
063F:  BTFSS  70.4
0640:  MOVLW  30
0641:  MOVWF  71
0642:  MOVF   6F,W
0643:  MOVWF  77
0644:  BTFSS  6F.7
0645:  GOTO   64E
0646:  COMF   77,F
0647:  INCF   77,F
0648:  MOVF   77,W
0649:  MOVWF  6F
064A:  MOVLW  2D
064B:  MOVWF  71
064C:  BSF    70.7
064D:  BSF    70.0
064E:  MOVF   6F,W
064F:  BSF    03.6
0650:  MOVWF  5D
0651:  MOVLW  64
0652:  MOVWF  5E
0653:  BCF    03.6
0654:  CALL   627
0655:  MOVF   77,W
0656:  MOVWF  6F
0657:  MOVLW  30
0658:  ADDWF  78,W
0659:  MOVWF  72
065A:  MOVF   6F,W
065B:  BSF    03.6
065C:  MOVWF  5D
065D:  MOVLW  0A
065E:  MOVWF  5E
065F:  BCF    03.6
0660:  CALL   627
0661:  MOVLW  30
0662:  ADDWF  77,W
0663:  MOVWF  74
0664:  MOVLW  30
0665:  ADDWF  78,W
0666:  MOVWF  73
0667:  MOVF   71,W
0668:  MOVWF  77
0669:  MOVLW  30
066A:  SUBWF  72,W
066B:  BTFSC  03.2
066C:  GOTO   671
066D:  BSF    70.1
066E:  BTFSC  70.7
066F:  BSF    70.2
0670:  GOTO   685
0671:  BTFSC  70.2
0672:  GOTO   685
0673:  MOVF   71,W
0674:  MOVWF  72
0675:  BTFSC  70.1
0676:  GOTO   67C
0677:  MOVLW  30
0678:  SUBWF  73,W
0679:  BTFSC  03.2
067A:  GOTO   67F
067B:  BSF    70.0
067C:  BTFSC  70.7
067D:  BSF    70.1
067E:  GOTO   685
067F:  BTFSS  03.2
0680:  BSF    70.0
0681:  BTFSS  03.2
0682:  GOTO   685
0683:  MOVF   72,W
0684:  MOVWF  73
0685:  BTFSC  70.2
0686:  GOTO   68C
0687:  BTFSC  70.1
0688:  GOTO   691
0689:  BTFSC  70.0
068A:  GOTO   696
068B:  GOTO   69B
068C:  MOVF   71,W
068D:  BSF    03.5
068E:  MOVWF  28
068F:  BCF    03.5
0690:  CALL   503
0691:  MOVF   72,W
0692:  BSF    03.5
0693:  MOVWF  28
0694:  BCF    03.5
0695:  CALL   503
0696:  MOVF   73,W
0697:  BSF    03.5
0698:  MOVWF  28
0699:  BCF    03.5
069A:  CALL   503
069B:  MOVF   74,W
069C:  BSF    03.5
069D:  MOVWF  28
069E:  BCF    03.5
069F:  CALL   503
06A0:  RETURN
06A1:  MOVF   49,W
06A2:  MOVWF  04
06A3:  BCF    03.7
06A4:  BTFSC  4A.0
06A5:  BSF    03.7
06A6:  BSF    03.6
06A7:  MOVF   64,W
06A8:  MOVWF  00
06A9:  INCF   04,F
06AA:  CLRF   00
06AB:  BCF    03.6
06AC:  INCF   49,F
06AD:  BTFSC  03.2
06AE:  INCF   4A,F
06AF:  RETURN
06B0:  MOVF   78,W
06B1:  BSF    03.6
06B2:  MOVF   5B,W
06B3:  MOVWF  5D
06B4:  MOVLW  64
06B5:  MOVWF  5E
06B6:  BCF    03.6
06B7:  CALL   627
06B8:  MOVF   77,W
06B9:  BSF    03.6
06BA:  MOVWF  5B
06BB:  MOVF   78,W
06BC:  MOVLW  30
06BD:  BTFSS  03.2
06BE:  GOTO   6C6
06BF:  BTFSS  5C.1
06C0:  GOTO   6CF
06C1:  BTFSC  5C.3
06C2:  GOTO   6CF
06C3:  BTFSC  5C.4
06C4:  MOVLW  20
06C5:  GOTO   6C9
06C6:  BCF    5C.3
06C7:  BCF    5C.4
06C8:  BSF    5C.0
06C9:  ADDWF  78,F
06CA:  MOVF   78,W
06CB:  MOVWF  64
06CC:  BCF    03.6
06CD:  CALL   6A1
06CE:  BSF    03.6
06CF:  MOVF   5B,W
06D0:  MOVWF  5D
06D1:  MOVLW  0A
06D2:  MOVWF  5E
06D3:  BCF    03.6
06D4:  CALL   627
06D5:  MOVF   77,W
06D6:  BSF    03.6
06D7:  MOVWF  5B
06D8:  MOVF   78,W
06D9:  MOVLW  30
06DA:  BTFSS  03.2
06DB:  GOTO   6E2
06DC:  BTFSC  5C.3
06DD:  GOTO   6E8
06DE:  BTFSS  5C.0
06DF:  GOTO   6E8
06E0:  BTFSC  5C.4
06E1:  MOVLW  20
06E2:  ADDWF  78,F
06E3:  MOVF   78,W
06E4:  MOVWF  64
06E5:  BCF    03.6
06E6:  CALL   6A1
06E7:  BSF    03.6
06E8:  MOVLW  30
06E9:  ADDWF  5B,F
06EA:  MOVF   5B,W
06EB:  MOVWF  64
06EC:  BCF    03.6
06ED:  CALL   6A1
06EE:  RETURN
06EF:  MOVLW  8E
06F0:  MOVWF  77
06F1:  BSF    03.6
06F2:  MOVF   52,W
06F3:  SUBWF  77,F
06F4:  MOVF   53,W
06F5:  MOVWF  79
06F6:  MOVF   54,W
06F7:  MOVWF  78
06F8:  BSF    79.7
06F9:  MOVF   77,F
06FA:  BTFSC  03.2
06FB:  GOTO   707
06FC:  BCF    03.0
06FD:  MOVF   79,F
06FE:  BTFSS  03.2
06FF:  GOTO   703
0700:  MOVF   78,F
0701:  BTFSC  03.2
0702:  GOTO   707
0703:  RRF    79,F
0704:  RRF    78,F
0705:  DECFSZ 77,F
0706:  GOTO   6FC
0707:  BTFSS  53.7
0708:  GOTO   70E
0709:  COMF   78,F
070A:  COMF   79,F
070B:  INCF   78,F
070C:  BTFSC  03.2
070D:  INCF   79,F
070E:  BCF    03.6
070F:  RETURN
0710:  MOVLW  20
0711:  BSF    03.6
0712:  BTFSS  53.4
0713:  MOVLW  30
0714:  MOVWF  54
0715:  MOVF   52,W
0716:  MOVWF  77
0717:  BTFSS  52.7
0718:  GOTO   721
0719:  COMF   77,F
071A:  INCF   77,F
071B:  MOVF   77,W
071C:  MOVWF  52
071D:  MOVLW  2D
071E:  MOVWF  54
071F:  BSF    53.7
0720:  BSF    53.0
0721:  MOVF   52,W
0722:  MOVWF  5D
0723:  MOVLW  64
0724:  MOVWF  5E
0725:  BCF    03.6
0726:  CALL   627
0727:  MOVF   77,W
0728:  BSF    03.6
0729:  MOVWF  52
072A:  MOVLW  30
072B:  ADDWF  78,W
072C:  MOVWF  55
072D:  MOVF   52,W
072E:  MOVWF  5D
072F:  MOVLW  0A
0730:  MOVWF  5E
0731:  BCF    03.6
0732:  CALL   627
0733:  MOVLW  30
0734:  ADDWF  77,W
0735:  BSF    03.6
0736:  MOVWF  57
0737:  MOVLW  30
0738:  ADDWF  78,W
0739:  MOVWF  56
073A:  MOVF   54,W
073B:  MOVWF  77
073C:  MOVLW  30
073D:  SUBWF  55,W
073E:  BTFSC  03.2
073F:  GOTO   744
0740:  BSF    53.1
0741:  BTFSC  53.7
0742:  BSF    53.2
0743:  GOTO   758
0744:  MOVF   54,W
0745:  MOVWF  55
0746:  MOVLW  20
0747:  MOVWF  54
0748:  MOVLW  30
0749:  SUBWF  56,W
074A:  BTFSC  03.2
074B:  GOTO   750
074C:  BSF    53.0
074D:  BTFSC  53.7
074E:  BSF    53.1
074F:  GOTO   758
0750:  BTFSS  03.2
0751:  BSF    53.0
0752:  BTFSS  03.2
0753:  GOTO   758
0754:  MOVF   55,W
0755:  MOVWF  56
0756:  MOVLW  20
0757:  MOVWF  55
0758:  BTFSC  53.2
0759:  GOTO   75F
075A:  BTFSC  53.1
075B:  GOTO   764
075C:  BTFSC  53.0
075D:  GOTO   769
075E:  GOTO   76E
075F:  MOVF   54,W
0760:  MOVWF  64
0761:  BCF    03.6
0762:  CALL   6A1
0763:  BSF    03.6
0764:  MOVF   55,W
0765:  MOVWF  64
0766:  BCF    03.6
0767:  CALL   6A1
0768:  BSF    03.6
0769:  MOVF   56,W
076A:  MOVWF  64
076B:  BCF    03.6
076C:  CALL   6A1
076D:  BSF    03.6
076E:  MOVF   57,W
076F:  MOVWF  64
0770:  BCF    03.6
0771:  CALL   6A1
0772:  RETURN
*
077F:  MOVF   0B,W
0780:  BSF    03.6
0781:  MOVWF  39
0782:  BCF    03.6
0783:  BCF    0B.7
0784:  BSF    03.5
0785:  BSF    03.6
0786:  BSF    0C.7
0787:  BSF    0C.0
0788:  NOP
0789:  NOP
078A:  BCF    03.5
078B:  BTFSS  39.7
078C:  GOTO   790
078D:  BCF    03.6
078E:  BSF    0B.7
078F:  BSF    03.6
0790:  MOVF   0C,W
0791:  ANDLW  7F
0792:  BTFSC  03.2
0793:  GOTO   7CD
0794:  MOVWF  39
0795:  MOVF   0D,W
0796:  MOVWF  3A
0797:  MOVF   0F,W
0798:  MOVWF  3B
0799:  MOVF   39,W
079A:  MOVWF  3C
079B:  BCF    03.6
079C:  CALL   773
079D:  BSF    03.6
079E:  MOVF   3A,W
079F:  MOVWF  0D
07A0:  MOVF   3B,W
07A1:  MOVWF  0F
07A2:  BCF    03.6
07A3:  MOVF   0B,W
07A4:  BSF    03.6
07A5:  MOVWF  3C
07A6:  BCF    03.6
07A7:  BCF    0B.7
07A8:  BSF    03.5
07A9:  BSF    03.6
07AA:  BSF    0C.7
07AB:  BSF    0C.0
07AC:  NOP
07AD:  NOP
07AE:  BCF    03.5
07AF:  BTFSS  3C.7
07B0:  GOTO   7B4
07B1:  BCF    03.6
07B2:  BSF    0B.7
07B3:  BSF    03.6
07B4:  RLF    0C,W
07B5:  RLF    0E,W
07B6:  ANDLW  7F
07B7:  BTFSC  03.2
07B8:  GOTO   7CD
07B9:  MOVWF  39
07BA:  MOVF   0D,W
07BB:  MOVWF  3A
07BC:  MOVF   0F,W
07BD:  MOVWF  3B
07BE:  MOVF   39,W
07BF:  MOVWF  3C
07C0:  BCF    03.6
07C1:  CALL   773
07C2:  BSF    03.6
07C3:  MOVF   3A,W
07C4:  MOVWF  0D
07C5:  MOVF   3B,W
07C6:  MOVWF  0F
07C7:  INCF   0D,F
07C8:  BTFSC  03.2
07C9:  INCF   0F,F
07CA:  BCF    03.6
07CB:  GOTO   77F
07CC:  BSF    03.6
07CD:  BCF    03.6
07CE:  RETURN
07CF:  CLRF   78
07D0:  CLRF   79
07D1:  CLRF   77
07D2:  CLRF   7A
07D3:  BSF    03.6
07D4:  MOVF   3E,W
07D5:  BTFSS  03.2
07D6:  GOTO   7DA
07D7:  MOVF   3D,W
07D8:  BTFSC  03.2
07D9:  GOTO   7F4
07DA:  MOVLW  10
07DB:  MOVWF  3F
07DC:  BCF    03.0
07DD:  RLF    3B,F
07DE:  RLF    3C,F
07DF:  RLF    77,F
07E0:  RLF    7A,F
07E1:  MOVF   3E,W
07E2:  SUBWF  7A,W
07E3:  BTFSS  03.2
07E4:  GOTO   7E7
07E5:  MOVF   3D,W
07E6:  SUBWF  77,W
07E7:  BTFSS  03.0
07E8:  GOTO   7F0
07E9:  MOVF   3D,W
07EA:  SUBWF  77,F
07EB:  BTFSS  03.0
07EC:  DECF   7A,F
07ED:  MOVF   3E,W
07EE:  SUBWF  7A,F
07EF:  BSF    03.0
07F0:  RLF    78,F
07F1:  RLF    79,F
07F2:  DECFSZ 3F,F
07F3:  GOTO   7DC
07F4:  BCF    03.6
07F5:  RETURN
*
0829:  MOVLW  80
082A:  BTFSC  03.1
082B:  XORWF  57,F
082C:  CLRF   5C
082D:  CLRF   5D
082E:  MOVF   53,W
082F:  MOVWF  5B
0830:  MOVF   57,W
0831:  XORWF  5B,F
0832:  MOVF   52,W
0833:  BTFSC  03.2
0834:  GOTO   11A
0835:  MOVWF  5A
0836:  MOVWF  77
0837:  MOVF   56,W
0838:  BTFSC  03.2
0839:  GOTO   123
083A:  SUBWF  5A,F
083B:  BTFSC  03.2
083C:  GOTO   0BF
083D:  BTFSC  03.0
083E:  GOTO   040
083F:  GOTO   07D
0840:  MOVF   57,W
0841:  MOVWF  60
0842:  BSF    60.7
0843:  MOVF   58,W
0844:  MOVWF  5F
0845:  MOVF   59,W
0846:  MOVWF  5E
0847:  CLRF   5D
0848:  BCF    03.0
0849:  RRF    60,F
084A:  RRF    5F,F
084B:  RRF    5E,F
084C:  RRF    5D,F
084D:  DECFSZ 5A,F
084E:  GOTO   047
084F:  BTFSS  5B.7
0850:  GOTO   054
0851:  BSF    5C.0
0852:  GOTO   137
0853:  BCF    5C.0
0854:  BCF    5A.0
0855:  BSF    5C.4
0856:  MOVLW  55
0857:  MOVWF  04
0858:  BSF    03.7
0859:  GOTO   14D
085A:  BCF    5C.4
085B:  BTFSC  5B.7
085C:  GOTO   067
085D:  BTFSS  5A.0
085E:  GOTO   072
085F:  RRF    60,F
0860:  RRF    5F,F
0861:  RRF    5E,F
0862:  RRF    5D,F
0863:  INCF   77,F
0864:  BTFSC  03.2
0865:  GOTO   132
0866:  GOTO   072
0867:  BTFSC  60.7
0868:  GOTO   075
0869:  BCF    03.0
086A:  RLF    5D,F
086B:  RLF    5E,F
086C:  RLF    5F,F
086D:  RLF    60,F
086E:  DECF   77,F
086F:  BTFSC  03.2
0870:  GOTO   132
0871:  GOTO   067
0872:  BSF    5C.6
0873:  GOTO   0DF
0874:  BCF    5C.6
0875:  MOVF   53,W
0876:  MOVWF  5B
0877:  BTFSS  5B.7
0878:  GOTO   07B
0879:  BSF    60.7
087A:  GOTO   12B
087B:  BCF    60.7
087C:  GOTO   12B
087D:  MOVF   56,W
087E:  MOVWF  5A
087F:  MOVWF  77
0880:  MOVF   52,W
0881:  SUBWF  5A,F
0882:  MOVF   53,W
0883:  MOVWF  60
0884:  BSF    60.7
0885:  MOVF   54,W
0886:  MOVWF  5F
0887:  MOVF   55,W
0888:  MOVWF  5E
0889:  CLRF   5D
088A:  BCF    03.0
088B:  RRF    60,F
088C:  RRF    5F,F
088D:  RRF    5E,F
088E:  RRF    5D,F
088F:  DECFSZ 5A,F
0890:  GOTO   089
0891:  BTFSS  5B.7
0892:  GOTO   096
0893:  BSF    5C.1
0894:  GOTO   137
0895:  BCF    5C.1
0896:  BCF    5A.0
0897:  BSF    5C.5
0898:  MOVLW  59
0899:  MOVWF  04
089A:  BSF    03.7
089B:  GOTO   14D
089C:  BCF    5C.5
089D:  BTFSC  5B.7
089E:  GOTO   0A9
089F:  BTFSS  5A.0
08A0:  GOTO   0B4
08A1:  RRF    60,F
08A2:  RRF    5F,F
08A3:  RRF    5E,F
08A4:  RRF    5D,F
08A5:  INCF   77,F
08A6:  BTFSC  03.2
08A7:  GOTO   132
08A8:  GOTO   0B4
08A9:  BTFSC  60.7
08AA:  GOTO   0B7
08AB:  BCF    03.0
08AC:  RLF    5D,F
08AD:  RLF    5E,F
08AE:  RLF    5F,F
08AF:  RLF    60,F
08B0:  DECF   77,F
08B1:  BTFSC  03.2
08B2:  GOTO   132
08B3:  GOTO   0A9
08B4:  BSF    5C.7
08B5:  GOTO   0DF
08B6:  BCF    5C.7
08B7:  MOVF   57,W
08B8:  MOVWF  5B
08B9:  BTFSS  5B.7
08BA:  GOTO   0BD
08BB:  BSF    60.7
08BC:  GOTO   12B
08BD:  BCF    60.7
08BE:  GOTO   12B
08BF:  MOVF   57,W
08C0:  MOVWF  60
08C1:  BSF    60.7
08C2:  MOVF   58,W
08C3:  MOVWF  5F
08C4:  MOVF   59,W
08C5:  MOVWF  5E
08C6:  BTFSS  5B.7
08C7:  GOTO   0CC
08C8:  BCF    60.7
08C9:  BSF    5C.2
08CA:  GOTO   137
08CB:  BCF    5C.2
08CC:  CLRF   5D
08CD:  BCF    5A.0
08CE:  MOVLW  55
08CF:  MOVWF  04
08D0:  BSF    03.7
08D1:  GOTO   14D
08D2:  BTFSC  5B.7
08D3:  GOTO   0F5
08D4:  MOVF   53,W
08D5:  MOVWF  5B
08D6:  BTFSS  5A.0
08D7:  GOTO   0DF
08D8:  RRF    60,F
08D9:  RRF    5F,F
08DA:  RRF    5E,F
08DB:  RRF    5D,F
08DC:  INCF   77,F
08DD:  BTFSC  03.2
08DE:  GOTO   132
08DF:  BTFSS  5D.7
08E0:  GOTO   0F0
08E1:  INCF   5E,F
08E2:  BTFSS  03.2
08E3:  GOTO   0F0
08E4:  INCF   5F,F
08E5:  BTFSS  03.2
08E6:  GOTO   0F0
08E7:  INCF   60,F
08E8:  BTFSS  03.2
08E9:  GOTO   0F0
08EA:  RRF    60,F
08EB:  RRF    5F,F
08EC:  RRF    5E,F
08ED:  INCF   77,F
08EE:  BTFSC  03.2
08EF:  GOTO   132
08F0:  BTFSC  5C.6
08F1:  GOTO   074
08F2:  BTFSC  5C.7
08F3:  GOTO   0B6
08F4:  GOTO   114
08F5:  MOVLW  80
08F6:  XORWF  60,F
08F7:  BTFSS  60.7
08F8:  GOTO   0FD
08F9:  GOTO   137
08FA:  MOVF   57,W
08FB:  MOVWF  5B
08FC:  GOTO   10A
08FD:  MOVF   53,W
08FE:  MOVWF  5B
08FF:  MOVF   60,F
0900:  BTFSS  03.2
0901:  GOTO   10A
0902:  MOVF   5F,F
0903:  BTFSS  03.2
0904:  GOTO   10A
0905:  MOVF   5E,F
0906:  BTFSS  03.2
0907:  GOTO   10A
0908:  CLRF   77
0909:  GOTO   12B
090A:  BTFSC  60.7
090B:  GOTO   114
090C:  BCF    03.0
090D:  RLF    5D,F
090E:  RLF    5E,F
090F:  RLF    5F,F
0910:  RLF    60,F
0911:  DECFSZ 77,F
0912:  GOTO   10A
0913:  GOTO   132
0914:  BTFSS  5B.7
0915:  GOTO   118
0916:  BSF    60.7
0917:  GOTO   12B
0918:  BCF    60.7
0919:  GOTO   12B
091A:  MOVF   56,W
091B:  MOVWF  77
091C:  MOVF   57,W
091D:  MOVWF  60
091E:  MOVF   58,W
091F:  MOVWF  5F
0920:  MOVF   59,W
0921:  MOVWF  5E
0922:  GOTO   12B
0923:  MOVF   52,W
0924:  MOVWF  77
0925:  MOVF   53,W
0926:  MOVWF  60
0927:  MOVF   54,W
0928:  MOVWF  5F
0929:  MOVF   55,W
092A:  MOVWF  5E
092B:  MOVF   60,W
092C:  MOVWF  78
092D:  MOVF   5F,W
092E:  MOVWF  79
092F:  MOVF   5E,W
0930:  MOVWF  7A
0931:  GOTO   16C
0932:  CLRF   77
0933:  CLRF   78
0934:  CLRF   79
0935:  CLRF   7A
0936:  GOTO   16C
0937:  CLRF   5D
0938:  COMF   5E,F
0939:  COMF   5F,F
093A:  COMF   60,F
093B:  COMF   5D,F
093C:  INCF   5D,F
093D:  BTFSS  03.2
093E:  GOTO   146
093F:  INCF   5E,F
0940:  BTFSS  03.2
0941:  GOTO   146
0942:  INCF   5F,F
0943:  BTFSS  03.2
0944:  GOTO   146
0945:  INCF   60,F
0946:  BTFSC  5C.0
0947:  GOTO   053
0948:  BTFSC  5C.1
0949:  GOTO   095
094A:  BTFSC  5C.2
094B:  GOTO   0CB
094C:  GOTO   0FA
094D:  MOVF   00,W
094E:  ADDWF  5E,F
094F:  BTFSS  03.0
0950:  GOTO   157
0951:  INCF   5F,F
0952:  BTFSS  03.2
0953:  GOTO   157
0954:  INCF   60,F
0955:  BTFSC  03.2
0956:  BSF    5A.0
0957:  DECF   04,F
0958:  MOVF   00,W
0959:  ADDWF  5F,F
095A:  BTFSS  03.0
095B:  GOTO   15F
095C:  INCF   60,F
095D:  BTFSC  03.2
095E:  BSF    5A.0
095F:  DECF   04,F
0960:  MOVF   00,W
0961:  BTFSC  00.7
0962:  GOTO   164
0963:  XORLW  80
0964:  ADDWF  60,F
0965:  BTFSC  03.0
0966:  BSF    5A.0
0967:  BTFSC  5C.4
0968:  GOTO   05A
0969:  BTFSC  5C.5
096A:  GOTO   09C
096B:  GOTO   0D2
*
0B04:  CLRF   63
0B05:  MOVF   04,W
0B06:  MOVWF  62
0B07:  BCF    63.0
0B08:  BTFSC  03.7
0B09:  BSF    63.0
0B0A:  SWAPF  5C,W
0B0B:  IORLW  F0
0B0C:  MOVWF  5E
0B0D:  ADDWF  5E,F
0B0E:  ADDLW  E2
0B0F:  MOVWF  5F
0B10:  ADDLW  32
0B11:  MOVWF  61
0B12:  MOVF   5C,W
0B13:  ANDLW  0F
0B14:  ADDWF  5F,F
0B15:  ADDWF  5F,F
0B16:  ADDWF  61,F
0B17:  ADDLW  E9
0B18:  MOVWF  60
0B19:  ADDWF  60,F
0B1A:  ADDWF  60,F
0B1B:  SWAPF  5B,W
0B1C:  ANDLW  0F
0B1D:  ADDWF  60,F
0B1E:  ADDWF  61,F
0B1F:  RLF    60,F
0B20:  RLF    61,F
0B21:  COMF   61,F
0B22:  RLF    61,F
0B23:  MOVF   5B,W
0B24:  ANDLW  0F
0B25:  ADDWF  61,F
0B26:  RLF    5E,F
0B27:  MOVLW  07
0B28:  MOVWF  5D
0B29:  MOVLW  0A
0B2A:  ADDWF  61,F
0B2B:  DECF   60,F
0B2C:  BTFSS  03.0
0B2D:  GOTO   32A
0B2E:  ADDWF  60,F
0B2F:  DECF   5F,F
0B30:  BTFSS  03.0
0B31:  GOTO   32E
0B32:  ADDWF  5F,F
0B33:  DECF   5E,F
0B34:  BTFSS  03.0
0B35:  GOTO   332
0B36:  ADDWF  5E,F
0B37:  DECF   5D,F
0B38:  BTFSS  03.0
0B39:  GOTO   336
0B3A:  MOVLW  5D
0B3B:  MOVWF  04
0B3C:  BSF    03.7
0B3D:  MOVLW  07
0B3E:  ANDWF  62,W
0B3F:  BCF    62.6
0B40:  ADDWF  04,F
0B41:  MOVLW  61
0B42:  SUBWF  04,W
0B43:  BTFSC  03.2
0B44:  BSF    62.6
0B45:  MOVF   00,W
0B46:  MOVWF  77
0B47:  BTFSS  03.2
0B48:  GOTO   351
0B49:  BTFSC  62.6
0B4A:  GOTO   351
0B4B:  BTFSC  62.4
0B4C:  GOTO   367
0B4D:  BTFSC  62.3
0B4E:  GOTO   351
0B4F:  MOVLW  20
0B50:  GOTO   354
0B51:  BSF    62.3
0B52:  BCF    62.4
0B53:  MOVLW  30
0B54:  ADDWF  77,F
0B55:  CLRF   5C
0B56:  MOVF   04,W
0B57:  MOVWF  5B
0B58:  BCF    5C.0
0B59:  BTFSC  03.7
0B5A:  BSF    5C.0
0B5B:  MOVF   77,W
0B5C:  MOVWF  64
0B5D:  BCF    0A.3
0B5E:  BCF    03.6
0B5F:  CALL   6A1
0B60:  BSF    0A.3
0B61:  BSF    03.6
0B62:  MOVF   5B,W
0B63:  MOVWF  04
0B64:  BCF    03.7
0B65:  BTFSC  5C.0
0B66:  BSF    03.7
0B67:  INCF   04,F
0B68:  BTFSS  62.6
0B69:  GOTO   341
*
12A6:  BCF    0A.0
12A7:  BSF    0A.1
12A8:  BCF    0A.2
12A9:  ADDWF  02,F
12AA:  GOTO   0A8
12AB:  GOTO   0D1
12AC:  GOTO   103
12AD:  GOTO   133
12AE:  BCF    0A.0
12AF:  BSF    0A.1
12B0:  BCF    0A.2
12B1:  ADDWF  02,F
12B2:  GOTO   14D
12B3:  GOTO   175
12B4:  GOTO   1A4
12B5:  GOTO   1D4
.................... 
.................... #list
.................... 
.................... #fuses HS
.................... #use delay(clock=20M) 
*
00FA:  MOVLW  39
00FB:  MOVWF  04
00FC:  BSF    03.7
00FD:  MOVF   00,W
00FE:  BTFSC  03.2
00FF:  GOTO   10D
0100:  MOVLW  06
0101:  MOVWF  78
0102:  CLRF   77
0103:  DECFSZ 77,F
0104:  GOTO   103
0105:  DECFSZ 78,F
0106:  GOTO   102
0107:  MOVLW  7B
0108:  MOVWF  77
0109:  DECFSZ 77,F
010A:  GOTO   109
010B:  DECFSZ 00,F
010C:  GOTO   100
010D:  RETURN
.................... #define RTC_SDA  PIN_C4 
.................... #define RTC_SCL  PIN_C3 
.................... #use i2c(master, I2C1, FAST=100000)
*
0088:  BCF    14.7
0089:  BCF    0C.3
008A:  BSF    03.6
008B:  MOVF   63,W
008C:  BCF    03.6
008D:  MOVWF  13
008E:  MOVLW  02
008F:  BTFSC  14.7
0090:  GOTO   098
0091:  BSF    03.5
0092:  BTFSC  14.2
0093:  GOTO   092
0094:  MOVLW  00
0095:  BTFSC  11.6
0096:  MOVLW  01
0097:  BCF    03.5
0098:  MOVWF  78
0099:  RETURN
*
00B4:  BCF    14.6
00B5:  BSF    03.5
00B6:  BSF    11.3
00B7:  BTFSC  11.3
00B8:  GOTO   0B7
00B9:  BTFSC  77.0
00BA:  BCF    11.5
00BB:  BTFSS  77.0
00BC:  BSF    11.5
00BD:  BSF    11.4
00BE:  BTFSC  11.4
00BF:  GOTO   0BE
00C0:  BCF    03.5
00C1:  MOVF   13,W
00C2:  MOVWF  78
00C3:  RETURN
.................... #include "i2c_lcd.c"
.................... typedef unsigned char u8;   
.................... static u8 lcd_light = 0x08;
*
12F5:  MOVLW  08
12F6:  BCF    03.6
12F7:  MOVWF  2C
.................... #define LCD_ADDR      0x27  
.................... #define LCD_BACKLIGHT 0x08  
.................... #define LCD_ENABLE    0x04
.................... #define LCD_RW        0x02
.................... #define LCD_RS        0x01
.................... 
.................... 
.................... extern void delay_us(unsigned int us);
.................... extern void delay_ms(unsigned int ms);
.................... 
.................... extern void i2c_start(void);
.................... extern void i2c_write(u8 data);
.................... extern void i2c_stop(void);
.................... void I2C_LCD_Clear(void);
.................... void lcd_write_nibble(u8 data) {
....................     u8 data_en;
.................... 
....................     data_en = data | lcd_light | LCD_ENABLE;
*
010E:  BSF    03.6
010F:  MOVF   61,W
0110:  BCF    03.6
0111:  IORWF  2C,W
0112:  IORLW  04
0113:  BSF    03.6
0114:  MOVWF  62
....................     i2c_start();
0115:  BSF    03.5
0116:  BCF    03.6
0117:  BSF    11.0
0118:  BTFSC  11.0
0119:  GOTO   118
....................     i2c_write(LCD_ADDR << 1);
011A:  MOVLW  4E
011B:  BCF    03.5
011C:  BSF    03.6
011D:  MOVWF  63
011E:  BCF    03.6
011F:  CALL   088
....................     i2c_write(data_en);
0120:  BSF    03.6
0121:  MOVF   62,W
0122:  MOVWF  63
0123:  BCF    03.6
0124:  CALL   088
....................     i2c_stop();
0125:  BSF    03.5
0126:  BSF    11.2
0127:  BTFSC  11.2
0128:  GOTO   127
.................... 
....................     delay_us(1);
0129:  GOTO   12A
012A:  GOTO   12B
012B:  NOP
.................... 
....................     data_en = data | lcd_light;
012C:  BCF    03.5
012D:  BSF    03.6
012E:  MOVF   61,W
012F:  BCF    03.6
0130:  IORWF  2C,W
0131:  BSF    03.6
0132:  MOVWF  62
....................     i2c_start();
0133:  BSF    03.5
0134:  BCF    03.6
0135:  BSF    11.0
0136:  BTFSC  11.0
0137:  GOTO   136
....................     i2c_write(LCD_ADDR << 1);
0138:  MOVLW  4E
0139:  BCF    03.5
013A:  BSF    03.6
013B:  MOVWF  63
013C:  BCF    03.6
013D:  CALL   088
....................     i2c_write(data_en);
013E:  BSF    03.6
013F:  MOVF   62,W
0140:  MOVWF  63
0141:  BCF    03.6
0142:  CALL   088
....................     i2c_stop();
0143:  BSF    03.5
0144:  BSF    11.2
0145:  BTFSC  11.2
0146:  GOTO   145
.................... 
....................     delay_us(50);
0147:  MOVLW  53
0148:  MOVWF  77
0149:  DECFSZ 77,F
014A:  GOTO   149
014B:  BCF    03.5
014C:  RETURN
.................... }
.................... 
.................... void lcd_send_byte(u8 value, u8 mode) {
014D:  BSF    03.6
014E:  MOVF   5D,W
014F:  ANDLW  F0
0150:  MOVWF  61
0151:  MOVF   5E,F
0152:  BTFSC  03.2
0153:  GOTO   156
0154:  MOVLW  01
0155:  GOTO   157
0156:  MOVLW  00
0157:  IORWF  61,W
0158:  MOVWF  5F
0159:  SWAPF  5D,W
015A:  MOVWF  77
015B:  MOVLW  F0
015C:  ANDWF  77,F
015D:  MOVF   77,W
015E:  ANDLW  F0
015F:  MOVWF  61
0160:  MOVF   5E,F
0161:  BTFSC  03.2
0162:  GOTO   165
0163:  MOVLW  01
0164:  GOTO   166
0165:  MOVLW  00
0166:  IORWF  61,W
0167:  MOVWF  60
....................     u8 high_nibble = (value & 0xF0) | (mode ? LCD_RS : 0);
....................     u8 low_nibble = ((value << 4) & 0xF0) | (mode ? LCD_RS : 0);
.................... 
....................     lcd_write_nibble(high_nibble);
0168:  MOVF   5F,W
0169:  MOVWF  61
016A:  BCF    03.6
016B:  CALL   10E
....................     lcd_write_nibble(low_nibble);
016C:  BSF    03.6
016D:  MOVF   60,W
016E:  MOVWF  61
016F:  BCF    03.6
0170:  CALL   10E
0171:  RETURN
.................... }
.................... 
.................... void I2C_LCD_Init(void) {
....................     delay_ms(50);
*
017E:  MOVLW  32
017F:  BSF    03.6
0180:  MOVWF  39
0181:  BCF    03.6
0182:  CALL   0FA
.................... 
....................     lcd_write_nibble(0x30);
0183:  MOVLW  30
0184:  BSF    03.6
0185:  MOVWF  61
0186:  BCF    03.6
0187:  CALL   10E
....................     delay_ms(5);
0188:  MOVLW  05
0189:  BSF    03.6
018A:  MOVWF  39
018B:  BCF    03.6
018C:  CALL   0FA
....................     lcd_write_nibble(0x30);
018D:  MOVLW  30
018E:  BSF    03.6
018F:  MOVWF  61
0190:  BCF    03.6
0191:  CALL   10E
....................     delay_us(100);
0192:  MOVLW  A6
0193:  MOVWF  77
0194:  DECFSZ 77,F
0195:  GOTO   194
0196:  NOP
....................     lcd_write_nibble(0x30);
0197:  MOVLW  30
0198:  BSF    03.6
0199:  MOVWF  61
019A:  BCF    03.6
019B:  CALL   10E
....................     delay_ms(5);
019C:  MOVLW  05
019D:  BSF    03.6
019E:  MOVWF  39
019F:  BCF    03.6
01A0:  CALL   0FA
....................     lcd_write_nibble(0x20);
01A1:  MOVLW  20
01A2:  BSF    03.6
01A3:  MOVWF  61
01A4:  BCF    03.6
01A5:  CALL   10E
.................... 
....................     lcd_send_byte(0x28, 0);
01A6:  MOVLW  28
01A7:  BSF    03.6
01A8:  MOVWF  5D
01A9:  CLRF   5E
01AA:  BCF    03.6
01AB:  CALL   14D
....................     lcd_send_byte(0x0C, 0);
01AC:  MOVLW  0C
01AD:  BSF    03.6
01AE:  MOVWF  5D
01AF:  CLRF   5E
01B0:  BCF    03.6
01B1:  CALL   14D
....................     lcd_send_byte(0x06, 0);
01B2:  MOVLW  06
01B3:  BSF    03.6
01B4:  MOVWF  5D
01B5:  CLRF   5E
01B6:  BCF    03.6
01B7:  CALL   14D
....................     I2C_LCD_Clear();
01B8:  CALL   172
01B9:  BCF    0A.3
01BA:  BSF    0A.4
01BB:  GOTO   2FD (RETURN)
.................... }
.................... 
.................... void I2C_LCD_Clear(void) {
....................     lcd_send_byte(0x01, 0);
*
0172:  MOVLW  01
0173:  BSF    03.6
0174:  MOVWF  5D
0175:  CLRF   5E
0176:  BCF    03.6
0177:  CALL   14D
....................     delay_ms(2);
0178:  MOVLW  02
0179:  BSF    03.6
017A:  MOVWF  39
017B:  BCF    03.6
017C:  CALL   0FA
017D:  RETURN
.................... }
.................... 
.................... void I2C_LCD_Set_Cursor(u8 row, u8 col) {
....................     u8 address;
.................... 
....................     switch(row) {
*
01DA:  BSF    03.6
01DB:  MOVF   59,W
01DC:  XORLW  00
01DD:  BCF    03.6
01DE:  BTFSC  03.2
01DF:  GOTO   1EA
01E0:  XORLW  01
01E1:  BTFSC  03.2
01E2:  GOTO   1EE
01E3:  XORLW  03
01E4:  BTFSC  03.2
01E5:  GOTO   1F3
01E6:  XORLW  01
01E7:  BTFSC  03.2
01E8:  GOTO   1F8
01E9:  GOTO   1FE
....................         case 0: address = 0x00 + col; break;
01EA:  BSF    03.6
01EB:  MOVF   5A,W
01EC:  MOVWF  5B
01ED:  GOTO   201
....................         case 1: address = 0x40 + col; break;
01EE:  MOVLW  40
01EF:  BSF    03.6
01F0:  ADDWF  5A,W
01F1:  MOVWF  5B
01F2:  GOTO   201
....................         case 2: address = 0x14 + col; break;
01F3:  MOVLW  14
01F4:  BSF    03.6
01F5:  ADDWF  5A,W
01F6:  MOVWF  5B
01F7:  GOTO   201
....................         case 3: address = 0x54 + col; break;
01F8:  MOVLW  54
01F9:  BSF    03.6
01FA:  ADDWF  5A,W
01FB:  MOVWF  5B
01FC:  GOTO   201
01FD:  BCF    03.6
....................         default: address = 0x00 + col;
01FE:  BSF    03.6
01FF:  MOVF   5A,W
0200:  MOVWF  5B
....................     }
....................     lcd_send_byte(0x80 | address, 0);
0201:  MOVF   5B,W
0202:  IORLW  80
0203:  MOVWF  5C
0204:  MOVWF  5D
0205:  CLRF   5E
0206:  BCF    03.6
0207:  CALL   14D
0208:  RETURN
.................... }
.................... 
.................... void I2C_LCD_Write_Data(int8 lcd_data_x) {
....................     lcd_send_byte(lcd_data_x, 1);
*
0773:  BSF    03.6
0774:  MOVF   3C,W
0775:  MOVWF  5D
0776:  MOVLW  01
0777:  MOVWF  5E
0778:  BCF    03.6
0779:  CALL   14D
....................     delay_us(20);
077A:  MOVLW  21
077B:  MOVWF  77
077C:  DECFSZ 77,F
077D:  GOTO   77C
077E:  RETURN
.................... }
.................... void I2C_LCD_Write_Char(char c) {
....................     lcd_send_byte((u8)c, 1);
*
0222:  MOVF   5C,W
0223:  MOVWF  5D
0224:  MOVLW  01
0225:  MOVWF  5E
0226:  BCF    03.6
0227:  CALL   14D
....................     delay_us(20);
0228:  MOVLW  21
0229:  MOVWF  77
022A:  DECFSZ 77,F
022B:  GOTO   22A
.................... }
.................... void I2C_LCD_Write_String(char* str) {
....................     while(*str) {
*
0209:  BSF    03.6
020A:  MOVF   5A,W
020B:  MOVWF  7A
020C:  MOVF   59,W
020D:  MOVWF  04
020E:  BCF    03.7
020F:  BTFSC  7A.0
0210:  BSF    03.7
0211:  MOVF   00,F
0212:  BTFSC  03.2
0213:  GOTO   22E
....................         I2C_LCD_Write_Char(*str++);
0214:  MOVF   5A,W
0215:  MOVWF  7A
0216:  MOVF   59,W
0217:  INCF   59,F
0218:  BTFSC  03.2
0219:  INCF   5A,F
021A:  MOVWF  04
021B:  BCF    03.7
021C:  BTFSC  7A.0
021D:  BSF    03.7
021E:  MOVF   00,W
021F:  MOVWF  5B
0220:  MOVF   5B,W
0221:  MOVWF  5C
*
022C:  GOTO   209
022D:  BSF    03.6
....................     }
022E:  BCF    03.6
022F:  RETURN
.................... }
.................... 
.................... void I2C_LCD_BackLight(u8 state) {
....................     if(state) {
*
01BC:  MOVF   6F,F
01BD:  BTFSC  03.2
01BE:  GOTO   1C2
....................         lcd_light = LCD_BACKLIGHT;
01BF:  MOVLW  08
01C0:  MOVWF  2C
....................     } else {
01C1:  GOTO   1C3
....................         lcd_light = 0x00;
01C2:  CLRF   2C
....................     }
.................... 
....................     i2c_start();
01C3:  BSF    03.5
01C4:  BSF    11.0
01C5:  BTFSC  11.0
01C6:  GOTO   1C5
....................     i2c_write(LCD_ADDR << 1);
01C7:  MOVLW  4E
01C8:  BCF    03.5
01C9:  BSF    03.6
01CA:  MOVWF  63
01CB:  BCF    03.6
01CC:  CALL   088
....................     i2c_write(lcd_light);
01CD:  MOVF   2C,W
01CE:  BSF    03.6
01CF:  MOVWF  63
01D0:  BCF    03.6
01D1:  CALL   088
....................     i2c_stop();
01D2:  BSF    03.5
01D3:  BSF    11.2
01D4:  BTFSC  11.2
01D5:  GOTO   1D4
01D6:  BCF    03.5
01D7:  BCF    0A.3
01D8:  BSF    0A.4
01D9:  GOTO   32A (RETURN)
.................... }
.................... 
.................... 
.................... #include <ds1307.c> 
.................... BYTE bin2bcd(BYTE binary_value); 
.................... BYTE bcd2bin(BYTE bcd_value);
.................... void doc_byte_1307(byte diachi,byte &dulieu);
.................... void ghi_byte_1307(byte diachi,byte dulieu);
.................... //========================================
.................... void ds1307_init(void) // khoi tao cho ds1307 
.................... {
....................    ghi_byte_1307(7,0x90); // tao xung 1 hz tai chan sout DS1307
*
00C4:  MOVLW  07
00C5:  MOVWF  71
00C6:  MOVLW  90
00C7:  MOVWF  72
00C8:  CALL   09A
....................    byte a; // byte luu tam gia tri o nho 0 cua ds
....................    
....................    doc_byte_1307(0,a); // doc o nho 0
00C9:  CLRF   71
....................    byte b=a&0x80; // byte dung de so sanh
*
00EB:  BCF    03.5
00EC:  MOVF   6F,W
00ED:  ANDLW  80
00EE:  MOVWF  70
....................    if (b!=0)
00EF:  MOVF   70,F
00F0:  BTFSC  03.2
00F1:  GOTO   0F7
....................    {
....................       a&=0x7f;
00F2:  BCF    6F.7
....................       ghi_byte_1307(0,a);
00F3:  CLRF   71
00F4:  MOVF   6F,W
00F5:  MOVWF  72
00F6:  CALL   09A
....................    }
00F7:  BCF    0A.3
00F8:  BSF    0A.4
00F9:  GOTO   2FA (RETURN)
.................... } 
.................... //======================================== 
.................... void ds1307_dat_tgbt(byte gio_bt,phut_bt)
.................... { 
....................    i2c_start();  
....................    i2c_write(0xD0); // I2C write address 
....................    i2c_write(0x20);
....................    i2c_write(gio_bt); // REG 0 
....................    i2c_write(phut_bt); // REG 1 
....................    i2c_stop(); 
.................... } 
.................... //========================================
.................... void ds1307_doc_tgbt(BYTE &gio_bt,BYTE &phut_bt)
.................... {
....................    i2c_start();
....................    i2c_write(0xD0);
....................    i2c_write(0x20);
....................    //i2c_stop();
....................    i2c_start();
....................    i2c_write(0xD1);
....................    gio_bt = i2c_read(1);
....................    phut_bt = i2c_read(1);
....................    i2c_stop();
.................... }
.................... //========================================
.................... void ds1307_dat_TNTN(byte thu,ngay,thang,nam)
.................... { 
....................    i2c_start();  
....................    i2c_write(0xD0); // I2C write address 
....................    i2c_write(0x03); // Start at REG 0 - Seconds 
....................    thu   = bcd2bin(i2c_read(1) & 0x07); 
....................    ngay  = bcd2bin(i2c_read(1) & 0x3F); 
....................    thang = bcd2bin(i2c_read(1) & 0x1F); 
....................    nam   = bcd2bin(i2c_read(0));
....................    i2c_write(0x90);            // REG 7 - Enable squarewave output pin 
....................    i2c_stop(); 
.................... } 
.................... //========================================
.................... void ds1307_dat_NTN(byte ngay,thang,nam)
.................... { 
....................    i2c_start();  
*
1245:  BSF    03.5
1246:  BSF    11.0
1247:  BTFSC  11.0
1248:  GOTO   247
....................    i2c_write(0xD0); // I2C write address 
1249:  MOVLW  D0
124A:  BCF    03.5
124B:  BSF    03.6
124C:  MOVWF  63
124D:  BCF    0A.4
124E:  BCF    03.6
124F:  CALL   088
1250:  BSF    0A.4
....................    i2c_write(0x04); // Start at REG 0 - Seconds 
1251:  MOVLW  04
1252:  BSF    03.6
1253:  MOVWF  63
1254:  BCF    0A.4
1255:  BCF    03.6
1256:  CALL   088
1257:  BSF    0A.4
....................    i2c_write(bin2bcd(ngay)); // REG 0 
1258:  MOVF   75,W
1259:  MOVWF  7C
125A:  CALL   076
125B:  MOVF   78,W
125C:  MOVWF  7C
125D:  BSF    03.6
125E:  MOVWF  63
125F:  BCF    0A.4
1260:  BCF    03.6
1261:  CALL   088
1262:  BSF    0A.4
....................    i2c_write(bin2bcd(thang)); // REG 1 
1263:  MOVF   76,W
1264:  MOVWF  7C
1265:  CALL   076
1266:  MOVF   78,W
1267:  MOVWF  7C
1268:  BSF    03.6
1269:  MOVWF  63
126A:  BCF    0A.4
126B:  BCF    03.6
126C:  CALL   088
126D:  BSF    0A.4
....................    i2c_write(bin2bcd(nam)); // REG 2 
126E:  MOVF   7B,W
126F:  MOVWF  7C
1270:  CALL   076
1271:  MOVF   78,W
1272:  MOVWF  7C
1273:  BSF    03.6
1274:  MOVWF  63
1275:  BCF    0A.4
1276:  BCF    03.6
1277:  CALL   088
1278:  BSF    0A.4
....................    i2c_write(0x90);            // REG 7 - Enable squarewave output pin 
1279:  MOVLW  90
127A:  BSF    03.6
127B:  MOVWF  63
127C:  BCF    0A.4
127D:  BCF    03.6
127E:  CALL   088
127F:  BSF    0A.4
....................    i2c_stop(); 
1280:  BSF    03.5
1281:  BSF    11.2
1282:  BTFSC  11.2
1283:  GOTO   282
1284:  BCF    03.5
.................... } 
.................... //========================================
.................... void ds1307_dat_GPG(byte gio,phut,giay) 
.................... { 
....................   giay &= 0x7F; 
*
11F7:  BCF    7B.7
....................   gio &= 0x3F; 
11F8:  MOVLW  3F
11F9:  ANDWF  75,F
.................... 
....................    i2c_start();  
11FA:  BSF    03.5
11FB:  BSF    11.0
11FC:  BTFSC  11.0
11FD:  GOTO   1FC
....................    i2c_write(0xD0); // I2C write address 
11FE:  MOVLW  D0
11FF:  BCF    03.5
1200:  BSF    03.6
1201:  MOVWF  63
1202:  BCF    0A.4
1203:  BCF    03.6
1204:  CALL   088
1205:  BSF    0A.4
....................    i2c_write(0x00); // Start at REG 0 - Seconds 
1206:  BSF    03.6
1207:  CLRF   63
1208:  BCF    0A.4
1209:  BCF    03.6
120A:  CALL   088
120B:  BSF    0A.4
....................    i2c_write(bin2bcd(giay)); // REG 0 
120C:  MOVF   7B,W
120D:  MOVWF  7C
120E:  CALL   076
120F:  MOVF   78,W
1210:  MOVWF  7C
1211:  BSF    03.6
1212:  MOVWF  63
1213:  BCF    0A.4
1214:  BCF    03.6
1215:  CALL   088
1216:  BSF    0A.4
....................    i2c_write(bin2bcd(phut)); // REG 1 
1217:  MOVF   76,W
1218:  MOVWF  7C
1219:  CALL   076
121A:  MOVF   78,W
121B:  MOVWF  7C
121C:  BSF    03.6
121D:  MOVWF  63
121E:  BCF    0A.4
121F:  BCF    03.6
1220:  CALL   088
1221:  BSF    0A.4
....................    i2c_write(bin2bcd(gio)); // REG 2 
1222:  MOVF   75,W
1223:  MOVWF  7C
1224:  CALL   076
1225:  MOVF   78,W
1226:  MOVWF  7C
1227:  BSF    03.6
1228:  MOVWF  63
1229:  BCF    0A.4
122A:  BCF    03.6
122B:  CALL   088
122C:  BSF    0A.4
....................    i2c_write(0x90);            // REG 7 - Enable squarewave output pin 
122D:  MOVLW  90
122E:  BSF    03.6
122F:  MOVWF  63
1230:  BCF    0A.4
1231:  BCF    03.6
1232:  CALL   088
1233:  BSF    0A.4
....................    i2c_stop(); 
1234:  BSF    03.5
1235:  BSF    11.2
1236:  BTFSC  11.2
1237:  GOTO   236
.................... } 
.................... //========================================
.................... void ds1307_set_date_time(BYTE gio, phut, giay, thu, ngay, thang, nam) 
.................... { 
....................   giay &= 0x7F; 
....................   gio &= 0x3F; 
.................... 
....................   i2c_start();  
....................   i2c_write(0xD0);            // I2C write address 
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
....................   i2c_write(bin2bcd(giay));      // REG 0 
....................   i2c_write(bin2bcd(phut));      // REG 1 
....................   i2c_write(bin2bcd(gio));      // REG 2 
....................   i2c_write(bin2bcd(thu));      // REG 3 
....................   i2c_write(bin2bcd(ngay));      // REG 4 
....................   i2c_write(bin2bcd(thang));      // REG 5 
....................   i2c_write(bin2bcd(nam));      // REG 6 
....................   i2c_write(0x90);            // REG 7 - Enable squarewave output pin 
....................   i2c_stop(); 
.................... } 
.................... //========================================
.................... void ds1307_doc_giay(BYTE &giay)
.................... {
....................    i2c_start();
....................    i2c_write(0xD0);
....................    i2c_write(0x00); // Start at REG 0 - Seconds
....................    i2c_start();
....................    i2c_write(0xD1);
....................    giay = bcd2bin(i2c_read(0));
....................    i2c_stop();
.................... }
.................... //========================================
.................... void ds1307_get_time(BYTE &gio,BYTE &phut,BYTE &giay)
.................... {
....................    i2c_start();
*
13D3:  BSF    11.0
13D4:  BTFSC  11.0
13D5:  GOTO   3D4
*
1429:  BSF    03.5
142A:  BSF    11.0
142B:  BTFSC  11.0
142C:  GOTO   42B
*
154B:  BSF    03.5
154C:  BSF    11.0
154D:  BTFSC  11.0
154E:  GOTO   54D
....................    i2c_write(0xD0);
*
13D6:  MOVLW  D0
13D7:  BCF    03.5
13D8:  BSF    03.6
13D9:  MOVWF  63
13DA:  BCF    0A.4
13DB:  BCF    03.6
13DC:  CALL   088
13DD:  BSF    0A.4
*
142D:  MOVLW  D0
142E:  BCF    03.5
142F:  BSF    03.6
1430:  MOVWF  63
1431:  BCF    0A.4
1432:  BCF    03.6
1433:  CALL   088
1434:  BSF    0A.4
*
154F:  MOVLW  D0
1550:  BCF    03.5
1551:  BSF    03.6
1552:  MOVWF  63
1553:  BCF    0A.4
1554:  BCF    03.6
1555:  CALL   088
1556:  BSF    0A.4
....................    i2c_write(0x00); // Start at REG 0 - Seconds
*
13DE:  BSF    03.6
13DF:  CLRF   63
13E0:  BCF    0A.4
13E1:  BCF    03.6
13E2:  CALL   088
13E3:  BSF    0A.4
*
1435:  BSF    03.6
1436:  CLRF   63
1437:  BCF    0A.4
1438:  BCF    03.6
1439:  CALL   088
143A:  BSF    0A.4
*
1557:  BSF    03.6
1558:  CLRF   63
1559:  BCF    0A.4
155A:  BCF    03.6
155B:  CALL   088
155C:  BSF    0A.4
....................    i2c_start();
*
13E4:  BSF    03.5
13E5:  BSF    11.1
13E6:  BTFSC  11.1
13E7:  GOTO   3E6
*
143B:  BSF    03.5
143C:  BSF    11.1
143D:  BTFSC  11.1
143E:  GOTO   43D
*
155D:  BSF    03.5
155E:  BSF    11.1
155F:  BTFSC  11.1
1560:  GOTO   55F
....................    i2c_write(0xD1);
*
13E8:  MOVLW  D1
13E9:  BCF    03.5
13EA:  BSF    03.6
13EB:  MOVWF  63
13EC:  BCF    0A.4
13ED:  BCF    03.6
13EE:  CALL   088
13EF:  BSF    0A.4
*
143F:  MOVLW  D1
1440:  BCF    03.5
1441:  BSF    03.6
1442:  MOVWF  63
1443:  BCF    0A.4
1444:  BCF    03.6
1445:  CALL   088
1446:  BSF    0A.4
*
1561:  MOVLW  D1
1562:  BCF    03.5
1563:  BSF    03.6
1564:  MOVWF  63
1565:  BCF    0A.4
1566:  BCF    03.6
1567:  CALL   088
1568:  BSF    0A.4
....................    giay = bcd2bin(i2c_read(1) & 0x7F);
*
13F0:  MOVLW  01
13F1:  MOVWF  77
13F2:  BCF    0A.4
13F3:  CALL   0B4
13F4:  BSF    0A.4
13F5:  MOVF   78,W
13F6:  ANDLW  7F
13F7:  MOVWF  6F
13F8:  MOVWF  7C
13F9:  BCF    0A.4
13FA:  CALL   230
13FB:  BSF    0A.4
13FC:  MOVF   78,W
13FD:  MOVWF  38
*
1447:  MOVLW  01
1448:  MOVWF  77
1449:  BCF    0A.4
144A:  CALL   0B4
144B:  BSF    0A.4
144C:  MOVF   78,W
144D:  ANDLW  7F
144E:  MOVWF  6F
144F:  MOVWF  7C
1450:  BCF    0A.4
1451:  CALL   230
1452:  BSF    0A.4
1453:  MOVF   78,W
1454:  MOVWF  38
*
1569:  MOVLW  01
156A:  MOVWF  77
156B:  BCF    0A.4
156C:  CALL   0B4
156D:  BSF    0A.4
156E:  MOVF   78,W
156F:  ANDLW  7F
1570:  MOVWF  6F
1571:  MOVWF  7C
1572:  BCF    0A.4
1573:  CALL   230
1574:  BSF    0A.4
1575:  MOVF   78,W
1576:  MOVWF  38
....................    phut = bcd2bin(i2c_read(1) & 0x7F);
*
13FE:  MOVLW  01
13FF:  MOVWF  77
1400:  BCF    0A.4
1401:  CALL   0B4
1402:  BSF    0A.4
1403:  MOVF   78,W
1404:  ANDLW  7F
1405:  MOVWF  6F
1406:  MOVWF  7C
1407:  BCF    0A.4
1408:  CALL   230
1409:  BSF    0A.4
140A:  MOVF   78,W
140B:  MOVWF  37
*
1455:  MOVLW  01
1456:  MOVWF  77
1457:  BCF    0A.4
1458:  CALL   0B4
1459:  BSF    0A.4
145A:  MOVF   78,W
145B:  ANDLW  7F
145C:  MOVWF  6F
145D:  MOVWF  7C
145E:  BCF    0A.4
145F:  CALL   230
1460:  BSF    0A.4
1461:  MOVF   78,W
1462:  MOVWF  37
*
1577:  MOVLW  01
1578:  MOVWF  77
1579:  BCF    0A.4
157A:  CALL   0B4
157B:  BSF    0A.4
157C:  MOVF   78,W
157D:  ANDLW  7F
157E:  MOVWF  6F
157F:  MOVWF  7C
1580:  BCF    0A.4
1581:  CALL   230
1582:  BSF    0A.4
1583:  MOVF   78,W
1584:  MOVWF  37
....................    gio  = bcd2bin(i2c_read(0) & 0x3F);
*
140C:  CLRF   77
140D:  BCF    0A.4
140E:  CALL   0B4
140F:  BSF    0A.4
1410:  MOVF   78,W
1411:  ANDLW  3F
1412:  MOVWF  6F
1413:  MOVWF  7C
1414:  BCF    0A.4
1415:  CALL   230
1416:  BSF    0A.4
1417:  MOVF   78,W
1418:  MOVWF  36
*
1463:  CLRF   77
1464:  BCF    0A.4
1465:  CALL   0B4
1466:  BSF    0A.4
1467:  MOVF   78,W
1468:  ANDLW  3F
1469:  MOVWF  6F
146A:  MOVWF  7C
146B:  BCF    0A.4
146C:  CALL   230
146D:  BSF    0A.4
146E:  MOVF   78,W
146F:  MOVWF  36
*
1585:  CLRF   77
1586:  BCF    0A.4
1587:  CALL   0B4
1588:  BSF    0A.4
1589:  MOVF   78,W
158A:  ANDLW  3F
158B:  MOVWF  6F
158C:  MOVWF  7C
158D:  BCF    0A.4
158E:  CALL   230
158F:  BSF    0A.4
1590:  MOVF   78,W
1591:  MOVWF  36
....................    i2c_stop();
*
1419:  BSF    03.5
141A:  BSF    11.2
141B:  BTFSC  11.2
141C:  GOTO   41B
*
1470:  BSF    03.5
1471:  BSF    11.2
1472:  BTFSC  11.2
1473:  GOTO   472
*
1592:  BSF    03.5
1593:  BSF    11.2
1594:  BTFSC  11.2
1595:  GOTO   594
.................... }
.................... //========================================
.................... void ds1307_get_date(BYTE &thu,BYTE &ngay,BYTE &thang,BYTE &nam)
.................... {
....................    i2c_start();
*
137A:  BSF    03.5
137B:  BSF    11.0
137C:  BTFSC  11.0
137D:  GOTO   37C
*
1596:  BSF    11.0
1597:  BTFSC  11.0
1598:  GOTO   597
....................    i2c_write(0xD0);
*
137E:  MOVLW  D0
137F:  BCF    03.5
1380:  BSF    03.6
1381:  MOVWF  63
1382:  BCF    0A.4
1383:  BCF    03.6
1384:  CALL   088
1385:  BSF    0A.4
*
1599:  MOVLW  D0
159A:  BCF    03.5
159B:  BSF    03.6
159C:  MOVWF  63
159D:  BCF    0A.4
159E:  BCF    03.6
159F:  CALL   088
15A0:  BSF    0A.4
....................    i2c_write(3);            // Start at REG 3 - Day of week
*
1386:  MOVLW  03
1387:  BSF    03.6
1388:  MOVWF  63
1389:  BCF    0A.4
138A:  BCF    03.6
138B:  CALL   088
138C:  BSF    0A.4
*
15A1:  MOVLW  03
15A2:  BSF    03.6
15A3:  MOVWF  63
15A4:  BCF    0A.4
15A5:  BCF    03.6
15A6:  CALL   088
15A7:  BSF    0A.4
....................    i2c_stop();
*
138D:  BSF    03.5
138E:  BSF    11.2
138F:  BTFSC  11.2
1390:  GOTO   38F
*
15A8:  BSF    03.5
15A9:  BSF    11.2
15AA:  BTFSC  11.2
15AB:  GOTO   5AA
....................    i2c_start();
*
1391:  BSF    11.0
1392:  BTFSC  11.0
1393:  GOTO   392
*
15AC:  BSF    11.0
15AD:  BTFSC  11.0
15AE:  GOTO   5AD
....................    i2c_write(0xD1);
*
1394:  MOVLW  D1
1395:  BCF    03.5
1396:  BSF    03.6
1397:  MOVWF  63
1398:  BCF    0A.4
1399:  BCF    03.6
139A:  CALL   088
139B:  BSF    0A.4
*
15AF:  MOVLW  D1
15B0:  BCF    03.5
15B1:  BSF    03.6
15B2:  MOVWF  63
15B3:  BCF    0A.4
15B4:  BCF    03.6
15B5:  CALL   088
15B6:  BSF    0A.4
....................    thu = bcd2bin(i2c_read(1));   // REG 3
*
139C:  MOVLW  01
139D:  MOVWF  77
139E:  BCF    0A.4
139F:  CALL   0B4
13A0:  BSF    0A.4
13A1:  MOVF   78,W
13A2:  MOVWF  6F
13A3:  MOVWF  7C
13A4:  BCF    0A.4
13A5:  CALL   230
13A6:  BSF    0A.4
13A7:  MOVF   78,W
13A8:  MOVWF  39
*
15B7:  MOVLW  01
15B8:  MOVWF  77
15B9:  BCF    0A.4
15BA:  CALL   0B4
15BB:  BSF    0A.4
15BC:  MOVF   78,W
15BD:  MOVWF  6F
15BE:  MOVWF  7C
15BF:  BCF    0A.4
15C0:  CALL   230
15C1:  BSF    0A.4
15C2:  MOVF   78,W
15C3:  MOVWF  39
....................    ngay  = bcd2bin(i2c_read(1));   // REG 4
*
13A9:  MOVLW  01
13AA:  MOVWF  77
13AB:  BCF    0A.4
13AC:  CALL   0B4
13AD:  BSF    0A.4
13AE:  MOVF   78,W
13AF:  MOVWF  6F
13B0:  MOVWF  7C
13B1:  BCF    0A.4
13B2:  CALL   230
13B3:  BSF    0A.4
13B4:  MOVF   78,W
13B5:  MOVWF  3A
*
15C4:  MOVLW  01
15C5:  MOVWF  77
15C6:  BCF    0A.4
15C7:  CALL   0B4
15C8:  BSF    0A.4
15C9:  MOVF   78,W
15CA:  MOVWF  6F
15CB:  MOVWF  7C
15CC:  BCF    0A.4
15CD:  CALL   230
15CE:  BSF    0A.4
15CF:  MOVF   78,W
15D0:  MOVWF  3A
....................    thang = bcd2bin(i2c_read(1));   // REG 5
*
13B6:  MOVLW  01
13B7:  MOVWF  77
13B8:  BCF    0A.4
13B9:  CALL   0B4
13BA:  BSF    0A.4
13BB:  MOVF   78,W
13BC:  MOVWF  6F
13BD:  MOVWF  7C
13BE:  BCF    0A.4
13BF:  CALL   230
13C0:  BSF    0A.4
13C1:  MOVF   78,W
13C2:  MOVWF  3B
*
15D1:  MOVLW  01
15D2:  MOVWF  77
15D3:  BCF    0A.4
15D4:  CALL   0B4
15D5:  BSF    0A.4
15D6:  MOVF   78,W
15D7:  MOVWF  6F
15D8:  MOVWF  7C
15D9:  BCF    0A.4
15DA:  CALL   230
15DB:  BSF    0A.4
15DC:  MOVF   78,W
15DD:  MOVWF  3B
....................    nam = bcd2bin(i2c_read(0));            // REG 6
*
13C3:  CLRF   77
13C4:  BCF    0A.4
13C5:  CALL   0B4
13C6:  BSF    0A.4
13C7:  MOVF   78,W
13C8:  MOVWF  6F
13C9:  MOVWF  7C
13CA:  BCF    0A.4
13CB:  CALL   230
13CC:  BSF    0A.4
13CD:  MOVF   78,W
13CE:  MOVWF  3C
*
15DE:  CLRF   77
15DF:  BCF    0A.4
15E0:  CALL   0B4
15E1:  BSF    0A.4
15E2:  MOVF   78,W
15E3:  MOVWF  6F
15E4:  MOVWF  7C
15E5:  BCF    0A.4
15E6:  CALL   230
15E7:  BSF    0A.4
15E8:  MOVF   78,W
15E9:  MOVWF  3C
....................    i2c_stop();
*
13CF:  BSF    03.5
13D0:  BSF    11.2
13D1:  BTFSC  11.2
13D2:  GOTO   3D1
*
15EA:  BSF    03.5
15EB:  BSF    11.2
15EC:  BTFSC  11.2
15ED:  GOTO   5EC
15EE:  BCF    03.5
.................... }
.................... //========================================
.................... 
.................... BYTE bin2bcd(BYTE binary_value)//19 
.................... {
....................    BYTE temp; 
....................    BYTE retval; 
....................    temp = binary_value; 
*
1076:  MOVF   7C,W
1077:  MOVWF  7D
....................    retval = 0; 
1078:  CLRF   7E
....................    while(true) 
....................    { // Get the tens digit by doing multiple subtraction 
....................       if(temp >= 10) // of 10 from the binary value.
1079:  MOVF   7D,W
107A:  SUBLW  09
107B:  BTFSC  03.0
107C:  GOTO   082
....................       { 
....................          temp -= 10; 
107D:  MOVLW  0A
107E:  SUBWF  7D,F
....................          retval += 0x10; 
107F:  MOVLW  10
1080:  ADDWF  7E,F
....................       } 
1081:  GOTO   085
....................       else // Get the ones digit by adding the remainder. 
....................       { 
....................          retval += temp; 
1082:  MOVF   7D,W
1083:  ADDWF  7E,F
....................          break; 
1084:  GOTO   086
....................       } 
1085:  GOTO   079
....................    }
....................    return(retval); 
1086:  MOVF   7E,W
1087:  MOVWF  78
1088:  RETURN
.................... } 
.................... //========================================
.................... 
.................... // Input range - 00 to 99. 
.................... BYTE bcd2bin(BYTE bcd_value) //19
.................... {
....................   byte tam; 
....................   tam = bcd_value; 
*
0230:  MOVF   7C,W
0231:  MOVWF  7D
....................   tam >>= 1; // Shifting upper digit right by 1 is same as multiplying by 8.
0232:  BCF    03.0
0233:  RRF    7D,F
....................   tam &= 0x78; // Isolate the bits for the upper digit. 
0234:  MOVLW  78
0235:  ANDWF  7D,F
....................   return(tam + (tam >> 2) + (bcd_value & 0x0f)); // Now return: (Tens * 8) + (Tens * 2) + Ones 
0236:  RRF    7D,W
0237:  MOVWF  77
0238:  RRF    77,F
0239:  MOVLW  3F
023A:  ANDWF  77,F
023B:  MOVF   77,W
023C:  ADDWF  7D,W
023D:  MOVWF  7E
023E:  MOVF   7C,W
023F:  ANDLW  0F
0240:  ADDWF  7E,W
0241:  MOVWF  78
0242:  RETURN
....................   //return ( (bcd_val/16*10) + (bcd_val%16) );
.................... }
.................... //======================================== 
.................... void doc_byte_1307(byte diachi,byte &dulieu)
.................... {
....................    i2c_start();
*
00CA:  BSF    03.5
00CB:  BSF    11.0
00CC:  BTFSC  11.0
00CD:  GOTO   0CC
....................    i2c_write(0xD0); // ghi vao ds1307 chieu ghi
00CE:  MOVLW  D0
00CF:  BCF    03.5
00D0:  BSF    03.6
00D1:  MOVWF  63
00D2:  BCF    03.6
00D3:  CALL   088
....................    i2c_write(diachi); // ghi dia chi can doc
00D4:  MOVF   71,W
00D5:  BSF    03.6
00D6:  MOVWF  63
00D7:  BCF    03.6
00D8:  CALL   088
....................    i2c_start(); // start bit i2c 
00D9:  BSF    03.5
00DA:  BSF    11.1
00DB:  BTFSC  11.1
00DC:  GOTO   0DB
....................    i2c_write(0xD1); // ghi vao ds1307 chieu doc
00DD:  MOVLW  D1
00DE:  BCF    03.5
00DF:  BSF    03.6
00E0:  MOVWF  63
00E1:  BCF    03.6
00E2:  CALL   088
....................    dulieu = i2c_read(0);
00E3:  CLRF   77
00E4:  CALL   0B4
00E5:  MOVF   78,W
00E6:  MOVWF  6F
....................    i2c_stop();
00E7:  BSF    03.5
00E8:  BSF    11.2
00E9:  BTFSC  11.2
00EA:  GOTO   0E9
.................... }
.................... //======================================== 
.................... void ghi_byte_1307(byte diachi,byte dulieu)
.................... {
....................    i2c_start();
*
009A:  BSF    03.5
009B:  BSF    11.0
009C:  BTFSC  11.0
009D:  GOTO   09C
....................    i2c_write(0xD0); // ghi vao ds1307 chieu ghi
009E:  MOVLW  D0
009F:  BCF    03.5
00A0:  BSF    03.6
00A1:  MOVWF  63
00A2:  BCF    03.6
00A3:  CALL   088
....................    i2c_write(diachi); // ghi dia chi can doc
00A4:  MOVF   71,W
00A5:  BSF    03.6
00A6:  MOVWF  63
00A7:  BCF    03.6
00A8:  CALL   088
....................    i2c_write(dulieu); // 
00A9:  MOVF   72,W
00AA:  BSF    03.6
00AB:  MOVWF  63
00AC:  BCF    03.6
00AD:  CALL   088
....................    i2c_stop();
00AE:  BSF    03.5
00AF:  BSF    11.2
00B0:  BTFSC  11.2
00B1:  GOTO   0B0
00B2:  BCF    03.5
00B3:  RETURN
.................... }
.................... 
.................... /*#define DS1307_SDA  PIN_C4
.................... #define DS1307_SCL  PIN_C3
.................... #use i2c(master, sda=DS1307_SDA, scl=DS1307_SCL)
.................... */
.................... 
.................... 
.................... /*// Convert normal decimal numbers to binary coded decimal
.................... int8 decToBcd(int8 dec_val)
.................... {
....................   return ( (dec_val/10*16) + (dec_val%10) );
.................... }
.................... 
.................... // Convert binary coded decimal to normal decimal numbers
.................... int8 bcdToDec(int8 bcd_val)
.................... {
....................   return ( (bcd_val/16*10) + (bcd_val%16) );
.................... }
.................... 
.................... //==========================
.................... // initial DS1307
.................... //==========================
.................... void ds1307_init()
.................... {
....................    output_float(DS1307_SCL);
....................    output_float(DS1307_SDA);
.................... }
.................... //==========================
.................... // write data one byte to
.................... // DS1307
.................... //==========================
.................... void write_DS1307(byte address, BYTE data)
.................... {
....................    short int status;
....................    i2c_start();
....................    i2c_write(0xd0);
....................    i2c_write(address);
....................    i2c_write(data);
....................    i2c_stop();
....................    i2c_start();
....................    status=i2c_write(0xd0);
....................    while(status==1)
....................    {
....................       i2c_start();
....................       status=i2c_write(0xd0);
....................    }
.................... }
.................... //==========================
.................... // read data one byte from DS1307
.................... //==========================
.................... BYTE read_DS1307(byte address)
.................... {
....................    BYTE data;
....................    i2c_start();
....................    i2c_write(0xd0);
....................    i2c_write(address);
....................    i2c_start();
....................    i2c_write(0xd1);
....................    data=i2c_read(0);
....................    i2c_stop();
....................    return(data);
.................... }
.................... 
.................... // 1) Sets the date and time on the ds1307
.................... // 2) Starts the clock
.................... // 3) Sets hour mode to 24 hour clock
.................... // Assumes you're passing in valid numbers
.................... 
.................... void ds1307_get_date(BYTE &thu,BYTE &ngay,BYTE &thang,BYTE &nam)
.................... {
....................   i2c_start();
....................   i2c_write(0xD0);
....................   i2c_write(3);            // Start at REG 3 - Day of week
....................   i2c_stop();
....................   i2c_start();
....................   i2c_write(0xD1);
....................   thu = bcdToDec(i2c_read() & 0x7f);   // REG 3
....................   ngay  = bcdToDec(i2c_read() & 0x3f);   // REG 4
....................   thang = bcdToDec(i2c_read() & 0x1f);   // REG 5
....................   nam = bcdToDec(i2c_read(0));            // REG 6
....................   i2c_stop();
.................... }
.................... 
.................... */
.................... 
.................... #use rs232(baud=9600, xmit=PIN_B6, rcv=PIN_B7, bits=8, parity=N, stop=1)
*
0503:  BSF    03.5
0504:  BCF    06.6
0505:  BCF    03.5
0506:  BCF    06.6
0507:  MOVLW  08
0508:  MOVWF  78
0509:  GOTO   50A
050A:  NOP
050B:  BSF    78.7
050C:  GOTO   51D
050D:  BCF    78.7
050E:  BSF    03.5
050F:  RRF    28,F
0510:  BCF    03.5
0511:  BTFSC  03.0
0512:  BSF    06.6
0513:  BTFSS  03.0
0514:  BCF    06.6
0515:  BSF    78.6
0516:  GOTO   51D
0517:  BCF    78.6
0518:  DECFSZ 78,F
0519:  GOTO   50E
051A:  GOTO   51B
051B:  NOP
051C:  BSF    06.6
051D:  MOVLW  A7
051E:  MOVWF  04
051F:  DECFSZ 04,F
0520:  GOTO   51F
0521:  GOTO   522
0522:  BTFSC  78.7
0523:  GOTO   50D
0524:  BTFSC  78.6
0525:  GOTO   517
0526:  RETURN
.................... #define LED1 PIN_E0  
.................... #define BUZZER PIN_A4 
.................... #define tang PIN_C0 // tang 
.................... #define giam PIN_C1 // giam 
.................... #define select PIN_C2 // select
.................... #define md_system PIN_D1 // mode
.................... #define DHT22_PIN PIN_B0   
.................... 
.................... int1 flag_enable;
.................... int1 toggle=false;
.................... float temperature = 0, humidity = 0;
.................... byte gio,phut,giay; 
.................... byte thu,ngay,thang,nam; 
.................... byte set_gio,set_phut,set_giay; 
.................... byte chinh=0; 
.................... byte ct=0; 
.................... //!char buffer[20];
.................... int1 bct=0; 
.................... int1 np=1;
.................... unsigned int16 TEMP = 0;
.................... unsigned int16 buzzertime = 0;
.................... volatile int16 timer_count = 0;
.................... int8 mode_bt =0;
.................... 
.................... #INT_TIMER1
.................... VOID timer1_isr()
.................... {
....................    set_timer1(3036); 
*
0058:  CLRF   0E
0059:  MOVLW  0B
005A:  MOVWF  0F
005B:  MOVLW  DC
005C:  MOVWF  0E
005D:  NOP
....................    TEMP++;
005E:  INCF   42,F
005F:  BTFSC  03.2
0060:  INCF   43,F
....................    buzzertime++;
0061:  INCF   44,F
0062:  BTFSC  03.2
0063:  INCF   45,F
....................    if (buzzertime == 40)   // 1s
0064:  MOVF   44,W
0065:  SUBLW  28
0066:  BTFSS  03.2
0067:  GOTO   06F
0068:  MOVF   45,F
0069:  BTFSS  03.2
006A:  GOTO   06F
....................    {
....................       toggle = !toggle;
006B:  MOVLW  02
006C:  XORWF  2D,F
....................       buzzertime = 0;
006D:  CLRF   45
006E:  CLRF   44
....................    }
....................    if (TEMP == 10)   // 1s
006F:  MOVF   42,W
0070:  SUBLW  0A
0071:  BTFSS  03.2
0072:  GOTO   078
0073:  MOVF   43,F
0074:  BTFSS  03.2
0075:  GOTO   078
....................    {
....................       TEMP = 0;
0076:  CLRF   43
0077:  CLRF   42
....................    }
.................... }
.................... //========================================
0078:  BCF    0C.0
0079:  BCF    0A.3
007A:  BCF    0A.4
007B:  GOTO   031
.................... #INT_TIMER0
.................... void timer0_isr() {
....................     set_timer0(100); 
007C:  MOVLW  64
007D:  MOVWF  01
....................     timer_count++;
007E:  INCF   46,F
007F:  BTFSC  03.2
0080:  INCF   47,F
0081:  BCF    0B.2
0082:  BCF    0A.3
0083:  BCF    0A.4
0084:  GOTO   031
.................... }
.................... //========================================
.................... void bao_thuc();
.................... //========================================
.................... void quet_phim();
.................... //========================================
.................... void chedo_mode();
.................... //======================================== 
.................... void timer0_init() {
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_128); 
*
0243:  BSF    03.5
0244:  MOVF   01,W
0245:  ANDLW  C0
0246:  IORLW  06
0247:  MOVWF  01
....................    set_timer0(100);
0248:  MOVLW  64
0249:  BCF    03.5
024A:  MOVWF  01
....................    enable_interrupts(INT_TIMER0);
024B:  BSF    0B.5
024C:  BCF    0A.3
024D:  BSF    0A.4
024E:  GOTO   477 (RETURN)
.................... //!   enable_interrupts(GLOBAL);
.................... }
.................... //========================================
.................... void start_signal() {
....................     output_drive(DHT22_PIN);
*
0367:  BSF    03.5
0368:  BCF    06.0
....................     output_low(DHT22_PIN);
0369:  BCF    06.0
036A:  BCF    03.5
036B:  BCF    06.0
....................     delay_ms(18);
036C:  MOVLW  12
036D:  BSF    03.6
036E:  MOVWF  39
036F:  BCF    03.6
0370:  CALL   0FA
....................     output_high(DHT22_PIN);
0371:  BSF    03.5
0372:  BCF    06.0
0373:  BCF    03.5
0374:  BSF    06.0
....................     delay_us(30);
0375:  MOVLW  31
0376:  MOVWF  77
0377:  DECFSZ 77,F
0378:  GOTO   377
0379:  GOTO   37A
....................     output_float(DHT22_PIN); 
037A:  BSF    03.5
037B:  BSF    06.0
.................... }
.................... short check_response() {
037C:  CLRF   7D
....................     int timeout = 0;
....................     while (!input(DHT22_PIN)) {
037D:  BSF    06.0
037E:  BCF    03.5
037F:  BTFSC  06.0
0380:  GOTO   388
....................         if (++timeout > 1000) return 0; 
0381:  INCF   7D,F
....................         delay_us(1);
0382:  GOTO   383
0383:  GOTO   384
0384:  NOP
0385:  BSF    03.5
0386:  GOTO   37D
0387:  BCF    03.5
....................     }
.................... 
....................     timeout = 0;
0388:  CLRF   7D
....................     while (input(DHT22_PIN)) {
0389:  BSF    03.5
038A:  BSF    06.0
038B:  BCF    03.5
038C:  BTFSS  06.0
038D:  GOTO   393
....................         if (++timeout > 1000) return 0;
038E:  INCF   7D,F
....................         delay_us(1);
038F:  GOTO   390
0390:  GOTO   391
0391:  NOP
0392:  GOTO   389
....................     }
.................... 
....................     return 1; 
0393:  MOVLW  01
0394:  MOVWF  78
.................... }
.................... //========================================
.................... unsigned int8 read_data() {
*
024F:  CLRF   7D
....................     unsigned int8 data = 0;
....................     for (int i = 0; i < 8; i++) {
0250:  CLRF   7E
0251:  MOVF   7E,W
0252:  SUBLW  07
0253:  BTFSS  03.0
0254:  GOTO   279
....................         while (!input(DHT22_PIN)); 
0255:  BSF    03.5
0256:  BSF    06.0
0257:  BCF    03.5
0258:  BTFSS  06.0
0259:  GOTO   255
....................         delay_us(30);
025A:  MOVLW  31
025B:  MOVWF  77
025C:  DECFSZ 77,F
025D:  GOTO   25C
025E:  GOTO   25F
....................         if (input(DHT22_PIN)) {
025F:  BSF    03.5
0260:  BSF    06.0
0261:  BCF    03.5
0262:  BTFSS  06.0
0263:  GOTO   277
....................             data |= (1 << (7 - i));
0264:  MOVF   7E,W
0265:  SUBLW  07
0266:  MOVWF  78
0267:  MOVLW  01
0268:  MOVWF  77
0269:  MOVF   78,F
026A:  BTFSC  03.2
026B:  GOTO   270
026C:  BCF    03.0
026D:  RLF    77,F
026E:  DECFSZ 78,F
026F:  GOTO   26C
0270:  MOVF   77,W
0271:  IORWF  7D,F
....................             while (input(DHT22_PIN)); 
0272:  BSF    03.5
0273:  BSF    06.0
0274:  BCF    03.5
0275:  BTFSC  06.0
0276:  GOTO   272
....................         }
0277:  INCF   7E,F
0278:  GOTO   251
....................     }
....................     return data;
0279:  MOVF   7D,W
027A:  MOVWF  78
027B:  RETURN
.................... }
.................... //========================================
.................... short read_dht22() {
....................     unsigned int8 humidity_high, humidity_low, temp_high, temp_low, checksum;
....................     unsigned int16 raw_humidity, raw_temp;
.................... 
....................     start_signal();
....................     if (check_response()) {
*
0395:  MOVF   78,F
0396:  BTFSC  03.2
0397:  GOTO   40B
....................         humidity_high = read_data();
0398:  CALL   24F
0399:  MOVF   78,W
039A:  MOVWF  6F
....................         humidity_low = read_data();
039B:  CALL   24F
039C:  MOVF   78,W
039D:  MOVWF  70
....................         temp_high = read_data();
039E:  CALL   24F
039F:  MOVF   78,W
03A0:  MOVWF  71
....................         temp_low = read_data();
03A1:  CALL   24F
03A2:  MOVF   78,W
03A3:  MOVWF  72
....................         checksum = read_data();
03A4:  CALL   24F
03A5:  MOVF   78,W
03A6:  MOVWF  73
.................... 
....................         if (checksum == (humidity_high + humidity_low + temp_high + temp_low)) {
03A7:  MOVF   70,W
03A8:  ADDWF  6F,W
03A9:  ADDWF  71,W
03AA:  ADDWF  72,W
03AB:  SUBWF  73,W
03AC:  BTFSS  03.2
03AD:  GOTO   40B
....................             raw_humidity = ((unsigned int16)humidity_high << 8) | humidity_low;
03AE:  CLRF   7E
03AF:  MOVF   6F,W
03B0:  MOVWF  7D
03B1:  MOVWF  7E
03B2:  CLRF   7D
03B3:  MOVF   7D,W
03B4:  IORWF  70,W
03B5:  MOVWF  74
03B6:  MOVF   7E,W
03B7:  MOVWF  75
....................             raw_temp = ((unsigned int16)(temp_high & 0x7F) << 8) | temp_low;
03B8:  MOVF   71,W
03B9:  ANDLW  7F
03BA:  CLRF   7E
03BB:  MOVWF  7D
03BC:  MOVWF  7E
03BD:  CLRF   7D
03BE:  MOVF   7D,W
03BF:  IORWF  72,W
03C0:  MOVWF  7B
03C1:  MOVF   7E,W
03C2:  MOVWF  7C
.................... 
....................             humidity = raw_humidity / 10.0;
03C3:  MOVF   75,W
03C4:  BSF    03.6
03C5:  MOVWF  53
03C6:  MOVF   74,W
03C7:  MOVWF  52
03C8:  BCF    03.6
03C9:  CALL   27C
03CA:  MOVF   7A,W
03CB:  BSF    03.5
03CC:  MOVWF  23
03CD:  MOVF   79,W
03CE:  MOVWF  22
03CF:  MOVF   78,W
03D0:  MOVWF  21
03D1:  MOVF   77,W
03D2:  MOVWF  20
03D3:  CLRF   27
03D4:  CLRF   26
03D5:  MOVLW  20
03D6:  MOVWF  25
03D7:  MOVLW  82
03D8:  MOVWF  24
03D9:  BCF    03.5
03DA:  CALL   29B
03DB:  MOVF   7A,W
03DC:  MOVWF  35
03DD:  MOVF   79,W
03DE:  MOVWF  34
03DF:  MOVF   78,W
03E0:  MOVWF  33
03E1:  MOVF   77,W
03E2:  MOVWF  32
....................             temperature = raw_temp / 10.0;
03E3:  MOVF   7C,W
03E4:  BSF    03.6
03E5:  MOVWF  53
03E6:  MOVF   7B,W
03E7:  MOVWF  52
03E8:  BCF    03.6
03E9:  CALL   27C
03EA:  MOVF   7A,W
03EB:  BSF    03.5
03EC:  MOVWF  23
03ED:  MOVF   79,W
03EE:  MOVWF  22
03EF:  MOVF   78,W
03F0:  MOVWF  21
03F1:  MOVF   77,W
03F2:  MOVWF  20
03F3:  CLRF   27
03F4:  CLRF   26
03F5:  MOVLW  20
03F6:  MOVWF  25
03F7:  MOVLW  82
03F8:  MOVWF  24
03F9:  BCF    03.5
03FA:  CALL   29B
03FB:  MOVF   7A,W
03FC:  MOVWF  31
03FD:  MOVF   79,W
03FE:  MOVWF  30
03FF:  MOVF   78,W
0400:  MOVWF  2F
0401:  MOVF   77,W
0402:  MOVWF  2E
....................             if (temp_high & 0x80)
0403:  BTFSS  71.7
0404:  GOTO   408
....................                 temperature = -temperature;
0405:  MOVF   2F,W
0406:  XORLW  80
0407:  MOVWF  2F
....................             return 1;
0408:  MOVLW  01
0409:  MOVWF  78
040A:  GOTO   40D
....................         }
....................     }
....................     return 0;
040B:  MOVLW  00
040C:  MOVWF  78
040D:  RETURN
.................... }
.................... //========================================
.................... void display_time_lcd(unsigned int8 gio, unsigned int8 phut, unsigned int8 giay) {
....................     char buffer[17];
....................     // Format: hh:mm:ss
....................     sprintf(buffer, "%02u:%02u:%02u", gio, phut, giay);
*
0A59:  MOVLW  01
0A5A:  BCF    03.6
0A5B:  MOVWF  4A
0A5C:  MOVLW  3C
0A5D:  MOVWF  49
0A5E:  BSF    03.6
0A5F:  MOVF   39,W
0A60:  MOVWF  5B
0A61:  MOVLW  01
0A62:  MOVWF  5C
0A63:  BCF    0A.3
0A64:  BCF    03.6
0A65:  CALL   6B0
0A66:  BSF    0A.3
0A67:  MOVLW  3A
0A68:  BSF    03.6
0A69:  MOVWF  64
0A6A:  BCF    0A.3
0A6B:  BCF    03.6
0A6C:  CALL   6A1
0A6D:  BSF    0A.3
0A6E:  BSF    03.6
0A6F:  MOVF   3A,W
0A70:  MOVWF  5B
0A71:  MOVLW  01
0A72:  MOVWF  5C
0A73:  BCF    0A.3
0A74:  BCF    03.6
0A75:  CALL   6B0
0A76:  BSF    0A.3
0A77:  MOVLW  3A
0A78:  BSF    03.6
0A79:  MOVWF  64
0A7A:  BCF    0A.3
0A7B:  BCF    03.6
0A7C:  CALL   6A1
0A7D:  BSF    0A.3
0A7E:  BSF    03.6
0A7F:  MOVF   3B,W
0A80:  MOVWF  5B
0A81:  MOVLW  01
0A82:  MOVWF  5C
0A83:  BCF    0A.3
0A84:  BCF    03.6
0A85:  CALL   6B0
0A86:  BSF    0A.3
....................     char line1[] = "Real time:";
0A87:  MOVLW  52
0A88:  BSF    03.6
0A89:  MOVWF  4D
0A8A:  MOVLW  65
0A8B:  MOVWF  4E
0A8C:  MOVLW  61
0A8D:  MOVWF  4F
0A8E:  MOVLW  6C
0A8F:  MOVWF  50
0A90:  MOVLW  20
0A91:  MOVWF  51
0A92:  MOVLW  74
0A93:  MOVWF  52
0A94:  MOVLW  69
0A95:  MOVWF  53
0A96:  MOVLW  6D
0A97:  MOVWF  54
0A98:  MOVLW  65
0A99:  MOVWF  55
0A9A:  MOVLW  3A
0A9B:  MOVWF  56
0A9C:  CLRF   57
....................     I2C_LCD_Set_Cursor(0, 0);
0A9D:  CLRF   59
0A9E:  CLRF   5A
0A9F:  BCF    0A.3
0AA0:  BCF    03.6
0AA1:  CALL   1DA
0AA2:  BSF    0A.3
....................     I2C_LCD_Write_String(line1);
0AA3:  MOVLW  01
0AA4:  BSF    03.6
0AA5:  MOVWF  5A
0AA6:  MOVLW  4D
0AA7:  MOVWF  59
0AA8:  BCF    0A.3
0AA9:  BCF    03.6
0AAA:  CALL   209
0AAB:  BSF    0A.3
....................     I2C_LCD_Set_Cursor(1, 5);
0AAC:  MOVLW  01
0AAD:  BSF    03.6
0AAE:  MOVWF  59
0AAF:  MOVLW  05
0AB0:  MOVWF  5A
0AB1:  BCF    0A.3
0AB2:  BCF    03.6
0AB3:  CALL   1DA
0AB4:  BSF    0A.3
....................     I2C_LCD_Write_String(buffer);
0AB5:  MOVLW  01
0AB6:  BSF    03.6
0AB7:  MOVWF  5A
0AB8:  MOVLW  3C
0AB9:  MOVWF  59
0ABA:  BCF    0A.3
0ABB:  BCF    03.6
0ABC:  CALL   209
0ABD:  BSF    0A.3
.................... }
.................... //========================================
.................... void display_float(char label[], float value, int line) {
*
0800:  BSF    03.6
0801:  MOVF   3E,W
0802:  MOVWF  55
0803:  MOVF   3D,W
0804:  MOVWF  54
0805:  MOVF   3C,W
0806:  MOVWF  53
0807:  MOVF   3B,W
0808:  MOVWF  52
0809:  BCF    0A.3
080A:  BCF    03.6
080B:  CALL   6EF
080C:  BSF    0A.3
080D:  MOVF   78,W
080E:  BSF    03.6
080F:  MOVWF  40
0810:  CLRF   53
0811:  MOVF   40,W
0812:  MOVWF  52
0813:  BCF    0A.3
0814:  BCF    03.6
0815:  CALL   27C
0816:  BSF    0A.3
0817:  BSF    03.1
0818:  BSF    03.6
0819:  MOVF   3E,W
081A:  MOVWF  55
081B:  MOVF   3D,W
081C:  MOVWF  54
081D:  MOVF   3C,W
081E:  MOVWF  53
081F:  MOVF   3B,W
0820:  MOVWF  52
0821:  MOVF   7A,W
0822:  MOVWF  59
0823:  MOVF   79,W
0824:  MOVWF  58
0825:  MOVF   78,W
0826:  MOVWF  57
0827:  MOVF   77,W
0828:  MOVWF  56
*
096C:  MOVF   7A,W
096D:  MOVWF  55
096E:  MOVF   79,W
096F:  MOVWF  54
0970:  MOVF   78,W
0971:  MOVWF  53
0972:  MOVF   77,W
0973:  MOVWF  52
0974:  MOVF   55,W
0975:  MOVWF  59
0976:  MOVF   54,W
0977:  MOVWF  58
0978:  MOVF   53,W
0979:  MOVWF  57
097A:  MOVF   52,W
097B:  MOVWF  56
097C:  CLRF   5D
097D:  CLRF   5C
097E:  MOVLW  20
097F:  MOVWF  5B
0980:  MOVLW  82
0981:  MOVWF  5A
0982:  BCF    0A.3
0983:  BCF    03.6
0984:  CALL   43B
0985:  BSF    0A.3
0986:  MOVF   7A,W
0987:  BSF    03.6
0988:  MOVWF  55
0989:  MOVF   79,W
098A:  MOVWF  54
098B:  MOVF   78,W
098C:  MOVWF  53
098D:  MOVF   77,W
098E:  MOVWF  52
098F:  BCF    0A.3
0990:  BCF    03.6
0991:  CALL   6EF
0992:  BSF    0A.3
0993:  MOVF   78,W
0994:  BSF    03.6
0995:  MOVWF  41
....................    int8 nguyen = (int8)value;
....................    int8 thapphan = (int8)((value - nguyen) * 10); 
.................... 
....................    char buffer[16];
....................    I2C_LCD_Set_Cursor(line, 0);
0996:  MOVF   3F,W
0997:  MOVWF  59
0998:  CLRF   5A
0999:  BCF    0A.3
099A:  BCF    03.6
099B:  CALL   1DA
099C:  BSF    0A.3
....................    I2C_LCD_Write_String(label);
099D:  BSF    03.6
099E:  MOVF   3A,W
099F:  MOVWF  5A
09A0:  MOVF   39,W
09A1:  MOVWF  59
09A2:  BCF    0A.3
09A3:  BCF    03.6
09A4:  CALL   209
09A5:  BSF    0A.3
....................    sprintf(buffer, "%d.%d", nguyen, thapphan);
09A6:  MOVLW  01
09A7:  MOVWF  4A
09A8:  MOVLW  42
09A9:  MOVWF  49
09AA:  BSF    03.6
09AB:  MOVF   40,W
09AC:  MOVWF  52
09AD:  MOVLW  18
09AE:  MOVWF  53
09AF:  BCF    0A.3
09B0:  BCF    03.6
09B1:  CALL   710
09B2:  BSF    0A.3
09B3:  MOVLW  2E
09B4:  BSF    03.6
09B5:  MOVWF  64
09B6:  BCF    0A.3
09B7:  BCF    03.6
09B8:  CALL   6A1
09B9:  BSF    0A.3
09BA:  BSF    03.6
09BB:  MOVF   41,W
09BC:  MOVWF  52
09BD:  MOVLW  18
09BE:  MOVWF  53
09BF:  BCF    0A.3
09C0:  BCF    03.6
09C1:  CALL   710
09C2:  BSF    0A.3
....................    I2C_LCD_Set_Cursor(line, 10);
09C3:  BSF    03.6
09C4:  MOVF   3F,W
09C5:  MOVWF  59
09C6:  MOVLW  0A
09C7:  MOVWF  5A
09C8:  BCF    0A.3
09C9:  BCF    03.6
09CA:  CALL   1DA
09CB:  BSF    0A.3
....................    I2C_LCD_Write_String(buffer);
09CC:  MOVLW  01
09CD:  BSF    03.6
09CE:  MOVWF  5A
09CF:  MOVLW  42
09D0:  MOVWF  59
09D1:  BCF    0A.3
09D2:  BCF    03.6
09D3:  CALL   209
09D4:  BSF    0A.3
09D5:  RETURN
.................... }
.................... //========================================
.................... void display_date_lcd(unsigned int8 ngay, unsigned int8 thang, unsigned int16 nam) {
....................     char buffer[17];
.................... 
....................     // Format: dd/mm/yyyy
....................     sprintf(buffer, "%02u/%02u/%04lu", ngay, thang, (unsigned long)(nam+2000));
*
0ACF:  MOVLW  D0
0AD0:  ADDWF  3B,W
0AD1:  MOVWF  59
0AD2:  MOVF   3C,W
0AD3:  MOVWF  5A
0AD4:  MOVLW  07
0AD5:  BTFSC  03.0
0AD6:  MOVLW  08
0AD7:  ADDWF  5A,F
0AD8:  MOVLW  01
0AD9:  BCF    03.6
0ADA:  MOVWF  4A
0ADB:  MOVLW  3D
0ADC:  MOVWF  49
0ADD:  BSF    03.6
0ADE:  MOVF   39,W
0ADF:  MOVWF  5B
0AE0:  MOVLW  01
0AE1:  MOVWF  5C
0AE2:  BCF    0A.3
0AE3:  BCF    03.6
0AE4:  CALL   6B0
0AE5:  BSF    0A.3
0AE6:  MOVLW  2F
0AE7:  BSF    03.6
0AE8:  MOVWF  64
0AE9:  BCF    0A.3
0AEA:  BCF    03.6
0AEB:  CALL   6A1
0AEC:  BSF    0A.3
0AED:  BSF    03.6
0AEE:  MOVF   3A,W
0AEF:  MOVWF  5B
0AF0:  MOVLW  01
0AF1:  MOVWF  5C
0AF2:  BCF    0A.3
0AF3:  BCF    03.6
0AF4:  CALL   6B0
0AF5:  BSF    0A.3
0AF6:  MOVLW  2F
0AF7:  BSF    03.6
0AF8:  MOVWF  64
0AF9:  BCF    0A.3
0AFA:  BCF    03.6
0AFB:  CALL   6A1
0AFC:  BSF    0A.3
0AFD:  MOVLW  09
0AFE:  MOVWF  04
0AFF:  BSF    03.6
0B00:  MOVF   5A,W
0B01:  MOVWF  5C
0B02:  MOVF   59,W
0B03:  MOVWF  5B
....................     
....................     char line1[] = "Real date:";
*
0B6A:  MOVLW  52
0B6B:  MOVWF  4E
0B6C:  MOVLW  65
0B6D:  MOVWF  4F
0B6E:  MOVLW  61
0B6F:  MOVWF  50
0B70:  MOVLW  6C
0B71:  MOVWF  51
0B72:  MOVLW  20
0B73:  MOVWF  52
0B74:  MOVLW  64
0B75:  MOVWF  53
0B76:  MOVLW  61
0B77:  MOVWF  54
0B78:  MOVLW  74
0B79:  MOVWF  55
0B7A:  MOVLW  65
0B7B:  MOVWF  56
0B7C:  MOVLW  3A
0B7D:  MOVWF  57
0B7E:  CLRF   58
....................     I2C_LCD_Set_Cursor(0, 0);
0B7F:  CLRF   59
0B80:  CLRF   5A
0B81:  BCF    0A.3
0B82:  BCF    03.6
0B83:  CALL   1DA
0B84:  BSF    0A.3
....................     I2C_LCD_Write_String(line1);
0B85:  MOVLW  01
0B86:  BSF    03.6
0B87:  MOVWF  5A
0B88:  MOVLW  4E
0B89:  MOVWF  59
0B8A:  BCF    0A.3
0B8B:  BCF    03.6
0B8C:  CALL   209
0B8D:  BSF    0A.3
....................     I2C_LCD_Set_Cursor(1, 2);
0B8E:  MOVLW  01
0B8F:  BSF    03.6
0B90:  MOVWF  59
0B91:  MOVLW  02
0B92:  MOVWF  5A
0B93:  BCF    0A.3
0B94:  BCF    03.6
0B95:  CALL   1DA
0B96:  BSF    0A.3
....................     I2C_LCD_Write_String(buffer);
0B97:  MOVLW  01
0B98:  BSF    03.6
0B99:  MOVWF  5A
0B9A:  MOVLW  3D
0B9B:  MOVWF  59
0B9C:  BCF    0A.3
0B9D:  BCF    03.6
0B9E:  CALL   209
0B9F:  BSF    0A.3
.................... }
.................... //========================================
.................... void main()
*
12B6:  MOVF   03,W
12B7:  ANDLW  1F
12B8:  MOVWF  03
12B9:  MOVLW  FF
12BA:  MOVWF  2B
12BB:  BSF    2B.3
12BC:  MOVF   2B,W
12BD:  BSF    03.5
12BE:  MOVWF  07
12BF:  BCF    03.5
12C0:  BSF    2B.4
12C1:  MOVF   2B,W
12C2:  BSF    03.5
12C3:  MOVWF  07
12C4:  MOVLW  31
12C5:  MOVWF  13
12C6:  MOVLW  28
12C7:  BCF    03.5
12C8:  MOVWF  14
12C9:  BSF    03.5
12CA:  BSF    14.7
12CB:  BCF    14.6
12CC:  BCF    06.6
12CD:  BCF    03.5
12CE:  BSF    06.6
12CF:  BCF    2D.1
12D0:  CLRF   31
12D1:  CLRF   30
12D2:  CLRF   2F
12D3:  CLRF   2E
12D4:  CLRF   35
12D5:  CLRF   34
12D6:  CLRF   33
12D7:  CLRF   32
12D8:  CLRF   40
12D9:  CLRF   41
12DA:  BCF    2D.2
12DB:  BSF    2D.3
12DC:  CLRF   43
12DD:  CLRF   42
12DE:  CLRF   45
12DF:  CLRF   44
12E0:  CLRF   47
12E1:  CLRF   46
12E2:  CLRF   48
12E3:  CLRF   4A
12E4:  CLRF   49
12E5:  BSF    03.5
12E6:  BSF    03.6
12E7:  MOVF   09,W
12E8:  ANDLW  C0
12E9:  MOVWF  09
12EA:  BCF    03.6
12EB:  BCF    1F.4
12EC:  BCF    1F.5
12ED:  MOVLW  00
12EE:  BSF    03.6
12EF:  MOVWF  08
12F0:  BCF    03.5
12F1:  CLRF   07
12F2:  CLRF   08
12F3:  CLRF   09
12F4:  BCF    03.7
.................... {
....................    ds1307_init (); 
*
12F8:  BCF    0A.4
12F9:  GOTO   0C4
12FA:  BSF    0A.4
....................    I2C_LCD_Init();
12FB:  BCF    0A.4
12FC:  GOTO   17E
12FD:  BSF    0A.4
....................    SETUP_ADC_PORTS (NO_ANALOGS);
12FE:  BSF    03.5
12FF:  BSF    03.6
1300:  MOVF   09,W
1301:  ANDLW  C0
1302:  MOVWF  09
1303:  BCF    03.6
1304:  BCF    1F.4
1305:  BCF    1F.5
1306:  MOVLW  00
1307:  BSF    03.6
1308:  MOVWF  08
....................    set_tris_b(0b10000001); // RB7 input, RB6 output, RB0 input
1309:  MOVLW  81
130A:  BCF    03.6
130B:  MOVWF  06
....................    set_tris_c(0b00011111); // RC0-4 input (I2C + button)
130C:  MOVLW  1F
130D:  MOVWF  07
130E:  BCF    03.5
130F:  MOVWF  2B
....................    set_tris_d(0b00000010); // RD1 input
1310:  MOVLW  02
1311:  BSF    03.5
1312:  MOVWF  08
....................    set_tris_a(0b11000000); // RA6-7 for oscillator, RA4 output
1313:  MOVLW  C0
1314:  MOVWF  05
....................    set_tris_e(0b00000000);
1315:  BCF    09.0
1316:  BCF    09.1
1317:  BCF    09.2
1318:  BCF    09.3
....................    set_gio = gio;
1319:  BCF    03.5
131A:  MOVF   36,W
131B:  MOVWF  3D
....................    set_phut = phut;
131C:  MOVF   37,W
131D:  MOVWF  3E
....................    set_giay = giay-10;
131E:  MOVLW  0A
131F:  SUBWF  38,W
1320:  MOVWF  3F
....................    flag_enable= 0;
1321:  BCF    2D.0
....................    toggle = false;
1322:  BCF    2D.1
.................... //!   ds1307_set_date_time(22,7,0,0,26,5,25);
....................    I2C_LCD_Clear();
1323:  BCF    0A.4
1324:  CALL   172
1325:  BSF    0A.4
....................    I2C_LCD_BackLight(1);
1326:  MOVLW  01
1327:  MOVWF  6F
1328:  BCF    0A.4
1329:  GOTO   1BC
132A:  BSF    0A.4
....................    char line1[] = "   START ";
132B:  MOVLW  20
132C:  MOVWF  4B
132D:  MOVWF  4C
132E:  MOVWF  4D
132F:  MOVLW  53
1330:  MOVWF  4E
1331:  MOVLW  54
1332:  MOVWF  4F
1333:  MOVLW  41
1334:  MOVWF  50
1335:  MOVLW  52
1336:  MOVWF  51
1337:  MOVLW  54
1338:  MOVWF  52
1339:  MOVLW  20
133A:  MOVWF  53
133B:  CLRF   54
....................    char line2[] = "   DO AN 1 ";
133C:  MOVWF  55
133D:  MOVWF  56
133E:  MOVWF  57
133F:  MOVLW  44
1340:  MOVWF  58
1341:  MOVLW  4F
1342:  MOVWF  59
1343:  MOVLW  20
1344:  MOVWF  5A
1345:  MOVLW  41
1346:  MOVWF  5B
1347:  MOVLW  4E
1348:  MOVWF  5C
1349:  MOVLW  20
134A:  MOVWF  5D
134B:  MOVLW  31
134C:  MOVWF  5E
134D:  MOVLW  20
134E:  MOVWF  5F
134F:  CLRF   60
....................    I2C_LCD_Set_Cursor(0,0);
1350:  BSF    03.6
1351:  CLRF   59
1352:  CLRF   5A
1353:  BCF    0A.4
1354:  BCF    03.6
1355:  CALL   1DA
1356:  BSF    0A.4
....................    I2C_LCD_Write_String(line1);
1357:  BSF    03.6
1358:  CLRF   5A
1359:  MOVLW  4B
135A:  MOVWF  59
135B:  BCF    0A.4
135C:  BCF    03.6
135D:  CALL   209
135E:  BSF    0A.4
....................    I2C_LCD_Set_Cursor(1,0);
135F:  MOVLW  01
1360:  BSF    03.6
1361:  MOVWF  59
1362:  CLRF   5A
1363:  BCF    0A.4
1364:  BCF    03.6
1365:  CALL   1DA
1366:  BSF    0A.4
....................    I2C_LCD_Write_String(line2);
1367:  BSF    03.6
1368:  CLRF   5A
1369:  MOVLW  55
136A:  MOVWF  59
136B:  BCF    0A.4
136C:  BCF    03.6
136D:  CALL   209
136E:  BSF    0A.4
....................    delay_ms(1000);
136F:  MOVLW  04
1370:  MOVWF  6F
1371:  MOVLW  FA
1372:  BSF    03.6
1373:  MOVWF  39
1374:  BCF    0A.4
1375:  BCF    03.6
1376:  CALL   0FA
1377:  BSF    0A.4
1378:  DECFSZ 6F,F
1379:  GOTO   371
....................    ds1307_get_date (thu,ngay,thang,nam);
....................    ds1307_get_time (gio, phut, giay);
....................    I2C_LCD_Clear();
*
141D:  BCF    0A.4
141E:  BCF    03.5
141F:  CALL   172
1420:  BSF    0A.4
....................    output_low(LED1);
1421:  BSF    03.5
1422:  BCF    09.0
1423:  BCF    03.5
1424:  BCF    09.0
....................    output_high(BUZZER);
1425:  BSF    03.5
1426:  BCF    05.4
1427:  BCF    03.5
1428:  BSF    05.4
....................    ds1307_get_time (gio, phut, giay);
....................    timer0_init();
*
1474:  BCF    0A.4
1475:  BCF    03.5
1476:  GOTO   243
1477:  BSF    0A.4
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
1478:  MOVLW  35
1479:  MOVWF  10
....................    set_timer1(3036); 
147A:  CLRF   0E
147B:  MOVLW  0B
147C:  MOVWF  0F
147D:  MOVLW  DC
147E:  MOVWF  0E
147F:  NOP
....................    enable_interrupts(INT_TIMER1);
1480:  BSF    03.5
1481:  BSF    0C.0
....................    enable_interrupts(GLOBAL);
1482:  MOVLW  C0
1483:  BCF    03.5
1484:  IORWF  0B,F
....................    read_dht22();
1485:  BCF    0A.4
1486:  CALL   367
1487:  BSF    0A.4
....................    WHILE (true) 
....................    {  
....................       bao_thuc();
1488:  BCF    0A.4
1489:  GOTO   40E
148A:  BSF    0A.4
....................       if (TEMP == 10)
148B:  MOVF   42,W
148C:  SUBLW  0A
148D:  BTFSS  03.2
148E:  GOTO   4C1
148F:  MOVF   43,F
1490:  BTFSS  03.2
1491:  GOTO   4C1
....................       {
....................          if (!read_dht22()) {
1492:  BCF    0A.4
1493:  CALL   367
1494:  BSF    0A.4
1495:  MOVF   78,F
1496:  BTFSS  03.2
1497:  GOTO   4C1
....................             I2C_LCD_Set_Cursor(0, 0);
1498:  BSF    03.6
1499:  CLRF   59
149A:  CLRF   5A
149B:  BCF    0A.4
149C:  BCF    03.6
149D:  CALL   1DA
149E:  BSF    0A.4
....................             char line2[] = "Error sensor ";
149F:  MOVLW  45
14A0:  MOVWF  61
14A1:  MOVLW  72
14A2:  MOVWF  62
14A3:  MOVWF  63
14A4:  MOVLW  6F
14A5:  MOVWF  64
14A6:  MOVLW  72
14A7:  MOVWF  65
14A8:  MOVLW  20
14A9:  MOVWF  66
14AA:  MOVLW  73
14AB:  MOVWF  67
14AC:  MOVLW  65
14AD:  MOVWF  68
14AE:  MOVLW  6E
14AF:  MOVWF  69
14B0:  MOVLW  73
14B1:  MOVWF  6A
14B2:  MOVLW  6F
14B3:  MOVWF  6B
14B4:  MOVLW  72
14B5:  MOVWF  6C
14B6:  MOVLW  20
14B7:  MOVWF  6D
14B8:  CLRF   6E
....................             I2C_LCD_Write_String(line2);
14B9:  BSF    03.6
14BA:  CLRF   5A
14BB:  MOVLW  61
14BC:  MOVWF  59
14BD:  BCF    0A.4
14BE:  BCF    03.6
14BF:  CALL   209
14C0:  BSF    0A.4
....................          }
....................          
....................       }
....................       printf("%0.1f;%0.1f;%02d:%02d:%04d:%02d:%02d:%02d\r\n", 
....................          humidity, temperature, 
....................          ngay, thang, nam, 
....................          gio, phut, giay);
14C1:  MOVLW  C9
14C2:  MOVWF  04
14C3:  MOVF   35,W
14C4:  MOVWF  72
14C5:  MOVF   34,W
14C6:  MOVWF  71
14C7:  MOVF   33,W
14C8:  MOVWF  70
14C9:  MOVF   32,W
14CA:  MOVWF  6F
14CB:  MOVLW  01
14CC:  MOVWF  73
14CD:  BCF    0A.4
14CE:  CALL   527
14CF:  BSF    0A.4
14D0:  MOVLW  3B
14D1:  BSF    03.5
14D2:  MOVWF  28
14D3:  BCF    0A.4
14D4:  BCF    03.5
14D5:  CALL   503
14D6:  BSF    0A.4
14D7:  MOVLW  C9
14D8:  MOVWF  04
14D9:  MOVF   31,W
14DA:  MOVWF  72
14DB:  MOVF   30,W
14DC:  MOVWF  71
14DD:  MOVF   2F,W
14DE:  MOVWF  70
14DF:  MOVF   2E,W
14E0:  MOVWF  6F
14E1:  MOVLW  01
14E2:  MOVWF  73
14E3:  BCF    0A.4
14E4:  CALL   527
14E5:  BSF    0A.4
14E6:  MOVLW  3B
14E7:  BSF    03.5
14E8:  MOVWF  28
14E9:  BCF    0A.4
14EA:  BCF    03.5
14EB:  CALL   503
14EC:  BSF    0A.4
14ED:  MOVF   3A,W
14EE:  MOVWF  6F
14EF:  MOVLW  01
14F0:  MOVWF  70
14F1:  BCF    0A.4
14F2:  CALL   63E
14F3:  BSF    0A.4
14F4:  MOVLW  3A
14F5:  BSF    03.5
14F6:  MOVWF  28
14F7:  BCF    0A.4
14F8:  BCF    03.5
14F9:  CALL   503
14FA:  BSF    0A.4
14FB:  MOVF   3B,W
14FC:  MOVWF  6F
14FD:  MOVLW  01
14FE:  MOVWF  70
14FF:  BCF    0A.4
1500:  CALL   63E
1501:  BSF    0A.4
1502:  MOVLW  3A
1503:  BSF    03.5
1504:  MOVWF  28
1505:  BCF    0A.4
1506:  BCF    03.5
1507:  CALL   503
1508:  BSF    0A.4
1509:  MOVF   3C,W
150A:  MOVWF  6F
150B:  MOVLW  07
150C:  MOVWF  70
150D:  BCF    0A.4
150E:  CALL   63E
150F:  BSF    0A.4
1510:  MOVLW  3A
1511:  BSF    03.5
1512:  MOVWF  28
1513:  BCF    0A.4
1514:  BCF    03.5
1515:  CALL   503
1516:  BSF    0A.4
1517:  MOVF   36,W
1518:  MOVWF  6F
1519:  MOVLW  01
151A:  MOVWF  70
151B:  BCF    0A.4
151C:  CALL   63E
151D:  BSF    0A.4
151E:  MOVLW  3A
151F:  BSF    03.5
1520:  MOVWF  28
1521:  BCF    0A.4
1522:  BCF    03.5
1523:  CALL   503
1524:  BSF    0A.4
1525:  MOVF   37,W
1526:  MOVWF  6F
1527:  MOVLW  01
1528:  MOVWF  70
1529:  BCF    0A.4
152A:  CALL   63E
152B:  BSF    0A.4
152C:  MOVLW  3A
152D:  BSF    03.5
152E:  MOVWF  28
152F:  BCF    0A.4
1530:  BCF    03.5
1531:  CALL   503
1532:  BSF    0A.4
1533:  MOVF   38,W
1534:  MOVWF  6F
1535:  MOVLW  01
1536:  MOVWF  70
1537:  BCF    0A.4
1538:  CALL   63E
1539:  BSF    0A.4
153A:  MOVLW  0D
153B:  BSF    03.5
153C:  MOVWF  28
153D:  BCF    0A.4
153E:  BCF    03.5
153F:  CALL   503
1540:  BSF    0A.4
1541:  MOVLW  0A
1542:  BSF    03.5
1543:  MOVWF  28
1544:  BCF    0A.4
1545:  BCF    03.5
1546:  CALL   503
1547:  BSF    0A.4
....................       if(chinh == 0){
1548:  MOVF   40,F
1549:  BTFSS  03.2
154A:  GOTO   5EF
....................          ds1307_get_time (gio, phut, giay);
....................          ds1307_get_date (thu,ngay,thang,nam);
....................       }
....................       chedo_mode ();
*
15EF:  BCF    0A.4
15F0:  BSF    0A.3
15F1:  GOTO   1D6
15F2:  BSF    0A.4
15F3:  BCF    0A.3
....................       quet_phim();
15F4:  GOTO   089
15F5:  GOTO   488
....................    }
.................... }
.................... //========================================
15F6:  SLEEP
.................... int8 max_day_in_month(int8 month, int16 year) {
....................    switch (month) {
*
1000:  MOVF   7B,W
1001:  XORLW  01
1002:  BTFSC  03.2
1003:  GOTO   026
1004:  XORLW  02
1005:  BTFSC  03.2
1006:  GOTO   026
1007:  XORLW  06
1008:  BTFSC  03.2
1009:  GOTO   026
100A:  XORLW  02
100B:  BTFSC  03.2
100C:  GOTO   026
100D:  XORLW  0F
100E:  BTFSC  03.2
100F:  GOTO   026
1010:  XORLW  02
1011:  BTFSC  03.2
1012:  GOTO   026
1013:  XORLW  06
1014:  BTFSC  03.2
1015:  GOTO   026
1016:  XORLW  08
1017:  BTFSC  03.2
1018:  GOTO   029
1019:  XORLW  02
101A:  BTFSC  03.2
101B:  GOTO   029
101C:  XORLW  0F
101D:  BTFSC  03.2
101E:  GOTO   029
101F:  XORLW  02
1020:  BTFSC  03.2
1021:  GOTO   029
1022:  XORLW  09
1023:  BTFSC  03.2
1024:  GOTO   02C
1025:  GOTO   072
....................       case 1: case 3: case 5: case 7: case 8: case 10: case 12:
....................          return 31;
1026:  MOVLW  1F
1027:  MOVWF  78
1028:  GOTO   075
....................       case 4: case 6: case 9: case 11:
....................          return 30;
1029:  MOVLW  1E
102A:  MOVWF  78
102B:  GOTO   075
....................       case 2:
....................          if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
102C:  MOVF   7C,W
102D:  ANDLW  03
102E:  BSF    03.5
102F:  MOVWF  20
1030:  CLRF   21
1031:  MOVF   20,F
1032:  BTFSS  03.2
1033:  GOTO   04F
1034:  MOVF   21,F
1035:  BTFSS  03.2
1036:  GOTO   04F
1037:  MOVF   7D,W
1038:  BCF    03.5
1039:  BSF    03.6
103A:  MOVWF  3C
103B:  MOVF   7C,W
103C:  MOVWF  3B
103D:  CLRF   3E
103E:  MOVLW  64
103F:  MOVWF  3D
1040:  BCF    0A.4
1041:  BCF    03.6
1042:  CALL   7CF
1043:  BSF    0A.4
1044:  MOVF   77,W
1045:  BSF    03.5
1046:  MOVWF  20
1047:  MOVF   7A,W
1048:  MOVWF  21
1049:  MOVF   20,F
104A:  BTFSS  03.2
104B:  GOTO   068
104C:  MOVF   21,F
104D:  BTFSS  03.2
104E:  GOTO   068
104F:  MOVF   7D,W
1050:  BCF    03.5
1051:  BSF    03.6
1052:  MOVWF  3C
1053:  MOVF   7C,W
1054:  MOVWF  3B
1055:  MOVLW  01
1056:  MOVWF  3E
1057:  MOVLW  90
1058:  MOVWF  3D
1059:  BCF    0A.4
105A:  BCF    03.6
105B:  CALL   7CF
105C:  BSF    0A.4
105D:  MOVF   77,W
105E:  BSF    03.5
105F:  MOVWF  20
1060:  MOVF   7A,W
1061:  MOVWF  21
1062:  MOVF   20,F
1063:  BTFSS  03.2
1064:  GOTO   06E
1065:  MOVF   21,F
1066:  BTFSS  03.2
1067:  GOTO   06E
....................             return 29;
1068:  MOVLW  1D
1069:  MOVWF  78
106A:  BCF    03.5
106B:  GOTO   075
106C:  GOTO   072
106D:  BSF    03.5
....................          else
....................             return 28;
106E:  MOVLW  1C
106F:  MOVWF  78
1070:  BCF    03.5
1071:  GOTO   075
....................       default:
....................          return 30; 
1072:  MOVLW  1E
1073:  MOVWF  78
1074:  GOTO   075
....................    }
1075:  RETURN
.................... }
.................... //========================================
.................... void quet_phim() 
.................... {
....................    if (chinh != 0) 
*
1089:  MOVF   40,F
108A:  BTFSC  03.2
108B:  GOTO   095
....................    {
....................       ct++; 
108C:  INCF   41,F
....................       if (ct == 20) 
108D:  MOVF   41,W
108E:  SUBLW  14
108F:  BTFSS  03.2
1090:  GOTO   095
....................       {
....................          ct = 10; 
1091:  MOVLW  0A
1092:  MOVWF  41
....................          bct = ! bct; 
1093:  MOVLW  04
1094:  XORWF  2D,F
....................       }
....................    }
....................    if (np) 
1095:  BTFSS  2D.3
1096:  GOTO   28E
....................    {
....................       if (!input (tang)) 
1097:  BSF    2B.0
1098:  MOVF   2B,W
1099:  BSF    03.5
109A:  MOVWF  07
109B:  BCF    03.5
109C:  BTFSC  07.0
109D:  GOTO   13C
....................       {
....................          ct = 0; 
109E:  CLRF   41
....................          bct = 0; 
109F:  BCF    2D.2
....................          np = 0; 
10A0:  BCF    2D.3
....................          SWITCH (chinh) 
10A1:  MOVLW  01
10A2:  SUBWF  40,W
10A3:  ADDLW  FC
10A4:  BTFSC  03.0
10A5:  GOTO   13C
10A6:  ADDLW  04
10A7:  GOTO   2A6
....................          {
....................             CASE 1:
....................             {
....................                if(mode_bt == 4)
10A8:  MOVF   48,W
10A9:  SUBLW  04
10AA:  BTFSS  03.2
10AB:  GOTO   0B2
....................                {
....................                   gio++;
10AC:  INCF   36,F
....................                   if (gio >= 24) gio = 0;
10AD:  MOVF   36,W
10AE:  SUBLW  17
10AF:  BTFSS  03.0
10B0:  CLRF   36
....................                }
10B1:  GOTO   0D0
....................                else if(mode_bt == 5){
10B2:  MOVF   48,W
10B3:  SUBLW  05
10B4:  BTFSS  03.2
10B5:  GOTO   0CE
....................                   ngay++;
10B6:  INCF   3A,F
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
10B7:  MOVLW  D0
10B8:  ADDWF  3C,W
10B9:  MOVWF  75
10BA:  MOVLW  07
10BB:  MOVWF  76
10BC:  BTFSC  03.0
10BD:  INCF   76,F
10BE:  MOVF   3B,W
10BF:  MOVWF  7B
10C0:  MOVF   76,W
10C1:  MOVWF  7D
10C2:  MOVF   75,W
10C3:  MOVWF  7C
10C4:  CALL   000
10C5:  MOVF   78,W
10C6:  MOVWF  6F
....................                   if (ngay > max_day) ngay = 1;
10C7:  MOVF   3A,W
10C8:  SUBWF  6F,W
10C9:  BTFSC  03.0
10CA:  GOTO   0CD
10CB:  MOVLW  01
10CC:  MOVWF  3A
....................                }
10CD:  GOTO   0D0
....................                else{
....................                   if(flag_enable){
10CE:  BTFSC  2D.0
....................                      flag_enable = 0;
10CF:  BCF    2D.0
....................                   }
....................                }
....................                break;
10D0:  GOTO   13C
....................             }
.................... 
....................             CASE 2:
....................             {
....................                if(mode_bt == 4)
10D1:  MOVF   48,W
10D2:  SUBLW  04
10D3:  BTFSS  03.2
10D4:  GOTO   0DB
....................                {
....................                   phut++;
10D5:  INCF   37,F
....................                   if (phut >= 60) phut = 0;
10D6:  MOVF   37,W
10D7:  SUBLW  3B
10D8:  BTFSS  03.0
10D9:  CLRF   37
....................                }
10DA:  GOTO   102
....................                else if(mode_bt == 5){
10DB:  MOVF   48,W
10DC:  SUBLW  05
10DD:  BTFSS  03.2
10DE:  GOTO   0FD
....................                   thang++;
10DF:  INCF   3B,F
....................                   if (thang > 12)thang = 1;
10E0:  MOVF   3B,W
10E1:  SUBLW  0C
10E2:  BTFSC  03.0
10E3:  GOTO   0E6
10E4:  MOVLW  01
10E5:  MOVWF  3B
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
10E6:  MOVLW  D0
10E7:  ADDWF  3C,W
10E8:  MOVWF  75
10E9:  MOVLW  07
10EA:  MOVWF  76
10EB:  BTFSC  03.0
10EC:  INCF   76,F
10ED:  MOVF   3B,W
10EE:  MOVWF  7B
10EF:  MOVF   76,W
10F0:  MOVWF  7D
10F1:  MOVF   75,W
10F2:  MOVWF  7C
10F3:  CALL   000
10F4:  MOVF   78,W
10F5:  MOVWF  70
....................                   if (ngay > max_day) ngay = max_day; 
10F6:  MOVF   3A,W
10F7:  SUBWF  70,W
10F8:  BTFSC  03.0
10F9:  GOTO   0FC
10FA:  MOVF   70,W
10FB:  MOVWF  3A
....................                }
10FC:  GOTO   102
....................                else{
....................                   set_gio++;
10FD:  INCF   3D,F
....................                   if (set_gio >= 24) set_gio = 0;
10FE:  MOVF   3D,W
10FF:  SUBLW  17
1100:  BTFSS  03.0
1101:  CLRF   3D
....................                }
....................                break;
1102:  GOTO   13C
....................             }
.................... 
....................             CASE 3:
....................             {
....................                if(mode_bt == 4)
1103:  MOVF   48,W
1104:  SUBLW  04
1105:  BTFSS  03.2
1106:  GOTO   10D
....................                {
....................                   giay++;
1107:  INCF   38,F
....................                   if (giay >= 60) giay = 0;
1108:  MOVF   38,W
1109:  SUBLW  3B
110A:  BTFSS  03.0
110B:  CLRF   38
....................                }
110C:  GOTO   132
....................                else if(mode_bt == 5){
110D:  MOVF   48,W
110E:  SUBLW  05
110F:  BTFSS  03.2
1110:  GOTO   12D
....................                   nam++;
1111:  INCF   3C,F
....................                   if (nam > 99) nam = 0;
1112:  MOVF   3C,W
1113:  SUBLW  63
1114:  BTFSS  03.0
1115:  CLRF   3C
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
1116:  MOVLW  D0
1117:  ADDWF  3C,W
1118:  MOVWF  75
1119:  MOVLW  07
111A:  MOVWF  76
111B:  BTFSC  03.0
111C:  INCF   76,F
111D:  MOVF   3B,W
111E:  MOVWF  7B
111F:  MOVF   76,W
1120:  MOVWF  7D
1121:  MOVF   75,W
1122:  MOVWF  7C
1123:  CALL   000
1124:  MOVF   78,W
1125:  MOVWF  71
....................                   if (ngay > max_day) ngay = max_day; 
1126:  MOVF   3A,W
1127:  SUBWF  71,W
1128:  BTFSC  03.0
1129:  GOTO   12C
112A:  MOVF   71,W
112B:  MOVWF  3A
....................                }
112C:  GOTO   132
....................                else{
....................                   set_phut++;
112D:  INCF   3E,F
....................                   if (set_phut >= 60) set_phut = 0;
112E:  MOVF   3E,W
112F:  SUBLW  3B
1130:  BTFSS  03.0
1131:  CLRF   3E
....................                   
....................                }
....................                break;
1132:  GOTO   13C
....................             }
....................             CASE 4:
....................             {
....................                if(mode_bt == 6)
1133:  MOVF   48,W
1134:  SUBLW  06
1135:  BTFSS  03.2
1136:  GOTO   13C
....................                {
....................                   set_giay++;
1137:  INCF   3F,F
....................                   if (set_giay >= 60) set_giay = 0;
1138:  MOVF   3F,W
1139:  SUBLW  3B
113A:  BTFSS  03.0
113B:  CLRF   3F
....................                }
....................             }
....................          }
....................       }
.................... 
....................       if (!input (giam))
113C:  BSF    2B.1
113D:  MOVF   2B,W
113E:  BSF    03.5
113F:  MOVWF  07
1140:  BCF    03.5
1141:  BTFSC  07.1
1142:  GOTO   1DD
....................       {
....................          ct = 0; 
1143:  CLRF   41
....................          bct = 0; 
1144:  BCF    2D.2
....................          np = 0; 
1145:  BCF    2D.3
....................          SWITCH (chinh) 
1146:  MOVLW  01
1147:  SUBWF  40,W
1148:  ADDLW  FC
1149:  BTFSC  03.0
114A:  GOTO   1DD
114B:  ADDLW  04
114C:  GOTO   2AE
....................          {
....................             CASE 1: 
....................             {
....................                if(mode_bt == 4)
114D:  MOVF   48,W
114E:  SUBLW  04
114F:  BTFSS  03.2
1150:  GOTO   157
....................                {
....................                   gio--; 
1151:  DECF   36,F
....................                   if (gio == 255) gio = 23;
1152:  INCFSZ 36,W
1153:  GOTO   156
1154:  MOVLW  17
1155:  MOVWF  36
....................                }
1156:  GOTO   174
....................                else if(mode_bt == 5){
1157:  MOVF   48,W
1158:  SUBLW  05
1159:  BTFSS  03.2
115A:  GOTO   172
....................                   ngay--;
115B:  DECF   3A,F
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
115C:  MOVLW  D0
115D:  ADDWF  3C,W
115E:  MOVWF  75
115F:  MOVLW  07
1160:  MOVWF  76
1161:  BTFSC  03.0
1162:  INCF   76,F
1163:  MOVF   3B,W
1164:  MOVWF  7B
1165:  MOVF   76,W
1166:  MOVWF  7D
1167:  MOVF   75,W
1168:  MOVWF  7C
1169:  CALL   000
116A:  MOVF   78,W
116B:  MOVWF  72
....................                   if (ngay == 0) ngay = max_day;
116C:  MOVF   3A,F
116D:  BTFSS  03.2
116E:  GOTO   171
116F:  MOVF   72,W
1170:  MOVWF  3A
....................                }
1171:  GOTO   174
....................                else{
....................                   if(flag_enable){
1172:  BTFSC  2D.0
....................                      flag_enable = 0;
1173:  BCF    2D.0
....................                   }
....................                }
....................                break;
1174:  GOTO   1DD
....................             }
.................... 
....................             CASE 2:
....................             {  
....................                if(mode_bt == 4)
1175:  MOVF   48,W
1176:  SUBLW  04
1177:  BTFSS  03.2
1178:  GOTO   17F
....................                {
....................                   phut--;
1179:  DECF   37,F
....................                   if (phut == 255) phut = 59;
117A:  INCFSZ 37,W
117B:  GOTO   17E
117C:  MOVLW  3B
117D:  MOVWF  37
....................                }
117E:  GOTO   1A3
....................                else if(mode_bt == 5){
117F:  MOVF   48,W
1180:  SUBLW  05
1181:  BTFSS  03.2
1182:  GOTO   19E
....................                   thang--;
1183:  DECFSZ 3B,F
....................                   if (thang == 0) thang = 12;
1184:  GOTO   187
1185:  MOVLW  0C
1186:  MOVWF  3B
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
1187:  MOVLW  D0
1188:  ADDWF  3C,W
1189:  MOVWF  75
118A:  MOVLW  07
118B:  MOVWF  76
118C:  BTFSC  03.0
118D:  INCF   76,F
118E:  MOVF   3B,W
118F:  MOVWF  7B
1190:  MOVF   76,W
1191:  MOVWF  7D
1192:  MOVF   75,W
1193:  MOVWF  7C
1194:  CALL   000
1195:  MOVF   78,W
1196:  MOVWF  73
....................                   if (ngay > max_day) ngay = max_day;
1197:  MOVF   3A,W
1198:  SUBWF  73,W
1199:  BTFSC  03.0
119A:  GOTO   19D
119B:  MOVF   73,W
119C:  MOVWF  3A
....................                }
119D:  GOTO   1A3
....................                else{
....................                   set_gio--; 
119E:  DECF   3D,F
....................                   if (set_gio == 255) set_gio = 23;
119F:  INCFSZ 3D,W
11A0:  GOTO   1A3
11A1:  MOVLW  17
11A2:  MOVWF  3D
....................                   
....................                }
....................                break;
11A3:  GOTO   1DD
....................             }
.................... 
....................             CASE 3:
....................             {
....................                if(mode_bt == 4)
11A4:  MOVF   48,W
11A5:  SUBLW  04
11A6:  BTFSS  03.2
11A7:  GOTO   1AE
....................                {
....................                   giay--;
11A8:  DECF   38,F
....................                   if (giay == 255) giay = 59;
11A9:  INCFSZ 38,W
11AA:  GOTO   1AD
11AB:  MOVLW  3B
11AC:  MOVWF  38
....................                }
11AD:  GOTO   1D3
....................                else if(mode_bt == 5){
11AE:  MOVF   48,W
11AF:  SUBLW  05
11B0:  BTFSS  03.2
11B1:  GOTO   1CE
....................                   nam--;
11B2:  DECF   3C,F
....................                   if (nam == 255) nam = 99;
11B3:  INCFSZ 3C,W
11B4:  GOTO   1B7
11B5:  MOVLW  63
11B6:  MOVWF  3C
....................                   int8 max_day = max_day_in_month(thang, nam + 2000);
11B7:  MOVLW  D0
11B8:  ADDWF  3C,W
11B9:  MOVWF  75
11BA:  MOVLW  07
11BB:  MOVWF  76
11BC:  BTFSC  03.0
11BD:  INCF   76,F
11BE:  MOVF   3B,W
11BF:  MOVWF  7B
11C0:  MOVF   76,W
11C1:  MOVWF  7D
11C2:  MOVF   75,W
11C3:  MOVWF  7C
11C4:  CALL   000
11C5:  MOVF   78,W
11C6:  MOVWF  74
....................                   if (ngay > max_day) ngay = max_day;
11C7:  MOVF   3A,W
11C8:  SUBWF  74,W
11C9:  BTFSC  03.0
11CA:  GOTO   1CD
11CB:  MOVF   74,W
11CC:  MOVWF  3A
....................                }
11CD:  GOTO   1D3
....................                else{
....................                   set_phut--;
11CE:  DECF   3E,F
....................                   if (set_phut == 255) set_phut = 59;
11CF:  INCFSZ 3E,W
11D0:  GOTO   1D3
11D1:  MOVLW  3B
11D2:  MOVWF  3E
....................                   
....................                }
....................                break;
11D3:  GOTO   1DD
....................             }
....................             CASE 4:
....................             {  
....................                if(mode_bt == 6){
11D4:  MOVF   48,W
11D5:  SUBLW  06
11D6:  BTFSS  03.2
11D7:  GOTO   1DD
....................                   set_giay--;
11D8:  DECF   3F,F
....................                   if (set_giay == 255) set_giay = 59;
11D9:  INCFSZ 3F,W
11DA:  GOTO   1DD
11DB:  MOVLW  3B
11DC:  MOVWF  3F
....................                }
....................             }
....................          }
....................       }
.................... 
....................       //----------------------------------------
....................       if (!input (select))
11DD:  BSF    2B.2
11DE:  MOVF   2B,W
11DF:  BSF    03.5
11E0:  MOVWF  07
11E1:  BCF    03.5
11E2:  BTFSC  07.2
11E3:  GOTO   28D
....................       {
....................          ct = 0;
11E4:  CLRF   41
....................          bct = 0;
11E5:  BCF    2D.2
....................          chinh++; 
11E6:  INCF   40,F
....................          np = 0; 
11E7:  BCF    2D.3
....................          if (chinh == 4) 
11E8:  MOVF   40,W
11E9:  SUBLW  04
11EA:  BTFSS  03.2
11EB:  GOTO   285
....................          {
....................             if(mode_bt == 4)
11EC:  MOVF   48,W
11ED:  SUBLW  04
11EE:  BTFSS  03.2
11EF:  GOTO   23A
....................             {
....................                chinh = 0;
11F0:  CLRF   40
....................                ds1307_dat_gpg (gio, phut, giay); 
11F1:  MOVF   36,W
11F2:  MOVWF  75
11F3:  MOVF   37,W
11F4:  MOVWF  76
11F5:  MOVF   38,W
11F6:  MOVWF  7B
....................             }
*
1238:  GOTO   284
1239:  BCF    03.5
....................             else if (mode_bt == 5)
123A:  MOVF   48,W
123B:  SUBLW  05
123C:  BTFSS  03.2
123D:  GOTO   285
....................             {
....................                chinh = 0;
123E:  CLRF   40
....................                ds1307_dat_NTN(ngay,thang,nam);
123F:  MOVF   3A,W
1240:  MOVWF  75
1241:  MOVF   3B,W
1242:  MOVWF  76
1243:  MOVF   3C,W
1244:  MOVWF  7B
....................             } 
....................          }
....................          if (chinh == 5) 
*
1285:  MOVF   40,W
1286:  SUBLW  05
1287:  BTFSS  03.2
1288:  GOTO   28D
....................          {
....................             if(mode_bt == 6)
1289:  MOVF   48,W
128A:  SUBLW  06
128B:  BTFSC  03.2
....................             {
....................                chinh = 0;
128C:  CLRF   40
....................             }
....................          }
....................       }
....................    }
128D:  GOTO   2A3
.................... 
....................    ELSE 
....................    {
....................       if (input (select)&&input (tang)&&input (giam)) 
128E:  BSF    2B.2
128F:  MOVF   2B,W
1290:  BSF    03.5
1291:  MOVWF  07
1292:  BCF    03.5
1293:  BTFSS  07.2
1294:  GOTO   2A3
1295:  BSF    2B.0
1296:  MOVF   2B,W
1297:  BSF    03.5
1298:  MOVWF  07
1299:  BCF    03.5
129A:  BTFSS  07.0
129B:  GOTO   2A3
129C:  BSF    2B.1
129D:  MOVF   2B,W
129E:  BSF    03.5
129F:  MOVWF  07
12A0:  BCF    03.5
12A1:  BTFSC  07.1
....................       np = 1; 
12A2:  BSF    2D.3
....................    }
12A3:  BCF    0A.3
12A4:  BSF    0A.4
12A5:  GOTO   5F5 (RETURN)
.................... }
.................... //========================================
.................... void chedo_mode() 
.................... {
....................    if (!input (md_system))
*
09D6:  BSF    03.5
09D7:  BSF    08.1
09D8:  BCF    03.5
09D9:  BTFSC  08.1
09DA:  GOTO   1F1
....................    {
....................       delay_ms (20);
09DB:  MOVLW  14
09DC:  BSF    03.6
09DD:  MOVWF  39
09DE:  BCF    0A.3
09DF:  BCF    03.6
09E0:  CALL   0FA
09E1:  BSF    0A.3
....................       if ( ! input (md_system) )
09E2:  BSF    03.5
09E3:  BSF    08.1
09E4:  BCF    03.5
09E5:  BTFSC  08.1
09E6:  GOTO   1F1
....................       {
....................          I2C_LCD_Clear();
09E7:  BCF    0A.3
09E8:  CALL   172
09E9:  BSF    0A.3
....................          mode_bt++;
09EA:  INCF   48,F
....................          chinh = 0;
09EB:  CLRF   40
....................          WHILE ( ! input (md_system)) ;
09EC:  BSF    03.5
09ED:  BSF    08.1
09EE:  BCF    03.5
09EF:  BTFSS  08.1
09F0:  GOTO   1EC
....................       }
....................    }
....................    if (mode_bt == 0)
09F1:  MOVF   48,F
09F2:  BTFSS  03.2
09F3:  GOTO   24C
....................    {
....................       char line1[] = "Le Duy Bao";
09F4:  MOVLW  4C
09F5:  BSF    03.5
09F6:  MOVWF  20
09F7:  MOVLW  65
09F8:  MOVWF  21
09F9:  MOVLW  20
09FA:  MOVWF  22
09FB:  MOVLW  44
09FC:  MOVWF  23
09FD:  MOVLW  75
09FE:  MOVWF  24
09FF:  MOVLW  79
0A00:  MOVWF  25
0A01:  MOVLW  20
0A02:  MOVWF  26
0A03:  MOVLW  42
0A04:  MOVWF  27
0A05:  MOVLW  61
0A06:  MOVWF  28
0A07:  MOVLW  6F
0A08:  MOVWF  29
0A09:  CLRF   2A
....................       char line2[] = "Nguyen Duy Cuong";
0A0A:  MOVLW  4E
0A0B:  MOVWF  2B
0A0C:  MOVLW  67
0A0D:  MOVWF  2C
0A0E:  MOVLW  75
0A0F:  MOVWF  2D
0A10:  MOVLW  79
0A11:  MOVWF  2E
0A12:  MOVLW  65
0A13:  MOVWF  2F
0A14:  MOVLW  6E
0A15:  MOVWF  30
0A16:  MOVLW  20
0A17:  MOVWF  31
0A18:  MOVLW  44
0A19:  MOVWF  32
0A1A:  MOVLW  75
0A1B:  MOVWF  33
0A1C:  MOVLW  79
0A1D:  MOVWF  34
0A1E:  MOVLW  20
0A1F:  MOVWF  35
0A20:  MOVLW  43
0A21:  MOVWF  36
0A22:  MOVLW  75
0A23:  MOVWF  37
0A24:  MOVLW  6F
0A25:  MOVWF  38
0A26:  MOVLW  6E
0A27:  MOVWF  39
0A28:  MOVLW  67
0A29:  MOVWF  3A
0A2A:  CLRF   3B
....................       I2C_LCD_Set_Cursor(0,0);
0A2B:  BCF    03.5
0A2C:  BSF    03.6
0A2D:  CLRF   59
0A2E:  CLRF   5A
0A2F:  BCF    0A.3
0A30:  BCF    03.6
0A31:  CALL   1DA
0A32:  BSF    0A.3
....................       I2C_LCD_Write_String(line1);
0A33:  BSF    03.6
0A34:  CLRF   5A
0A35:  MOVLW  A0
0A36:  MOVWF  59
0A37:  BCF    0A.3
0A38:  BCF    03.6
0A39:  CALL   209
0A3A:  BSF    0A.3
....................       I2C_LCD_Set_Cursor(1,0);
0A3B:  MOVLW  01
0A3C:  BSF    03.6
0A3D:  MOVWF  59
0A3E:  CLRF   5A
0A3F:  BCF    0A.3
0A40:  BCF    03.6
0A41:  CALL   1DA
0A42:  BSF    0A.3
....................       I2C_LCD_Write_String(line2);
0A43:  BSF    03.6
0A44:  CLRF   5A
0A45:  MOVLW  AB
0A46:  MOVWF  59
0A47:  BCF    0A.3
0A48:  BCF    03.6
0A49:  CALL   209
0A4A:  BSF    0A.3
....................    }
0A4B:  GOTO   7FD
....................       else if (mode_bt == 1)
0A4C:  DECFSZ 48,W
0A4D:  GOTO   2BF
....................    {
....................       display_time_lcd(gio, phut, giay);
0A4E:  MOVF   36,W
0A4F:  BSF    03.6
0A50:  MOVWF  39
0A51:  BCF    03.6
0A52:  MOVF   37,W
0A53:  BSF    03.6
0A54:  MOVWF  3A
0A55:  BCF    03.6
0A56:  MOVF   38,W
0A57:  BSF    03.6
0A58:  MOVWF  3B
....................    }
*
0ABE:  GOTO   7FD
.................... 
....................    else if (mode_bt == 2)
0ABF:  MOVF   48,W
0AC0:  SUBLW  02
0AC1:  BTFSS  03.2
0AC2:  GOTO   3A1
....................    {
....................       display_date_lcd(ngay, thang, nam);
0AC3:  MOVF   3A,W
0AC4:  BSF    03.6
0AC5:  MOVWF  39
0AC6:  BCF    03.6
0AC7:  MOVF   3B,W
0AC8:  BSF    03.6
0AC9:  MOVWF  3A
0ACA:  CLRF   3C
0ACB:  BCF    03.6
0ACC:  MOVF   3C,W
0ACD:  BSF    03.6
0ACE:  MOVWF  3B
....................    }
*
0BA0:  GOTO   7FD
.................... 
....................    else if (mode_bt == 3)
0BA1:  MOVF   48,W
0BA2:  SUBLW  03
0BA3:  BTFSS  03.2
0BA4:  GOTO   41E
....................    {
....................       char line1[] = "Nhiet Do: ";
0BA5:  MOVLW  4E
0BA6:  BSF    03.5
0BA7:  MOVWF  3C
0BA8:  MOVLW  68
0BA9:  MOVWF  3D
0BAA:  MOVLW  69
0BAB:  MOVWF  3E
0BAC:  MOVLW  65
0BAD:  MOVWF  3F
0BAE:  MOVLW  74
0BAF:  MOVWF  40
0BB0:  MOVLW  20
0BB1:  MOVWF  41
0BB2:  MOVLW  44
0BB3:  MOVWF  42
0BB4:  MOVLW  6F
0BB5:  MOVWF  43
0BB6:  MOVLW  3A
0BB7:  MOVWF  44
0BB8:  MOVLW  20
0BB9:  MOVWF  45
0BBA:  CLRF   46
....................       display_float(line1,temperature, 0);
0BBB:  BCF    03.5
0BBC:  BSF    03.6
0BBD:  CLRF   3A
0BBE:  MOVLW  BC
0BBF:  MOVWF  39
0BC0:  BCF    03.6
0BC1:  MOVF   31,W
0BC2:  BSF    03.6
0BC3:  MOVWF  3E
0BC4:  BCF    03.6
0BC5:  MOVF   30,W
0BC6:  BSF    03.6
0BC7:  MOVWF  3D
0BC8:  BCF    03.6
0BC9:  MOVF   2F,W
0BCA:  BSF    03.6
0BCB:  MOVWF  3C
0BCC:  BCF    03.6
0BCD:  MOVF   2E,W
0BCE:  BSF    03.6
0BCF:  MOVWF  3B
0BD0:  CLRF   3F
0BD1:  BCF    03.6
0BD2:  CALL   000
....................       I2C_LCD_Set_Cursor(0,14);
0BD3:  BSF    03.6
0BD4:  CLRF   59
0BD5:  MOVLW  0E
0BD6:  MOVWF  5A
0BD7:  BCF    0A.3
0BD8:  BCF    03.6
0BD9:  CALL   1DA
0BDA:  BSF    0A.3
....................       I2C_LCD_Write_Data("oC");
0BDB:  MOVLW  85
0BDC:  BSF    03.6
0BDD:  MOVWF  0D
0BDE:  MOVLW  00
0BDF:  MOVWF  0F
0BE0:  BCF    0A.3
0BE1:  BCF    03.6
0BE2:  CALL   77F
0BE3:  BSF    0A.3
....................       char line2[] = "Do am: ";
0BE4:  MOVLW  44
0BE5:  MOVWF  6F
0BE6:  MOVLW  6F
0BE7:  MOVWF  70
0BE8:  MOVLW  20
0BE9:  MOVWF  71
0BEA:  MOVLW  61
0BEB:  MOVWF  72
0BEC:  MOVLW  6D
0BED:  MOVWF  73
0BEE:  MOVLW  3A
0BEF:  MOVWF  74
0BF0:  MOVLW  20
0BF1:  MOVWF  75
0BF2:  CLRF   76
....................       display_float(line2,humidity, 1);
0BF3:  BSF    03.6
0BF4:  CLRF   3A
0BF5:  MOVLW  6F
0BF6:  MOVWF  39
0BF7:  BCF    03.6
0BF8:  MOVF   35,W
0BF9:  BSF    03.6
0BFA:  MOVWF  3E
0BFB:  BCF    03.6
0BFC:  MOVF   34,W
0BFD:  BSF    03.6
0BFE:  MOVWF  3D
0BFF:  BCF    03.6
0C00:  MOVF   33,W
0C01:  BSF    03.6
0C02:  MOVWF  3C
0C03:  BCF    03.6
0C04:  MOVF   32,W
0C05:  BSF    03.6
0C06:  MOVWF  3B
0C07:  MOVLW  01
0C08:  MOVWF  3F
0C09:  BCF    03.6
0C0A:  CALL   000
....................       I2C_LCD_Set_Cursor(1,14);
0C0B:  MOVLW  01
0C0C:  BSF    03.6
0C0D:  MOVWF  59
0C0E:  MOVLW  0E
0C0F:  MOVWF  5A
0C10:  BCF    0A.3
0C11:  BCF    03.6
0C12:  CALL   1DA
0C13:  BSF    0A.3
....................       I2C_LCD_Write_Data("%");
0C14:  MOVLW  87
0C15:  BSF    03.6
0C16:  MOVWF  0D
0C17:  MOVLW  00
0C18:  MOVWF  0F
0C19:  BCF    0A.3
0C1A:  BCF    03.6
0C1B:  CALL   77F
0C1C:  BSF    0A.3
....................    }
0C1D:  GOTO   7FD
.................... 
....................    else if (mode_bt == 4)
0C1E:  MOVF   48,W
0C1F:  SUBLW  04
0C20:  BTFSS  03.2
0C21:  GOTO   510
....................    {
....................       I2C_LCD_Set_Cursor(0, 0);
0C22:  BSF    03.6
0C23:  CLRF   59
0C24:  CLRF   5A
0C25:  BCF    0A.3
0C26:  BCF    03.6
0C27:  CALL   1DA
0C28:  BSF    0A.3
....................       char line1[] = "Set time:";
0C29:  MOVLW  53
0C2A:  BSF    03.5
0C2B:  MOVWF  47
0C2C:  MOVLW  65
0C2D:  MOVWF  48
0C2E:  MOVLW  74
0C2F:  MOVWF  49
0C30:  MOVLW  20
0C31:  MOVWF  4A
0C32:  MOVLW  74
0C33:  MOVWF  4B
0C34:  MOVLW  69
0C35:  MOVWF  4C
0C36:  MOVLW  6D
0C37:  MOVWF  4D
0C38:  MOVLW  65
0C39:  MOVWF  4E
0C3A:  MOVLW  3A
0C3B:  MOVWF  4F
0C3C:  CLRF   50
....................       I2C_LCD_Write_String(line1);
0C3D:  BCF    03.5
0C3E:  BSF    03.6
0C3F:  CLRF   5A
0C40:  MOVLW  C7
0C41:  MOVWF  59
0C42:  BCF    0A.3
0C43:  BCF    03.6
0C44:  CALL   209
0C45:  BSF    0A.3
.................... 
....................       I2C_LCD_Set_Cursor(1, 0);
0C46:  MOVLW  01
0C47:  BSF    03.6
0C48:  MOVWF  59
0C49:  CLRF   5A
0C4A:  BCF    0A.3
0C4B:  BCF    03.6
0C4C:  CALL   1DA
0C4D:  BSF    0A.3
....................       if (chinh == 1 && bct == 0){
0C4E:  DECFSZ 40,W
0C4F:  GOTO   45F
0C50:  BTFSC  2D.2
0C51:  GOTO   45F
....................          char line1[] = "  ";
0C52:  MOVLW  20
0C53:  MOVWF  7B
0C54:  MOVWF  7C
0C55:  CLRF   7D
....................          I2C_LCD_Write_String(line1);
0C56:  BSF    03.6
0C57:  CLRF   5A
0C58:  MOVLW  7B
0C59:  MOVWF  59
0C5A:  BCF    0A.3
0C5B:  BCF    03.6
0C5C:  CALL   209
0C5D:  BSF    0A.3
....................       } 
0C5E:  GOTO   487
....................       else {
....................          I2C_LCD_Write_Data((gio / 10) + '0');
0C5F:  MOVF   36,W
0C60:  BSF    03.6
0C61:  MOVWF  5D
0C62:  MOVLW  0A
0C63:  MOVWF  5E
0C64:  BCF    0A.3
0C65:  BCF    03.6
0C66:  CALL   627
0C67:  BSF    0A.3
0C68:  MOVLW  30
0C69:  ADDWF  78,W
0C6A:  BSF    03.5
0C6B:  MOVWF  6E
0C6C:  BCF    03.5
0C6D:  BSF    03.6
0C6E:  MOVWF  3C
0C6F:  BCF    0A.3
0C70:  BCF    03.6
0C71:  CALL   773
0C72:  BSF    0A.3
....................          I2C_LCD_Write_Data((gio % 10) + '0');
0C73:  MOVF   36,W
0C74:  BSF    03.6
0C75:  MOVWF  5D
0C76:  MOVLW  0A
0C77:  MOVWF  5E
0C78:  BCF    0A.3
0C79:  BCF    03.6
0C7A:  CALL   627
0C7B:  BSF    0A.3
0C7C:  MOVLW  30
0C7D:  ADDWF  77,W
0C7E:  BSF    03.5
0C7F:  MOVWF  6E
0C80:  BCF    03.5
0C81:  BSF    03.6
0C82:  MOVWF  3C
0C83:  BCF    0A.3
0C84:  BCF    03.6
0C85:  CALL   773
0C86:  BSF    0A.3
....................       }
....................    
....................       I2C_LCD_Write_Data(':');
0C87:  MOVLW  3A
0C88:  BSF    03.6
0C89:  MOVWF  3C
0C8A:  BCF    0A.3
0C8B:  BCF    03.6
0C8C:  CALL   773
0C8D:  BSF    0A.3
....................    
....................       if (chinh == 2 && bct == 0){
0C8E:  MOVF   40,W
0C8F:  SUBLW  02
0C90:  BTFSS  03.2
0C91:  GOTO   4A3
0C92:  BTFSC  2D.2
0C93:  GOTO   4A3
....................          char line1[] = "  ";
0C94:  MOVLW  20
0C95:  BSF    03.5
0C96:  MOVWF  51
0C97:  MOVWF  52
0C98:  CLRF   53
....................          I2C_LCD_Write_String(line1);
0C99:  BCF    03.5
0C9A:  BSF    03.6
0C9B:  CLRF   5A
0C9C:  MOVLW  D1
0C9D:  MOVWF  59
0C9E:  BCF    0A.3
0C9F:  BCF    03.6
0CA0:  CALL   209
0CA1:  BSF    0A.3
....................       } 
0CA2:  GOTO   4CB
....................       else {
....................          I2C_LCD_Write_Data((phut / 10) + '0');
0CA3:  MOVF   37,W
0CA4:  BSF    03.6
0CA5:  MOVWF  5D
0CA6:  MOVLW  0A
0CA7:  MOVWF  5E
0CA8:  BCF    0A.3
0CA9:  BCF    03.6
0CAA:  CALL   627
0CAB:  BSF    0A.3
0CAC:  MOVLW  30
0CAD:  ADDWF  78,W
0CAE:  BSF    03.5
0CAF:  MOVWF  6E
0CB0:  BCF    03.5
0CB1:  BSF    03.6
0CB2:  MOVWF  3C
0CB3:  BCF    0A.3
0CB4:  BCF    03.6
0CB5:  CALL   773
0CB6:  BSF    0A.3
....................          I2C_LCD_Write_Data((phut % 10) + '0');
0CB7:  MOVF   37,W
0CB8:  BSF    03.6
0CB9:  MOVWF  5D
0CBA:  MOVLW  0A
0CBB:  MOVWF  5E
0CBC:  BCF    0A.3
0CBD:  BCF    03.6
0CBE:  CALL   627
0CBF:  BSF    0A.3
0CC0:  MOVLW  30
0CC1:  ADDWF  77,W
0CC2:  BSF    03.5
0CC3:  MOVWF  6E
0CC4:  BCF    03.5
0CC5:  BSF    03.6
0CC6:  MOVWF  3C
0CC7:  BCF    0A.3
0CC8:  BCF    03.6
0CC9:  CALL   773
0CCA:  BSF    0A.3
....................       }
....................    
....................       I2C_LCD_Write_Data(':');
0CCB:  MOVLW  3A
0CCC:  BSF    03.6
0CCD:  MOVWF  3C
0CCE:  BCF    0A.3
0CCF:  BCF    03.6
0CD0:  CALL   773
0CD1:  BSF    0A.3
.................... 
....................       if (chinh == 3 && bct == 0){
0CD2:  MOVF   40,W
0CD3:  SUBLW  03
0CD4:  BTFSS  03.2
0CD5:  GOTO   4E7
0CD6:  BTFSC  2D.2
0CD7:  GOTO   4E7
....................          char line1[] = "  ";
0CD8:  MOVLW  20
0CD9:  BSF    03.5
0CDA:  MOVWF  54
0CDB:  MOVWF  55
0CDC:  CLRF   56
....................          I2C_LCD_Write_String(line1);
0CDD:  BCF    03.5
0CDE:  BSF    03.6
0CDF:  CLRF   5A
0CE0:  MOVLW  D4
0CE1:  MOVWF  59
0CE2:  BCF    0A.3
0CE3:  BCF    03.6
0CE4:  CALL   209
0CE5:  BSF    0A.3
....................       } 
0CE6:  GOTO   50F
....................       else {
....................          I2C_LCD_Write_Data((giay / 10) + '0');
0CE7:  MOVF   38,W
0CE8:  BSF    03.6
0CE9:  MOVWF  5D
0CEA:  MOVLW  0A
0CEB:  MOVWF  5E
0CEC:  BCF    0A.3
0CED:  BCF    03.6
0CEE:  CALL   627
0CEF:  BSF    0A.3
0CF0:  MOVLW  30
0CF1:  ADDWF  78,W
0CF2:  BSF    03.5
0CF3:  MOVWF  6E
0CF4:  BCF    03.5
0CF5:  BSF    03.6
0CF6:  MOVWF  3C
0CF7:  BCF    0A.3
0CF8:  BCF    03.6
0CF9:  CALL   773
0CFA:  BSF    0A.3
....................          I2C_LCD_Write_Data((giay % 10) + '0');
0CFB:  MOVF   38,W
0CFC:  BSF    03.6
0CFD:  MOVWF  5D
0CFE:  MOVLW  0A
0CFF:  MOVWF  5E
0D00:  BCF    0A.3
0D01:  BCF    03.6
0D02:  CALL   627
0D03:  BSF    0A.3
0D04:  MOVLW  30
0D05:  ADDWF  77,W
0D06:  BSF    03.5
0D07:  MOVWF  6E
0D08:  BCF    03.5
0D09:  BSF    03.6
0D0A:  MOVWF  3C
0D0B:  BCF    0A.3
0D0C:  BCF    03.6
0D0D:  CALL   773
0D0E:  BSF    0A.3
....................       }
....................    }
0D0F:  GOTO   7FD
....................    else if (mode_bt == 5)
0D10:  MOVF   48,W
0D11:  SUBLW  05
0D12:  BTFSS  03.2
0D13:  GOTO   6B4
....................    {
....................       I2C_LCD_Set_Cursor(0, 0);
0D14:  BSF    03.6
0D15:  CLRF   59
0D16:  CLRF   5A
0D17:  BCF    0A.3
0D18:  BCF    03.6
0D19:  CALL   1DA
0D1A:  BSF    0A.3
....................       char line1[] = "Set date:";
0D1B:  MOVLW  53
0D1C:  BSF    03.5
0D1D:  MOVWF  57
0D1E:  MOVLW  65
0D1F:  MOVWF  58
0D20:  MOVLW  74
0D21:  MOVWF  59
0D22:  MOVLW  20
0D23:  MOVWF  5A
0D24:  MOVLW  64
0D25:  MOVWF  5B
0D26:  MOVLW  61
0D27:  MOVWF  5C
0D28:  MOVLW  74
0D29:  MOVWF  5D
0D2A:  MOVLW  65
0D2B:  MOVWF  5E
0D2C:  MOVLW  3A
0D2D:  MOVWF  5F
0D2E:  CLRF   60
....................       I2C_LCD_Write_String(line1);
0D2F:  BCF    03.5
0D30:  BSF    03.6
0D31:  CLRF   5A
0D32:  MOVLW  D7
0D33:  MOVWF  59
0D34:  BCF    0A.3
0D35:  BCF    03.6
0D36:  CALL   209
0D37:  BSF    0A.3
.................... 
....................       I2C_LCD_Set_Cursor(1, 0);
0D38:  MOVLW  01
0D39:  BSF    03.6
0D3A:  MOVWF  59
0D3B:  CLRF   5A
0D3C:  BCF    0A.3
0D3D:  BCF    03.6
0D3E:  CALL   1DA
0D3F:  BSF    0A.3
.................... 
....................       if (chinh == 1 && bct == 0){
0D40:  DECFSZ 40,W
0D41:  GOTO   553
0D42:  BTFSC  2D.2
0D43:  GOTO   553
....................          char line1[] = "  ";
0D44:  MOVLW  20
0D45:  BSF    03.5
0D46:  MOVWF  61
0D47:  MOVWF  62
0D48:  CLRF   63
....................          I2C_LCD_Write_String(line1);
0D49:  BCF    03.5
0D4A:  BSF    03.6
0D4B:  CLRF   5A
0D4C:  MOVLW  E1
0D4D:  MOVWF  59
0D4E:  BCF    0A.3
0D4F:  BCF    03.6
0D50:  CALL   209
0D51:  BSF    0A.3
....................       } 
0D52:  GOTO   57B
....................       else {
....................          I2C_LCD_Write_Data((ngay / 10) + '0');
0D53:  MOVF   3A,W
0D54:  BSF    03.6
0D55:  MOVWF  5D
0D56:  MOVLW  0A
0D57:  MOVWF  5E
0D58:  BCF    0A.3
0D59:  BCF    03.6
0D5A:  CALL   627
0D5B:  BSF    0A.3
0D5C:  MOVLW  30
0D5D:  ADDWF  78,W
0D5E:  BSF    03.5
0D5F:  MOVWF  6E
0D60:  BCF    03.5
0D61:  BSF    03.6
0D62:  MOVWF  3C
0D63:  BCF    0A.3
0D64:  BCF    03.6
0D65:  CALL   773
0D66:  BSF    0A.3
....................          I2C_LCD_Write_Data((ngay % 10) + '0');
0D67:  MOVF   3A,W
0D68:  BSF    03.6
0D69:  MOVWF  5D
0D6A:  MOVLW  0A
0D6B:  MOVWF  5E
0D6C:  BCF    0A.3
0D6D:  BCF    03.6
0D6E:  CALL   627
0D6F:  BSF    0A.3
0D70:  MOVLW  30
0D71:  ADDWF  77,W
0D72:  BSF    03.5
0D73:  MOVWF  6E
0D74:  BCF    03.5
0D75:  BSF    03.6
0D76:  MOVWF  3C
0D77:  BCF    0A.3
0D78:  BCF    03.6
0D79:  CALL   773
0D7A:  BSF    0A.3
....................       }
....................    
....................       I2C_LCD_Write_Data('/');
0D7B:  MOVLW  2F
0D7C:  BSF    03.6
0D7D:  MOVWF  3C
0D7E:  BCF    0A.3
0D7F:  BCF    03.6
0D80:  CALL   773
0D81:  BSF    0A.3
....................       if (chinh == 2 && bct == 0){
0D82:  MOVF   40,W
0D83:  SUBLW  02
0D84:  BTFSS  03.2
0D85:  GOTO   597
0D86:  BTFSC  2D.2
0D87:  GOTO   597
....................          char line1[] = "  ";
0D88:  MOVLW  20
0D89:  BSF    03.5
0D8A:  MOVWF  64
0D8B:  MOVWF  65
0D8C:  CLRF   66
....................          I2C_LCD_Write_String(line1);
0D8D:  BCF    03.5
0D8E:  BSF    03.6
0D8F:  CLRF   5A
0D90:  MOVLW  E4
0D91:  MOVWF  59
0D92:  BCF    0A.3
0D93:  BCF    03.6
0D94:  CALL   209
0D95:  BSF    0A.3
....................       } 
0D96:  GOTO   5BF
....................       else {
....................          I2C_LCD_Write_Data((thang / 10) + '0');
0D97:  MOVF   3B,W
0D98:  BSF    03.6
0D99:  MOVWF  5D
0D9A:  MOVLW  0A
0D9B:  MOVWF  5E
0D9C:  BCF    0A.3
0D9D:  BCF    03.6
0D9E:  CALL   627
0D9F:  BSF    0A.3
0DA0:  MOVLW  30
0DA1:  ADDWF  78,W
0DA2:  BSF    03.5
0DA3:  MOVWF  6E
0DA4:  BCF    03.5
0DA5:  BSF    03.6
0DA6:  MOVWF  3C
0DA7:  BCF    0A.3
0DA8:  BCF    03.6
0DA9:  CALL   773
0DAA:  BSF    0A.3
....................          I2C_LCD_Write_Data((thang % 10) + '0');
0DAB:  MOVF   3B,W
0DAC:  BSF    03.6
0DAD:  MOVWF  5D
0DAE:  MOVLW  0A
0DAF:  MOVWF  5E
0DB0:  BCF    0A.3
0DB1:  BCF    03.6
0DB2:  CALL   627
0DB3:  BSF    0A.3
0DB4:  MOVLW  30
0DB5:  ADDWF  77,W
0DB6:  BSF    03.5
0DB7:  MOVWF  6E
0DB8:  BCF    03.5
0DB9:  BSF    03.6
0DBA:  MOVWF  3C
0DBB:  BCF    0A.3
0DBC:  BCF    03.6
0DBD:  CALL   773
0DBE:  BSF    0A.3
....................       }
....................       I2C_LCD_Write_Data('/');
0DBF:  MOVLW  2F
0DC0:  BSF    03.6
0DC1:  MOVWF  3C
0DC2:  BCF    0A.3
0DC3:  BCF    03.6
0DC4:  CALL   773
0DC5:  BSF    0A.3
....................       if (chinh == 3 && bct == 0){
0DC6:  MOVF   40,W
0DC7:  SUBLW  03
0DC8:  BTFSS  03.2
0DC9:  GOTO   5DD
0DCA:  BTFSC  2D.2
0DCB:  GOTO   5DD
....................          char line1[] = "    ";
0DCC:  MOVLW  20
0DCD:  BSF    03.5
0DCE:  MOVWF  67
0DCF:  MOVWF  68
0DD0:  MOVWF  69
0DD1:  MOVWF  6A
0DD2:  CLRF   6B
....................          I2C_LCD_Write_String(line1);
0DD3:  BCF    03.5
0DD4:  BSF    03.6
0DD5:  CLRF   5A
0DD6:  MOVLW  E7
0DD7:  MOVWF  59
0DD8:  BCF    0A.3
0DD9:  BCF    03.6
0DDA:  CALL   209
0DDB:  BSF    0A.3
....................       } 
0DDC:  GOTO   6B3
....................       else {
....................          unsigned int16 tempe = nam + 2000;
0DDD:  MOVLW  D0
0DDE:  ADDWF  3C,W
0DDF:  BSF    03.5
0DE0:  MOVWF  6C
0DE1:  MOVLW  07
0DE2:  MOVWF  6D
0DE3:  BTFSC  03.0
0DE4:  INCF   6D,F
....................          I2C_LCD_Write_Data((tempe / 1000) % 10 + '0');
0DE5:  MOVF   6D,W
0DE6:  BCF    03.5
0DE7:  BSF    03.6
0DE8:  MOVWF  3C
0DE9:  BSF    03.5
0DEA:  BCF    03.6
0DEB:  MOVF   6C,W
0DEC:  BCF    03.5
0DED:  BSF    03.6
0DEE:  MOVWF  3B
0DEF:  MOVLW  03
0DF0:  MOVWF  3E
0DF1:  MOVLW  E8
0DF2:  MOVWF  3D
0DF3:  BCF    0A.3
0DF4:  BCF    03.6
0DF5:  CALL   7CF
0DF6:  BSF    0A.3
0DF7:  MOVF   79,W
0DF8:  BSF    03.5
0DF9:  MOVWF  6F
0DFA:  MOVF   78,W
0DFB:  MOVWF  6E
0DFC:  MOVF   6F,W
0DFD:  BCF    03.5
0DFE:  BSF    03.6
0DFF:  MOVWF  3C
0E00:  BSF    03.5
0E01:  BCF    03.6
0E02:  MOVF   6E,W
0E03:  BCF    03.5
0E04:  BSF    03.6
0E05:  MOVWF  3B
0E06:  CLRF   3E
0E07:  MOVLW  0A
0E08:  MOVWF  3D
0E09:  BCF    0A.3
0E0A:  BCF    03.6
0E0B:  CALL   7CF
0E0C:  BSF    0A.3
0E0D:  MOVF   77,W
0E0E:  BSF    03.5
0E0F:  MOVWF  6E
0E10:  MOVF   7A,W
0E11:  MOVWF  6F
0E12:  MOVLW  30
0E13:  ADDWF  6E,F
0E14:  BTFSC  03.0
0E15:  INCF   6F,F
0E16:  MOVF   6E,W
0E17:  BCF    03.5
0E18:  BSF    03.6
0E19:  MOVWF  3C
0E1A:  BCF    0A.3
0E1B:  BCF    03.6
0E1C:  CALL   773
0E1D:  BSF    0A.3
....................          I2C_LCD_Write_Data((tempe / 100) % 10 + '0');
0E1E:  BSF    03.5
0E1F:  MOVF   6D,W
0E20:  BCF    03.5
0E21:  BSF    03.6
0E22:  MOVWF  3C
0E23:  BSF    03.5
0E24:  BCF    03.6
0E25:  MOVF   6C,W
0E26:  BCF    03.5
0E27:  BSF    03.6
0E28:  MOVWF  3B
0E29:  CLRF   3E
0E2A:  MOVLW  64
0E2B:  MOVWF  3D
0E2C:  BCF    0A.3
0E2D:  BCF    03.6
0E2E:  CALL   7CF
0E2F:  BSF    0A.3
0E30:  MOVF   79,W
0E31:  BSF    03.5
0E32:  MOVWF  6F
0E33:  MOVF   78,W
0E34:  MOVWF  6E
0E35:  MOVF   6F,W
0E36:  BCF    03.5
0E37:  BSF    03.6
0E38:  MOVWF  3C
0E39:  BSF    03.5
0E3A:  BCF    03.6
0E3B:  MOVF   6E,W
0E3C:  BCF    03.5
0E3D:  BSF    03.6
0E3E:  MOVWF  3B
0E3F:  CLRF   3E
0E40:  MOVLW  0A
0E41:  MOVWF  3D
0E42:  BCF    0A.3
0E43:  BCF    03.6
0E44:  CALL   7CF
0E45:  BSF    0A.3
0E46:  MOVF   77,W
0E47:  BSF    03.5
0E48:  MOVWF  6E
0E49:  MOVF   7A,W
0E4A:  MOVWF  6F
0E4B:  MOVLW  30
0E4C:  ADDWF  6E,F
0E4D:  BTFSC  03.0
0E4E:  INCF   6F,F
0E4F:  MOVF   6E,W
0E50:  BCF    03.5
0E51:  BSF    03.6
0E52:  MOVWF  3C
0E53:  BCF    0A.3
0E54:  BCF    03.6
0E55:  CALL   773
0E56:  BSF    0A.3
....................          I2C_LCD_Write_Data((tempe / 10) % 10 + '0');
0E57:  BSF    03.5
0E58:  MOVF   6D,W
0E59:  BCF    03.5
0E5A:  BSF    03.6
0E5B:  MOVWF  3C
0E5C:  BSF    03.5
0E5D:  BCF    03.6
0E5E:  MOVF   6C,W
0E5F:  BCF    03.5
0E60:  BSF    03.6
0E61:  MOVWF  3B
0E62:  CLRF   3E
0E63:  MOVLW  0A
0E64:  MOVWF  3D
0E65:  BCF    0A.3
0E66:  BCF    03.6
0E67:  CALL   7CF
0E68:  BSF    0A.3
0E69:  MOVF   79,W
0E6A:  BSF    03.5
0E6B:  MOVWF  6F
0E6C:  MOVF   78,W
0E6D:  MOVWF  6E
0E6E:  MOVF   6F,W
0E6F:  BCF    03.5
0E70:  BSF    03.6
0E71:  MOVWF  3C
0E72:  BSF    03.5
0E73:  BCF    03.6
0E74:  MOVF   6E,W
0E75:  BCF    03.5
0E76:  BSF    03.6
0E77:  MOVWF  3B
0E78:  CLRF   3E
0E79:  MOVLW  0A
0E7A:  MOVWF  3D
0E7B:  BCF    0A.3
0E7C:  BCF    03.6
0E7D:  CALL   7CF
0E7E:  BSF    0A.3
0E7F:  MOVF   77,W
0E80:  BSF    03.5
0E81:  MOVWF  6E
0E82:  MOVF   7A,W
0E83:  MOVWF  6F
0E84:  MOVLW  30
0E85:  ADDWF  6E,F
0E86:  BTFSC  03.0
0E87:  INCF   6F,F
0E88:  MOVF   6E,W
0E89:  BCF    03.5
0E8A:  BSF    03.6
0E8B:  MOVWF  3C
0E8C:  BCF    0A.3
0E8D:  BCF    03.6
0E8E:  CALL   773
0E8F:  BSF    0A.3
....................          I2C_LCD_Write_Data(tempe % 10 + '0');
0E90:  BSF    03.5
0E91:  MOVF   6D,W
0E92:  BCF    03.5
0E93:  BSF    03.6
0E94:  MOVWF  3C
0E95:  BSF    03.5
0E96:  BCF    03.6
0E97:  MOVF   6C,W
0E98:  BCF    03.5
0E99:  BSF    03.6
0E9A:  MOVWF  3B
0E9B:  CLRF   3E
0E9C:  MOVLW  0A
0E9D:  MOVWF  3D
0E9E:  BCF    0A.3
0E9F:  BCF    03.6
0EA0:  CALL   7CF
0EA1:  BSF    0A.3
0EA2:  MOVF   77,W
0EA3:  BSF    03.5
0EA4:  MOVWF  6E
0EA5:  MOVF   7A,W
0EA6:  MOVWF  6F
0EA7:  MOVLW  30
0EA8:  ADDWF  6E,F
0EA9:  BTFSC  03.0
0EAA:  INCF   6F,F
0EAB:  MOVF   6E,W
0EAC:  BCF    03.5
0EAD:  BSF    03.6
0EAE:  MOVWF  3C
0EAF:  BCF    0A.3
0EB0:  BCF    03.6
0EB1:  CALL   773
0EB2:  BSF    0A.3
....................       }
....................    }
0EB3:  GOTO   7FD
....................    else if (mode_bt == 6)
0EB4:  MOVF   48,W
0EB5:  SUBLW  06
0EB6:  BTFSS  03.2
0EB7:  GOTO   7F9
....................    {
....................       I2C_LCD_Set_Cursor(0, 0);
0EB8:  BSF    03.6
0EB9:  CLRF   59
0EBA:  CLRF   5A
0EBB:  BCF    0A.3
0EBC:  BCF    03.6
0EBD:  CALL   1DA
0EBE:  BSF    0A.3
....................       char line1[] = "BAO THUC:";
0EBF:  MOVLW  42
0EC0:  BSF    03.6
0EC1:  MOVWF  10
0EC2:  MOVLW  41
0EC3:  MOVWF  11
0EC4:  MOVLW  4F
0EC5:  MOVWF  12
0EC6:  MOVLW  20
0EC7:  MOVWF  13
0EC8:  MOVLW  54
0EC9:  MOVWF  14
0ECA:  MOVLW  48
0ECB:  MOVWF  15
0ECC:  MOVLW  55
0ECD:  MOVWF  16
0ECE:  MOVLW  43
0ECF:  MOVWF  17
0ED0:  MOVLW  3A
0ED1:  MOVWF  18
0ED2:  CLRF   19
....................       I2C_LCD_Write_String(line1);
0ED3:  MOVLW  01
0ED4:  MOVWF  5A
0ED5:  MOVLW  10
0ED6:  MOVWF  59
0ED7:  BCF    0A.3
0ED8:  BCF    03.6
0ED9:  CALL   209
0EDA:  BSF    0A.3
....................       if (chinh == 1 && bct == 0){
0EDB:  DECFSZ 40,W
0EDC:  GOTO   6F6
0EDD:  BTFSC  2D.2
0EDE:  GOTO   6F6
....................          char line1[] = "   ";
0EDF:  MOVLW  20
0EE0:  BSF    03.6
0EE1:  MOVWF  1A
0EE2:  MOVWF  1B
0EE3:  MOVWF  1C
0EE4:  CLRF   1D
....................          I2C_LCD_Set_Cursor(0, 10);
0EE5:  CLRF   59
0EE6:  MOVLW  0A
0EE7:  MOVWF  5A
0EE8:  BCF    0A.3
0EE9:  BCF    03.6
0EEA:  CALL   1DA
0EEB:  BSF    0A.3
....................          I2C_LCD_Write_String(line1);
0EEC:  MOVLW  01
0EED:  BSF    03.6
0EEE:  MOVWF  5A
0EEF:  MOVLW  1A
0EF0:  MOVWF  59
0EF1:  BCF    0A.3
0EF2:  BCF    03.6
0EF3:  CALL   209
0EF4:  BSF    0A.3
....................       } 
0EF5:  GOTO   72E
....................       else {
....................          I2C_LCD_Set_Cursor(0, 10);
0EF6:  BSF    03.6
0EF7:  CLRF   59
0EF8:  MOVLW  0A
0EF9:  MOVWF  5A
0EFA:  BCF    0A.3
0EFB:  BCF    03.6
0EFC:  CALL   1DA
0EFD:  BSF    0A.3
....................          if(flag_enable){
0EFE:  BTFSS  2D.0
0EFF:  GOTO   717
....................             char line1[] = "ON";
0F00:  MOVLW  4F
0F01:  BSF    03.6
0F02:  MOVWF  1E
0F03:  MOVLW  4E
0F04:  MOVWF  1F
0F05:  CLRF   20
....................             I2C_LCD_Set_Cursor(0, 10);
0F06:  CLRF   59
0F07:  MOVLW  0A
0F08:  MOVWF  5A
0F09:  BCF    0A.3
0F0A:  BCF    03.6
0F0B:  CALL   1DA
0F0C:  BSF    0A.3
....................             I2C_LCD_Write_String(line1);
0F0D:  MOVLW  01
0F0E:  BSF    03.6
0F0F:  MOVWF  5A
0F10:  MOVLW  1E
0F11:  MOVWF  59
0F12:  BCF    0A.3
0F13:  BCF    03.6
0F14:  CALL   209
0F15:  BSF    0A.3
....................          }
0F16:  GOTO   72E
....................          else{
....................             char line1[] = "OFF";
0F17:  MOVLW  4F
0F18:  BSF    03.6
0F19:  MOVWF  21
0F1A:  MOVLW  46
0F1B:  MOVWF  22
0F1C:  MOVWF  23
0F1D:  CLRF   24
....................             I2C_LCD_Set_Cursor(0, 10);
0F1E:  CLRF   59
0F1F:  MOVLW  0A
0F20:  MOVWF  5A
0F21:  BCF    0A.3
0F22:  BCF    03.6
0F23:  CALL   1DA
0F24:  BSF    0A.3
....................             I2C_LCD_Write_String(line1);
0F25:  MOVLW  01
0F26:  BSF    03.6
0F27:  MOVWF  5A
0F28:  MOVLW  21
0F29:  MOVWF  59
0F2A:  BCF    0A.3
0F2B:  BCF    03.6
0F2C:  CALL   209
0F2D:  BSF    0A.3
....................          }
....................       }
....................       I2C_LCD_Set_Cursor(1, 0);
0F2E:  MOVLW  01
0F2F:  BSF    03.6
0F30:  MOVWF  59
0F31:  CLRF   5A
0F32:  BCF    0A.3
0F33:  BCF    03.6
0F34:  CALL   1DA
0F35:  BSF    0A.3
....................       if (chinh == 2 && bct == 0){
0F36:  MOVF   40,W
0F37:  SUBLW  02
0F38:  BTFSS  03.2
0F39:  GOTO   74A
0F3A:  BTFSC  2D.2
0F3B:  GOTO   74A
....................          char line1[] = "  ";
0F3C:  MOVLW  20
0F3D:  BSF    03.6
0F3E:  MOVWF  25
0F3F:  MOVWF  26
0F40:  CLRF   27
....................          I2C_LCD_Write_String(line1);
0F41:  MOVLW  01
0F42:  MOVWF  5A
0F43:  MOVLW  25
0F44:  MOVWF  59
0F45:  BCF    0A.3
0F46:  BCF    03.6
0F47:  CALL   209
0F48:  BSF    0A.3
....................       } 
0F49:  GOTO   772
....................       else {
....................          I2C_LCD_Write_Data((set_gio / 10) + '0');
0F4A:  MOVF   3D,W
0F4B:  BSF    03.6
0F4C:  MOVWF  5D
0F4D:  MOVLW  0A
0F4E:  MOVWF  5E
0F4F:  BCF    0A.3
0F50:  BCF    03.6
0F51:  CALL   627
0F52:  BSF    0A.3
0F53:  MOVLW  30
0F54:  ADDWF  78,W
0F55:  BSF    03.5
0F56:  MOVWF  6E
0F57:  BCF    03.5
0F58:  BSF    03.6
0F59:  MOVWF  3C
0F5A:  BCF    0A.3
0F5B:  BCF    03.6
0F5C:  CALL   773
0F5D:  BSF    0A.3
....................          I2C_LCD_Write_Data((set_gio % 10) + '0');
0F5E:  MOVF   3D,W
0F5F:  BSF    03.6
0F60:  MOVWF  5D
0F61:  MOVLW  0A
0F62:  MOVWF  5E
0F63:  BCF    0A.3
0F64:  BCF    03.6
0F65:  CALL   627
0F66:  BSF    0A.3
0F67:  MOVLW  30
0F68:  ADDWF  77,W
0F69:  BSF    03.5
0F6A:  MOVWF  6E
0F6B:  BCF    03.5
0F6C:  BSF    03.6
0F6D:  MOVWF  3C
0F6E:  BCF    0A.3
0F6F:  BCF    03.6
0F70:  CALL   773
0F71:  BSF    0A.3
....................       }
....................    
....................       I2C_LCD_Write_Data(':');
0F72:  MOVLW  3A
0F73:  BSF    03.6
0F74:  MOVWF  3C
0F75:  BCF    0A.3
0F76:  BCF    03.6
0F77:  CALL   773
0F78:  BSF    0A.3
....................    
....................       if (chinh == 3 && bct == 0){
0F79:  MOVF   40,W
0F7A:  SUBLW  03
0F7B:  BTFSS  03.2
0F7C:  GOTO   78D
0F7D:  BTFSC  2D.2
0F7E:  GOTO   78D
....................          char line1[] = "  ";
0F7F:  MOVLW  20
0F80:  BSF    03.6
0F81:  MOVWF  28
0F82:  MOVWF  29
0F83:  CLRF   2A
....................          I2C_LCD_Write_String(line1);
0F84:  MOVLW  01
0F85:  MOVWF  5A
0F86:  MOVLW  28
0F87:  MOVWF  59
0F88:  BCF    0A.3
0F89:  BCF    03.6
0F8A:  CALL   209
0F8B:  BSF    0A.3
....................       } 
0F8C:  GOTO   7B5
....................       else {
....................          I2C_LCD_Write_Data((set_phut / 10) + '0');
0F8D:  MOVF   3E,W
0F8E:  BSF    03.6
0F8F:  MOVWF  5D
0F90:  MOVLW  0A
0F91:  MOVWF  5E
0F92:  BCF    0A.3
0F93:  BCF    03.6
0F94:  CALL   627
0F95:  BSF    0A.3
0F96:  MOVLW  30
0F97:  ADDWF  78,W
0F98:  BSF    03.5
0F99:  MOVWF  6E
0F9A:  BCF    03.5
0F9B:  BSF    03.6
0F9C:  MOVWF  3C
0F9D:  BCF    0A.3
0F9E:  BCF    03.6
0F9F:  CALL   773
0FA0:  BSF    0A.3
....................          I2C_LCD_Write_Data((set_phut % 10) + '0');
0FA1:  MOVF   3E,W
0FA2:  BSF    03.6
0FA3:  MOVWF  5D
0FA4:  MOVLW  0A
0FA5:  MOVWF  5E
0FA6:  BCF    0A.3
0FA7:  BCF    03.6
0FA8:  CALL   627
0FA9:  BSF    0A.3
0FAA:  MOVLW  30
0FAB:  ADDWF  77,W
0FAC:  BSF    03.5
0FAD:  MOVWF  6E
0FAE:  BCF    03.5
0FAF:  BSF    03.6
0FB0:  MOVWF  3C
0FB1:  BCF    0A.3
0FB2:  BCF    03.6
0FB3:  CALL   773
0FB4:  BSF    0A.3
....................       }
....................    
....................       I2C_LCD_Write_Data(':');
0FB5:  MOVLW  3A
0FB6:  BSF    03.6
0FB7:  MOVWF  3C
0FB8:  BCF    0A.3
0FB9:  BCF    03.6
0FBA:  CALL   773
0FBB:  BSF    0A.3
.................... 
....................       if (chinh == 4 && bct == 0){
0FBC:  MOVF   40,W
0FBD:  SUBLW  04
0FBE:  BTFSS  03.2
0FBF:  GOTO   7D0
0FC0:  BTFSC  2D.2
0FC1:  GOTO   7D0
....................          char line1[] = "  ";
0FC2:  MOVLW  20
0FC3:  BSF    03.6
0FC4:  MOVWF  2B
0FC5:  MOVWF  2C
0FC6:  CLRF   2D
....................          I2C_LCD_Write_String(line1);
0FC7:  MOVLW  01
0FC8:  MOVWF  5A
0FC9:  MOVLW  2B
0FCA:  MOVWF  59
0FCB:  BCF    0A.3
0FCC:  BCF    03.6
0FCD:  CALL   209
0FCE:  BSF    0A.3
....................       } 
0FCF:  GOTO   7F8
....................       else {
....................          I2C_LCD_Write_Data((set_giay / 10) + '0');
0FD0:  MOVF   3F,W
0FD1:  BSF    03.6
0FD2:  MOVWF  5D
0FD3:  MOVLW  0A
0FD4:  MOVWF  5E
0FD5:  BCF    0A.3
0FD6:  BCF    03.6
0FD7:  CALL   627
0FD8:  BSF    0A.3
0FD9:  MOVLW  30
0FDA:  ADDWF  78,W
0FDB:  BSF    03.5
0FDC:  MOVWF  6E
0FDD:  BCF    03.5
0FDE:  BSF    03.6
0FDF:  MOVWF  3C
0FE0:  BCF    0A.3
0FE1:  BCF    03.6
0FE2:  CALL   773
0FE3:  BSF    0A.3
....................          I2C_LCD_Write_Data((set_giay % 10) + '0');
0FE4:  MOVF   3F,W
0FE5:  BSF    03.6
0FE6:  MOVWF  5D
0FE7:  MOVLW  0A
0FE8:  MOVWF  5E
0FE9:  BCF    0A.3
0FEA:  BCF    03.6
0FEB:  CALL   627
0FEC:  BSF    0A.3
0FED:  MOVLW  30
0FEE:  ADDWF  77,W
0FEF:  BSF    03.5
0FF0:  MOVWF  6E
0FF1:  BCF    03.5
0FF2:  BSF    03.6
0FF3:  MOVWF  3C
0FF4:  BCF    0A.3
0FF5:  BCF    03.6
0FF6:  CALL   773
0FF7:  BSF    0A.3
....................       }
....................    }
0FF8:  GOTO   7FD
....................    else if (mode_bt == 7)
0FF9:  MOVF   48,W
0FFA:  SUBLW  07
0FFB:  BTFSC  03.2
....................    {
....................       mode_bt = 0;
0FFC:  CLRF   48
....................    }
0FFD:  BCF    0A.3
0FFE:  BSF    0A.4
0FFF:  GOTO   5F2 (RETURN)
.................... }
.................... void bao_thuc()
.................... {
....................    IF (set_gio == gio&&set_phut == phut&&set_giay==giay)
*
040E:  MOVF   36,W
040F:  SUBWF  3D,W
0410:  BTFSS  03.2
0411:  GOTO   41A
0412:  MOVF   37,W
0413:  SUBWF  3E,W
0414:  BTFSS  03.2
0415:  GOTO   41A
0416:  MOVF   38,W
0417:  SUBWF  3F,W
0418:  BTFSC  03.2
....................    {
....................       flag_enable = 1;
0419:  BSF    2D.0
....................    }
.................... 
....................    IF (flag_enable == 1)
041A:  BTFSS  2D.0
041B:  GOTO   430
....................    {
....................       if(toggle){
041C:  BTFSS  2D.1
041D:  GOTO   427
....................          output_high(BUZZER);
041E:  BSF    03.5
041F:  BCF    05.4
0420:  BCF    03.5
0421:  BSF    05.4
....................          output_low(LED1);
0422:  BSF    03.5
0423:  BCF    09.0
0424:  BCF    03.5
0425:  BCF    09.0
....................       }
0426:  GOTO   42F
....................       else
....................       {
....................          output_low(BUZZER);
0427:  BSF    03.5
0428:  BCF    05.4
0429:  BCF    03.5
042A:  BCF    05.4
....................          output_high(LED1);
042B:  BSF    03.5
042C:  BCF    09.0
042D:  BCF    03.5
042E:  BSF    09.0
....................       }
....................    }
042F:  GOTO   438
....................   ELSE
....................   {
....................     output_high(LED1);
0430:  BSF    03.5
0431:  BCF    09.0
0432:  BCF    03.5
0433:  BSF    09.0
....................     output_low(BUZZER);
0434:  BSF    03.5
0435:  BCF    05.4
0436:  BCF    03.5
0437:  BCF    05.4
....................   }
0438:  BCF    0A.3
0439:  BSF    0A.4
043A:  GOTO   48A (RETURN)
.................... }
.................... //========================================
.................... 

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
